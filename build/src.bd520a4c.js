parcelRequire=function(e){var r="function"==typeof parcelRequire&&parcelRequire,n="function"==typeof require&&require,i={};function u(e,u){if(e in i)return i[e];var t="function"==typeof parcelRequire&&parcelRequire;if(!u&&t)return t(e,!0);if(r)return r(e,!0);if(n&&"string"==typeof e)return n(e);var o=new Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}return u.register=function(e,r){i[e]=r},i=e(u),u.modules=i,u}(function (require) {var bb={};const yb={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},zb={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Ki=0,_f=1,Li=2,ag=1,Mi=2,jc=3,kc=0,ra=1,Ab=2,bg=1,lc=0,mc=1,cg=2,dg=3,eg=4,Ni=5,Bb=100,Oi=101,Pi=102,Qi=200,Ri=201,Si=202,Ti=203,fg=204,gg=205,Ui=206,Vi=207,Wi=208,Xi=209,Yi=210,Zi=0,$i=1,_i=2,Zd=3,aj=4,bj=5,cj=6,dj=7,Uc=0,ej=1,fj=2,Cb=0,gj=1,hj=2,ij=3,jj=4,kj=5,hg=300,$d=301,_d=302,ig=303,jg=304,je=306,ke=307,qe=1e3,Fa=1001,we=1002,za=1003,kg=1004,lg=1005,Ja=1006,lj=1007,Vc=1008,Wc=1009,mj=1010,nj=1011,Xc=1012,oj=1013,Yc=1014,cb=1015,Db=1016,pj=1017,qj=1018,rj=1019,nc=1020,sj=1021,tb=1022,Oa=1023,tj=1024,uj=1025,Eb=1026,oc=1027,vj=1028,wj=1029,xj=1030,yj=1031,zj=1032,Aj=1033,mg=33776,ng=33777,og=33778,pg=33779,qg=35840,rg=35841,sg=35842,tg=35843,Bj=36196,ug=37492,vg=37496,Cj=37808,Dj=37809,Ej=37810,Fj=37811,Gj=37812,Hj=37813,Ij=37814,Jj=37815,Kj=37816,Lj=37817,Mj=37818,Nj=37819,Oj=37820,Pj=37821,Qj=36492,Rj=37840,Sj=37841,Tj=37842,Uj=37843,Vj=37844,Wj=37845,Xj=37846,Yj=37847,Zj=37848,$j=37849,_j=37850,ak=37851,bk=37852,ck=37853,dk=2200,ek=2201,fk=2202,Zc=2300,$c=2301,ze=2302,Fb=2400,Gb=2401,_c=2402,Ae=2500,wg=2501,pc=3e3,xg=3001,gk=3007,hk=3002,ik=3003,jk=3004,kk=3005,lk=3006,mk=3200,nk=3201,Hb=0,ok=1,Ce=7680,pk=519,qc=35044,ad=35048,yg="300 es";class db{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const r=this._listeners;void 0===r[e]&&(r[e]=[]),-1===r[e].indexOf(t)&&r[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;const r=this._listeners;return void 0!==r[e]&&-1!==r[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;const r=this._listeners[e];if(void 0!==r){const e=r.indexOf(t);-1!==e&&r.splice(e,1)}}dispatchEvent(e){if(void 0===this._listeners)return;const t=this._listeners[e.type];if(void 0!==t){e.target=this;const r=t.slice(0);for(let t=0,n=r.length;t<n;t++)r[t].call(this,e);e.target=null}}}const va=[];for(let e=0;e<256;e++)va[e]=(e<16?"0":"")+e.toString(16);let qk=1234567;const Ib=Math.PI/180,rc=180/Math.PI;function Ga(){const e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,r=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return(va[255&e]+va[e>>8&255]+va[e>>16&255]+va[e>>24&255]+"-"+va[255&t]+va[t>>8&255]+"-"+va[t>>16&15|64]+va[t>>24&255]+"-"+va[63&r|128]+va[r>>8&255]+"-"+va[r>>16&255]+va[r>>24&255]+va[255&n]+va[n>>8&255]+va[n>>16&255]+va[n>>24&255]).toUpperCase()}function wa(e,t,r){return Math.max(t,Math.min(r,e))}function De(e,t){return(e%t+t)%t}function rk(e,t,r,n,i){return n+(e-t)*(i-n)/(r-t)}function sk(e,t,r){return e!==t?(r-e)/(t-e):0}function sc(e,t,r){return(1-r)*e+r*t}function tk(e,t,r,n){return sc(e,t,1-Math.exp(-r*n))}function uk(e,t=1){return t-Math.abs(De(e,2*t)-t)}function vk(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t))*e*(3-2*e)}function wk(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t))*e*e*(e*(6*e-15)+10)}function xk(e,t){return e+Math.floor(Math.random()*(t-e+1))}function yk(e,t){return e+Math.random()*(t-e)}function zk(e){return e*(.5-Math.random())}function Ak(e){return void 0!==e&&(qk=e%2147483647),((qk=16807*qk%2147483647)-1)/2147483646}function Bk(e){return e*Ib}function Ck(e){return e*rc}function Ee(e){return 0==(e&e-1)&&0!==e}function zg(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))}function Ag(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}function Dk(e,t,r,n,i){const a=Math.cos,o=Math.sin,s=a(r/2),$=o(r/2),l=a((t+n)/2),c=o((t+n)/2),p=a((t-n)/2),h=o((t-n)/2),u=a((n-t)/2),g=o((n-t)/2);switch(i){case"XYX":e.set(s*c,$*p,$*h,s*l);break;case"YZY":e.set($*h,s*c,$*p,s*l);break;case"ZXZ":e.set($*p,$*h,s*c,s*l);break;case"XZX":e.set(s*c,$*g,$*u,s*l);break;case"YXY":e.set($*u,s*c,$*g,s*l);break;case"ZYZ":e.set($*g,$*u,s*c,s*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i);}}var a=Object.freeze({__proto__:null,DEG2RAD:Ib,RAD2DEG:rc,generateUUID:Ga,clamp:wa,euclideanModulo:De,mapLinear:rk,inverseLerp:sk,lerp:sc,damp:tk,pingpong:uk,smoothstep:vk,smootherstep:wk,randInt:xk,randFloat:yk,randFloatSpread:zk,seededRandom:Ak,degToRad:Bk,radToDeg:Ck,isPowerOfTwo:Ee,ceilPowerOfTwo:zg,floorPowerOfTwo:Ag,setQuaternionFromProperEuler:Dk});class ba{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e);}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e);}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,r=this.y,n=e.elements;return this.x=n[0]*t+n[3]*r+n[6],this.y=n[1]*t+n[4]*r+n[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,r=this.y-e.y;return t*t+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,r){return void 0!==r&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const r=Math.cos(t),n=Math.sin(t),i=this.x-e.x,a=this.y-e.y;return this.x=i*r-a*n+e.x,this.y=i*n+a*r+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}ba.prototype.isVector2=!0;class xa{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,r,n,i,a,o,s,$){const l=this.elements;return l[0]=e,l[1]=n,l[2]=o,l[3]=t,l[4]=i,l[5]=s,l[6]=r,l[7]=a,l[8]=$,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],this}extractBasis(e,t,r){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),r.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const r=e.elements,n=t.elements,i=this.elements,a=r[0],o=r[3],s=r[6],$=r[1],l=r[4],c=r[7],p=r[2],h=r[5],u=r[8],g=n[0],d=n[3],m=n[6],f=n[1],x=n[4],v=n[7],B=n[2],_=n[5],K=n[8];return i[0]=a*g+o*f+s*B,i[3]=a*d+o*x+s*_,i[6]=a*m+o*v+s*K,i[1]=$*g+l*f+c*B,i[4]=$*d+l*x+c*_,i[7]=$*m+l*v+c*K,i[2]=p*g+h*f+u*B,i[5]=p*d+h*x+u*_,i[8]=p*m+h*v+u*K,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],o=e[5],s=e[6],$=e[7],l=e[8];return t*a*l-t*o*$-r*i*l+r*o*s+n*i*$-n*a*s}invert(){const e=this.elements,t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],o=e[5],s=e[6],$=e[7],l=e[8],c=l*a-o*$,p=o*s-l*i,h=$*i-a*s,u=t*c+r*p+n*h;if(0===u)return this.set(0,0,0,0,0,0,0,0,0);const g=1/u;return e[0]=c*g,e[1]=(n*$-l*r)*g,e[2]=(o*r-n*a)*g,e[3]=p*g,e[4]=(l*t-n*s)*g,e[5]=(n*i-o*t)*g,e[6]=h*g,e[7]=(r*s-$*t)*g,e[8]=(a*t-r*i)*g,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,r,n,i,a,o){const s=Math.cos(i),$=Math.sin(i);return this.set(r*s,r*$,-r*(s*a+$*o)+a+e,-n*$,n*s,-n*(-$*a+s*o)+o+t,0,0,1),this}scale(e,t){const r=this.elements;return r[0]*=e,r[3]*=e,r[6]*=e,r[1]*=t,r[4]*=t,r[7]*=t,this}rotate(e){const t=Math.cos(e),r=Math.sin(e),n=this.elements,i=n[0],a=n[3],o=n[6],s=n[1],$=n[4],l=n[7];return n[0]=t*i+r*s,n[3]=t*a+r*$,n[6]=t*o+r*l,n[1]=-r*i+t*s,n[4]=-r*a+t*$,n[7]=-r*o+t*l,this}translate(e,t){const r=this.elements;return r[0]+=e*r[2],r[3]+=e*r[5],r[6]+=e*r[8],r[1]+=t*r[2],r[4]+=t*r[5],r[7]+=t*r[8],this}equals(e){const t=this.elements,r=e.elements;for(let n=0;n<9;n++)if(t[n]!==r[n])return!1;return!0}fromArray(e,t=0){for(let r=0;r<9;r++)this.elements[r]=e[r+t];return this}toArray(e=[],t=0){const r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e}clone(){return new this.constructor().fromArray(this.elements)}}let tc;xa.prototype.isMatrix3=!0;class Jb{static getDataURL(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===tc&&(tc=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),tc.width=e.width,tc.height=e.height;const r=tc.getContext("2d");e instanceof ImageData?r.putImageData(e,0,0):r.drawImage(e,0,0,e.width,e.height),t=tc}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}}let Ek=0;class Aa extends db{constructor(e=Aa.DEFAULT_IMAGE,t=Aa.DEFAULT_MAPPING,r=Fa,n=Fa,i=Ja,a=Vc,o=Oa,s=Wc,$=1,l=pc){super(),Object.defineProperty(this,"id",{value:Ek++}),this.uuid=Ga(),this.name="",this.image=e,this.mipmaps=[],this.mapping=t,this.wrapS=r,this.wrapT=n,this.magFilter=i,this.minFilter=a,this.anisotropy=$,this.format=o,this.internalFormat=null,this.type=s,this.offset=new ba(0,0),this.repeat=new ba(1,1),this.center=new ba(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new xa,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=l,this.version=0,this.onUpdate=null}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const r={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const n=this.image;if(void 0===n.uuid&&(n.uuid=Ga()),!t&&void 0===e.images[n.uuid]){let t;if(Array.isArray(n)){t=[];for(let e=0,r=n.length;e<r;e++)n[e].isDataTexture?t.push(Fe(n[e].image)):t.push(Fe(n[e]))}else t=Fe(n);e.images[n.uuid]={uuid:n.uuid,url:t}}r.image=n.uuid}return t||(e.textures[this.uuid]=r),r}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==hg)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case qe:e.x=e.x-Math.floor(e.x);break;case Fa:e.x=e.x<0?0:1;break;case we:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);}if(e.y<0||e.y>1)switch(this.wrapT){case qe:e.y=e.y-Math.floor(e.y);break;case Fa:e.y=e.y<0?0:1;break;case we:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&this.version++}}function Fe(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?Jb.getDataURL(e):e.data?{data:Array.prototype.slice.call(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}Aa.DEFAULT_IMAGE=void 0,Aa.DEFAULT_MAPPING=hg,Aa.prototype.isTexture=!0;class la{constructor(e=0,t=0,r=0,n=1){this.x=e,this.y=t,this.z=r,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,r,n){return this.x=e,this.y=t,this.z=r,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e);}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e);}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,r=this.y,n=this.z,i=this.w,a=e.elements;return this.x=a[0]*t+a[4]*r+a[8]*n+a[12]*i,this.y=a[1]*t+a[5]*r+a[9]*n+a[13]*i,this.z=a[2]*t+a[6]*r+a[10]*n+a[14]*i,this.w=a[3]*t+a[7]*r+a[11]*n+a[15]*i,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,r,n,i;const a=e.elements,o=a[0],s=a[4],$=a[8],l=a[1],c=a[5],p=a[9],h=a[2],u=a[6],g=a[10];if(Math.abs(s-l)<.01&&Math.abs($-h)<.01&&Math.abs(p-u)<.01){if(Math.abs(s+l)<.1&&Math.abs($+h)<.1&&Math.abs(p+u)<.1&&Math.abs(o+c+g-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const e=(o+1)/2,a=(c+1)/2,d=(g+1)/2,m=(s+l)/4,f=($+h)/4,x=(p+u)/4;return e>a&&e>d?e<.01?(r=0,n=.707106781,i=.707106781):(n=m/(r=Math.sqrt(e)),i=f/r):a>d?a<.01?(r=.707106781,n=0,i=.707106781):(r=m/(n=Math.sqrt(a)),i=x/n):d<.01?(r=.707106781,n=.707106781,i=0):(r=f/(i=Math.sqrt(d)),n=x/i),this.set(r,n,i,t),this}let d=Math.sqrt((u-p)*(u-p)+($-h)*($-h)+(l-s)*(l-s));return Math.abs(d)<.001&&(d=1),this.x=(u-p)/d,this.y=($-h)/d,this.z=(l-s)/d,this.w=Math.acos((o+c+g-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this.w=e.w+(t.w-e.w)*r,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,r){return void 0!==r&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}la.prototype.isVector4=!0;class Wa extends db{constructor(e,t,r={}){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new la(0,0,e,t),this.scissorTest=!1,this.viewport=new la(0,0,e,t),this.texture=new Aa(void 0,r.mapping,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy,r.encoding),this.texture.image={width:e,height:t,depth:1},this.texture.generateMipmaps=void 0!==r.generateMipmaps&&r.generateMipmaps,this.texture.minFilter=void 0!==r.minFilter?r.minFilter:Ja,this.depthBuffer=void 0===r.depthBuffer||r.depthBuffer,this.stencilBuffer=void 0!==r.stencilBuffer&&r.stencilBuffer,this.depthTexture=void 0!==r.depthTexture?r.depthTexture:null}setTexture(e){e.image={width:this.width,height:this.height,depth:this.depth},this.texture=e}setSize(e,t,r=1){this.width===e&&this.height===t&&this.depth===r||(this.width=e,this.height=t,this.depth=r,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=r,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.image={...this.texture.image},this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}Wa.prototype.isWebGLRenderTarget=!0;class Fk extends Wa{constructor(e,t,r){super(e,t);const n=this.texture;this.texture=[];for(let i=0;i<r;i++)this.texture[i]=n.clone()}setSize(e,t,r=1){if(this.width!==e||this.height!==t||this.depth!==r){this.width=e,this.height=t,this.depth=r;for(let n=0,i=this.texture.length;n<i;n++)this.texture[n].image.width=e,this.texture[n].image.height=t,this.texture[n].image.depth=r;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this.texture.length=0;for(let t=0,r=e.texture.length;t<r;t++)this.texture[t]=e.texture[t].clone();return this}}Fk.prototype.isWebGLMultipleRenderTargets=!0;class Bg extends Wa{constructor(e,t,r){super(e,t,r),this.samples=4}copy(e){return super.copy.call(this,e),this.samples=e.samples,this}}Bg.prototype.isWebGLMultisampleRenderTarget=!0;class ta{constructor(e=0,t=0,r=0,n=1){this._x=e,this._y=t,this._z=r,this._w=n}static slerp(e,t,r,n){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),r.slerpQuaternions(e,t,n)}static slerpFlat(e,t,r,n,i,a,o){let s=r[n+0],$=r[n+1],l=r[n+2],c=r[n+3];const p=i[a+0],h=i[a+1],u=i[a+2],g=i[a+3];if(0===o)return e[t+0]=s,e[t+1]=$,e[t+2]=l,void(e[t+3]=c);if(1===o)return e[t+0]=p,e[t+1]=h,e[t+2]=u,void(e[t+3]=g);if(c!==g||s!==p||$!==h||l!==u){let e=1-o;const t=s*p+$*h+l*u+c*g,r=t>=0?1:-1,n=1-t*t;if(n>Number.EPSILON){const i=Math.sqrt(n),a=Math.atan2(i,t*r);e=Math.sin(e*a)/i,o=Math.sin(o*a)/i}const i=o*r;if(s=s*e+p*i,$=$*e+h*i,l=l*e+u*i,c=c*e+g*i,e===1-o){const e=1/Math.sqrt(s*s+$*$+l*l+c*c);s*=e,$*=e,l*=e,c*=e}}e[t]=s,e[t+1]=$,e[t+2]=l,e[t+3]=c}static multiplyQuaternionsFlat(e,t,r,n,i,a){const o=r[n],s=r[n+1],$=r[n+2],l=r[n+3],c=i[a],p=i[a+1],h=i[a+2],u=i[a+3];return e[t]=o*u+l*c+s*h-$*p,e[t+1]=s*u+l*p+$*c-o*h,e[t+2]=$*u+l*h+o*p-s*c,e[t+3]=l*u-o*c-s*p-$*h,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,r,n){return this._x=e,this._y=t,this._z=r,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const r=e._x,n=e._y,i=e._z,a=e._order,o=Math.cos,s=Math.sin,$=o(r/2),l=o(n/2),c=o(i/2),p=s(r/2),h=s(n/2),u=s(i/2);switch(a){case"XYZ":this._x=p*l*c+$*h*u,this._y=$*h*c-p*l*u,this._z=$*l*u+p*h*c,this._w=$*l*c-p*h*u;break;case"YXZ":this._x=p*l*c+$*h*u,this._y=$*h*c-p*l*u,this._z=$*l*u-p*h*c,this._w=$*l*c+p*h*u;break;case"ZXY":this._x=p*l*c-$*h*u,this._y=$*h*c+p*l*u,this._z=$*l*u+p*h*c,this._w=$*l*c-p*h*u;break;case"ZYX":this._x=p*l*c-$*h*u,this._y=$*h*c+p*l*u,this._z=$*l*u-p*h*c,this._w=$*l*c+p*h*u;break;case"YZX":this._x=p*l*c+$*h*u,this._y=$*h*c+p*l*u,this._z=$*l*u-p*h*c,this._w=$*l*c-p*h*u;break;case"XZY":this._x=p*l*c-$*h*u,this._y=$*h*c-p*l*u,this._z=$*l*u+p*h*c,this._w=$*l*c+p*h*u;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a);}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const r=t/2,n=Math.sin(r);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(r),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,r=t[0],n=t[4],i=t[8],a=t[1],o=t[5],s=t[9],$=t[2],l=t[6],c=t[10],p=r+o+c;if(p>0){const e=.5/Math.sqrt(p+1);this._w=.25/e,this._x=(l-s)*e,this._y=(i-$)*e,this._z=(a-n)*e}else if(r>o&&r>c){const e=2*Math.sqrt(1+r-o-c);this._w=(l-s)/e,this._x=.25*e,this._y=(n+a)/e,this._z=(i+$)/e}else if(o>c){const e=2*Math.sqrt(1+o-r-c);this._w=(i-$)/e,this._x=(n+a)/e,this._y=.25*e,this._z=(s+l)/e}else{const e=2*Math.sqrt(1+c-r-o);this._w=(a-n)/e,this._x=(i+$)/e,this._y=(s+l)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let r=e.dot(t)+1;return r<Number.EPSILON?(r=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=r):(this._x=0,this._y=-e.z,this._z=e.y,this._w=r)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=r),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(wa(this.dot(e),-1,1)))}rotateTowards(e,t){const r=this.angleTo(e);if(0===r)return this;const n=Math.min(1,t/r);return this.slerp(e,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const r=e._x,n=e._y,i=e._z,a=e._w,o=t._x,s=t._y,$=t._z,l=t._w;return this._x=r*l+a*o+n*$-i*s,this._y=n*l+a*s+i*o-r*$,this._z=i*l+a*$+r*s-n*o,this._w=a*l-r*o-n*s-i*$,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);const r=this._x,n=this._y,i=this._z,a=this._w;let o=a*e._w+r*e._x+n*e._y+i*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=r,this._y=n,this._z=i,this;const s=1-o*o;if(s<=Number.EPSILON){const e=1-t;return this._w=e*a+t*this._w,this._x=e*r+t*this._x,this._y=e*n+t*this._y,this._z=e*i+t*this._z,this.normalize(),this._onChangeCallback(),this}const $=Math.sqrt(s),l=Math.atan2($,o),c=Math.sin((1-t)*l)/$,p=Math.sin(t*l)/$;return this._w=a*c+this._w*p,this._x=r*c+this._x*p,this._y=n*c+this._y*p,this._z=i*c+this._z*p,this._onChangeCallback(),this}slerpQuaternions(e,t,r){this.copy(e).slerp(t,r)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}ta.prototype.isQuaternion=!0;class aa{constructor(e=0,t=0,r=0){this.x=e,this.y=t,this.z=r}set(e,t,r){return void 0===r&&(r=this.z),this.x=e,this.y=t,this.z=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e);}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e);}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Cg.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Cg.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,r=this.y,n=this.z,i=e.elements;return this.x=i[0]*t+i[3]*r+i[6]*n,this.y=i[1]*t+i[4]*r+i[7]*n,this.z=i[2]*t+i[5]*r+i[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,r=this.y,n=this.z,i=e.elements,a=1/(i[3]*t+i[7]*r+i[11]*n+i[15]);return this.x=(i[0]*t+i[4]*r+i[8]*n+i[12])*a,this.y=(i[1]*t+i[5]*r+i[9]*n+i[13])*a,this.z=(i[2]*t+i[6]*r+i[10]*n+i[14])*a,this}applyQuaternion(e){const t=this.x,r=this.y,n=this.z,i=e.x,a=e.y,o=e.z,s=e.w,$=s*t+a*n-o*r,l=s*r+o*t-i*n,c=s*n+i*r-a*t,p=-i*t-a*r-o*n;return this.x=$*s+p*-i+l*-o-c*-a,this.y=l*s+p*-a+c*-i-$*-o,this.z=c*s+p*-o+$*-a-l*-i,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,r=this.y,n=this.z,i=e.elements;return this.x=i[0]*t+i[4]*r+i[8]*n,this.y=i[1]*t+i[5]*r+i[9]*n,this.z=i[2]*t+i[6]*r+i[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this}cross(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const r=e.x,n=e.y,i=e.z,a=t.x,o=t.y,s=t.z;return this.x=n*s-i*o,this.y=i*a-r*s,this.z=r*o-n*a,this}projectOnVector(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const r=e.dot(this)/t;return this.copy(e).multiplyScalar(r)}projectOnPlane(e){return Ge.copy(this).projectOnVector(e),this.sub(Ge)}reflect(e){return this.sub(Ge.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const r=this.dot(e)/t;return Math.acos(wa(r,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,r=this.y-e.y,n=this.z-e.z;return t*t+r*r+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,r){const n=Math.sin(t)*e;return this.x=n*Math.sin(r),this.y=Math.cos(t)*e,this.z=n*Math.cos(r),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,r){return this.x=e*Math.sin(t),this.y=r,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),r=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=r,this.z=n,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,r){return void 0!==r&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}aa.prototype.isVector3=!0;const Ge=new aa,Cg=new ta;class Ka{constructor(e=new aa(1/0,1/0,1/0),t=new aa(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,r=1/0,n=1/0,i=-1/0,a=-1/0,o=-1/0;for(let s=0,$=e.length;s<$;s+=3){const $=e[s],l=e[s+1],c=e[s+2];$<t&&(t=$),l<r&&(r=l),c<n&&(n=c),$>i&&(i=$),l>a&&(a=l),c>o&&(o=c)}return this.min.set(t,r,n),this.max.set(i,a,o),this}setFromBufferAttribute(e){let t=1/0,r=1/0,n=1/0,i=-1/0,a=-1/0,o=-1/0;for(let s=0,$=e.count;s<$;s++){const $=e.getX(s),l=e.getY(s),c=e.getZ(s);$<t&&(t=$),l<r&&(r=l),c<n&&(n=c),$>i&&(i=$),l>a&&(a=l),c>o&&(o=c)}return this.min.set(t,r,n),this.max.set(i,a,o),this}setFromPoints(e){this.makeEmpty();for(let t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const r=uc.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);const t=e.geometry;void 0!==t&&(null===t.boundingBox&&t.computeBoundingBox(),He.copy(t.boundingBox),He.applyMatrix4(e.matrixWorld),this.union(He));const r=e.children;for(let n=0,i=r.length;n<i;n++)this.expandByObject(r[n]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,uc),uc.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,r;return e.normal.x>0?(t=e.normal.x*this.min.x,r=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,r=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,r+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,r+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,r+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,r+=e.normal.z*this.min.z),t<=-e.constant&&r>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(vc),bd.subVectors(this.max,vc),Kb.subVectors(e.a,vc),Lb.subVectors(e.b,vc),Mb.subVectors(e.c,vc),eb.subVectors(Lb,Kb),fb.subVectors(Mb,Lb),ub.subVectors(Kb,Mb);let t=[0,-eb.z,eb.y,0,-fb.z,fb.y,0,-ub.z,ub.y,eb.z,0,-eb.x,fb.z,0,-fb.x,ub.z,0,-ub.x,-eb.y,eb.x,0,-fb.y,fb.x,0,-ub.y,ub.x,0];return!!Ie(t,Kb,Lb,Mb,bd)&&!!Ie(t=[1,0,0,0,1,0,0,0,1],Kb,Lb,Mb,bd)&&(cd.crossVectors(eb,fb),Ie(t=[cd.x,cd.y,cd.z],Kb,Lb,Mb,bd))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return uc.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=.5*this.getSize(uc).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Xa[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Xa[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Xa[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Xa[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Xa[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Xa[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Xa[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Xa[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Xa),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}Ka.prototype.isBox3=!0;const Xa=[new aa,new aa,new aa,new aa,new aa,new aa,new aa,new aa],uc=new aa,He=new Ka,Kb=new aa,Lb=new aa,Mb=new aa,eb=new aa,fb=new aa,ub=new aa,vc=new aa,bd=new aa,cd=new aa,vb=new aa;function Ie(e,t,r,n,i){for(let a=0,o=e.length-3;a<=o;a+=3){vb.fromArray(e,a);const o=i.x*Math.abs(vb.x)+i.y*Math.abs(vb.y)+i.z*Math.abs(vb.z),s=t.dot(vb),$=r.dot(vb),l=n.dot(vb);if(Math.max(-Math.max(s,$,l),Math.min(s,$,l))>o)return!1}return!0}const Gk=new Ka,Dg=new aa,Je=new aa,Le=new aa;class Nb{constructor(e=new aa,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const r=this.center;void 0!==t?r.copy(t):Gk.setFromPoints(e).getCenter(r);let n=0;for(let i=0,a=e.length;i<a;i++)n=Math.max(n,r.distanceToSquared(e[i]));return this.radius=Math.sqrt(n),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const r=this.center.distanceToSquared(e);return t.copy(e),r>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){Le.subVectors(e,this.center);const t=Le.lengthSq();if(t>this.radius*this.radius){const e=Math.sqrt(t),r=.5*(e-this.radius);this.center.add(Le.multiplyScalar(r/e)),this.radius+=r}return this}union(e){return Je.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(Dg.copy(e.center).add(Je)),this.expandByPoint(Dg.copy(e.center).sub(Je)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Ya=new aa,Ne=new aa,dd=new aa,gb=new aa,Oe=new aa,ed=new aa,Pe=new aa;class Ob{constructor(e=new aa,t=new aa(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ya)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const r=t.dot(this.direction);return r<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(r).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Ya.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ya.copy(this.direction).multiplyScalar(t).add(this.origin),Ya.distanceToSquared(e))}distanceSqToSegment(e,t,r,n){Ne.copy(e).add(t).multiplyScalar(.5),dd.copy(t).sub(e).normalize(),gb.copy(this.origin).sub(Ne);const i=.5*e.distanceTo(t),a=-this.direction.dot(dd),o=gb.dot(this.direction),s=-gb.dot(dd),$=gb.lengthSq(),l=Math.abs(1-a*a);let c,p,h,u;if(l>0){if(p=a*o-s,u=i*l,(c=a*s-o)>=0){if(p>=-u){if(p<=u){const e=1/l;h=(c*=e)*(c+a*(p*=e)+2*o)+p*(a*c+p+2*s)+$}else p=i,h=-(c=Math.max(0,-(a*p+o)))*c+p*(p+2*s)+$;}else p=-i,h=-(c=Math.max(0,-(a*p+o)))*c+p*(p+2*s)+$;}else p<=-u?h=-(c=Math.max(0,-(-a*i+o)))*c+(p=c>0?-i:Math.min(Math.max(-i,-s),i))*(p+2*s)+$:p<=u?(c=0,h=(p=Math.min(Math.max(-i,-s),i))*(p+2*s)+$):h=-(c=Math.max(0,-(a*i+o)))*c+(p=c>0?i:Math.min(Math.max(-i,-s),i))*(p+2*s)+$;}else p=a>0?-i:i,h=-(c=Math.max(0,-(a*p+o)))*c+p*(p+2*s)+$;return r&&r.copy(this.direction).multiplyScalar(c).add(this.origin),n&&n.copy(dd).multiplyScalar(p).add(Ne),h}intersectSphere(e,t){Ya.subVectors(e.center,this.origin);const r=Ya.dot(this.direction),n=Ya.dot(Ya)-r*r,i=e.radius*e.radius;if(n>i)return null;const a=Math.sqrt(i-n),o=r-a,s=r+a;return o<0&&s<0?null:o<0?this.at(s,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;const r=-(this.origin.dot(e.normal)+e.constant)/t;return r>=0?r:null}intersectPlane(e,t){const r=this.distanceToPlane(e);return null===r?null:this.at(r,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let r,n,i,a,o,s;const $=1/this.direction.x,l=1/this.direction.y,c=1/this.direction.z,p=this.origin;return $>=0?(r=(e.min.x-p.x)*$,n=(e.max.x-p.x)*$):(r=(e.max.x-p.x)*$,n=(e.min.x-p.x)*$),l>=0?(i=(e.min.y-p.y)*l,a=(e.max.y-p.y)*l):(i=(e.max.y-p.y)*l,a=(e.min.y-p.y)*l),r>a||i>n?null:((i>r||r!=r)&&(r=i),(a<n||n!=n)&&(n=a),c>=0?(o=(e.min.z-p.z)*c,s=(e.max.z-p.z)*c):(o=(e.max.z-p.z)*c,s=(e.min.z-p.z)*c),r>s||o>n?null:((o>r||r!=r)&&(r=o),(s<n||n!=n)&&(n=s),n<0?null:this.at(r>=0?r:n,t)))}intersectsBox(e){return null!==this.intersectBox(e,Ya)}intersectTriangle(e,t,r,n,i){Oe.subVectors(t,e),ed.subVectors(r,e),Pe.crossVectors(Oe,ed);let a,o=this.direction.dot(Pe);if(o>0){if(n)return null;a=1}else{if(!(o<0))return null;a=-1,o=-o}gb.subVectors(this.origin,e);const s=a*this.direction.dot(ed.crossVectors(gb,ed));if(s<0)return null;const $=a*this.direction.dot(Oe.cross(gb));if($<0)return null;if(s+$>o)return null;const l=-a*gb.dot(Pe);return l<0?null:this.at(l/o,i)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class ea{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,r,n,i,a,o,s,$,l,c,p,h,u,g,d){const m=this.elements;return m[0]=e,m[4]=t,m[8]=r,m[12]=n,m[1]=i,m[5]=a,m[9]=o,m[13]=s,m[2]=$,m[6]=l,m[10]=c,m[14]=p,m[3]=h,m[7]=u,m[11]=g,m[15]=d,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ea().fromArray(this.elements)}copy(e){const t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],t[9]=r[9],t[10]=r[10],t[11]=r[11],t[12]=r[12],t[13]=r[13],t[14]=r[14],t[15]=r[15],this}copyPosition(e){const t=this.elements,r=e.elements;return t[12]=r[12],t[13]=r[13],t[14]=r[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,r){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),r.setFromMatrixColumn(this,2),this}makeBasis(e,t,r){return this.set(e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,r=e.elements,n=1/Pb.setFromMatrixColumn(e,0).length(),i=1/Pb.setFromMatrixColumn(e,1).length(),a=1/Pb.setFromMatrixColumn(e,2).length();return t[0]=r[0]*n,t[1]=r[1]*n,t[2]=r[2]*n,t[3]=0,t[4]=r[4]*i,t[5]=r[5]*i,t[6]=r[6]*i,t[7]=0,t[8]=r[8]*a,t[9]=r[9]*a,t[10]=r[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,r=e.x,n=e.y,i=e.z,a=Math.cos(r),o=Math.sin(r),s=Math.cos(n),$=Math.sin(n),l=Math.cos(i),c=Math.sin(i);if("XYZ"===e.order){const e=a*l,r=a*c,n=o*l,i=o*c;t[0]=s*l,t[4]=-s*c,t[8]=$,t[1]=r+n*$,t[5]=e-i*$,t[9]=-o*s,t[2]=i-e*$,t[6]=n+r*$,t[10]=a*s}else if("YXZ"===e.order){const e=s*l,r=s*c,n=$*l,i=$*c;t[0]=e+i*o,t[4]=n*o-r,t[8]=a*$,t[1]=a*c,t[5]=a*l,t[9]=-o,t[2]=r*o-n,t[6]=i+e*o,t[10]=a*s}else if("ZXY"===e.order){const e=s*l,r=s*c,n=$*l,i=$*c;t[0]=e-i*o,t[4]=-a*c,t[8]=n+r*o,t[1]=r+n*o,t[5]=a*l,t[9]=i-e*o,t[2]=-a*$,t[6]=o,t[10]=a*s}else if("ZYX"===e.order){const e=a*l,r=a*c,n=o*l,i=o*c;t[0]=s*l,t[4]=n*$-r,t[8]=e*$+i,t[1]=s*c,t[5]=i*$+e,t[9]=r*$-n,t[2]=-$,t[6]=o*s,t[10]=a*s}else if("YZX"===e.order){const e=a*s,r=a*$,n=o*s,i=o*$;t[0]=s*l,t[4]=i-e*c,t[8]=n*c+r,t[1]=c,t[5]=a*l,t[9]=-o*l,t[2]=-$*l,t[6]=r*c+n,t[10]=e-i*c}else if("XZY"===e.order){const e=a*s,r=a*$,n=o*s,i=o*$;t[0]=s*l,t[4]=-c,t[8]=$*l,t[1]=e*c+i,t[5]=a*l,t[9]=r*c-n,t[2]=n*c-r,t[6]=o*l,t[10]=i*c+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Hk,e,Ik)}lookAt(e,t,r){const n=this.elements;return Ha.subVectors(e,t),0===Ha.lengthSq()&&(Ha.z=1),Ha.normalize(),hb.crossVectors(r,Ha),0===hb.lengthSq()&&(1===Math.abs(r.z)?Ha.x+=1e-4:Ha.z+=1e-4,Ha.normalize(),hb.crossVectors(r,Ha)),hb.normalize(),fd.crossVectors(Ha,hb),n[0]=hb.x,n[4]=fd.x,n[8]=Ha.x,n[1]=hb.y,n[5]=fd.y,n[9]=Ha.y,n[2]=hb.z,n[6]=fd.z,n[10]=Ha.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const r=e.elements,n=t.elements,i=this.elements,a=r[0],o=r[4],s=r[8],$=r[12],l=r[1],c=r[5],p=r[9],h=r[13],u=r[2],g=r[6],d=r[10],m=r[14],f=r[3],x=r[7],v=r[11],B=r[15],_=n[0],K=n[4],y=n[8],b=n[12],M=n[1],S=n[5],w=n[9],T=n[13],A=n[2],E=n[6],L=n[10],C=n[14],R=n[3],P=n[7],D=n[11],F=n[15];return i[0]=a*_+o*M+s*A+$*R,i[4]=a*K+o*S+s*E+$*P,i[8]=a*y+o*w+s*L+$*D,i[12]=a*b+o*T+s*C+$*F,i[1]=l*_+c*M+p*A+h*R,i[5]=l*K+c*S+p*E+h*P,i[9]=l*y+c*w+p*L+h*D,i[13]=l*b+c*T+p*C+h*F,i[2]=u*_+g*M+d*A+m*R,i[6]=u*K+g*S+d*E+m*P,i[10]=u*y+g*w+d*L+m*D,i[14]=u*b+g*T+d*C+m*F,i[3]=f*_+x*M+v*A+B*R,i[7]=f*K+x*S+v*E+B*P,i[11]=f*y+x*w+v*L+B*D,i[15]=f*b+x*T+v*C+B*F,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],r=e[4],n=e[8],i=e[12],a=e[1],o=e[5],s=e[9],$=e[13],l=e[2],c=e[6],p=e[10],h=e[14];return e[3]*(+i*s*c-n*$*c-i*o*p+r*$*p+n*o*h-r*s*h)+e[7]*(+t*s*h-t*$*p+i*a*p-n*a*h+n*$*l-i*s*l)+e[11]*(+t*$*c-t*o*h-i*a*c+r*a*h+i*o*l-r*$*l)+e[15]*(-n*o*l-t*s*c+t*o*p+n*a*c-r*a*p+r*s*l)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,r){const n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=r),this}invert(){const e=this.elements,t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],o=e[5],s=e[6],$=e[7],l=e[8],c=e[9],p=e[10],h=e[11],u=e[12],g=e[13],d=e[14],m=e[15],f=c*d*$-g*p*$+g*s*h-o*d*h-c*s*m+o*p*m,x=u*p*$-l*d*$-u*s*h+a*d*h+l*s*m-a*p*m,v=l*g*$-u*c*$+u*o*h-a*g*h-l*o*m+a*c*m,B=u*c*s-l*g*s-u*o*p+a*g*p+l*o*d-a*c*d,_=t*f+r*x+n*v+i*B;if(0===_)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const K=1/_;return e[0]=f*K,e[1]=(g*p*i-c*d*i-g*n*h+r*d*h+c*n*m-r*p*m)*K,e[2]=(o*d*i-g*s*i+g*n*$-r*d*$-o*n*m+r*s*m)*K,e[3]=(c*s*i-o*p*i-c*n*$+r*p*$+o*n*h-r*s*h)*K,e[4]=x*K,e[5]=(l*d*i-u*p*i+u*n*h-t*d*h-l*n*m+t*p*m)*K,e[6]=(u*s*i-a*d*i-u*n*$+t*d*$+a*n*m-t*s*m)*K,e[7]=(a*p*i-l*s*i+l*n*$-t*p*$-a*n*h+t*s*h)*K,e[8]=v*K,e[9]=(u*c*i-l*g*i-u*r*h+t*g*h+l*r*m-t*c*m)*K,e[10]=(a*g*i-u*o*i+u*r*$-t*g*$-a*r*m+t*o*m)*K,e[11]=(l*o*i-a*c*i-l*r*$+t*c*$+a*r*h-t*o*h)*K,e[12]=B*K,e[13]=(l*g*n-u*c*n+u*r*p-t*g*p-l*r*d+t*c*d)*K,e[14]=(u*o*n-a*g*n-u*r*s+t*g*s+a*r*d-t*o*d)*K,e[15]=(a*c*n-l*o*n+l*r*s-t*c*s-a*r*p+t*o*p)*K,this}scale(e){const t=this.elements,r=e.x,n=e.y,i=e.z;return t[0]*=r,t[4]*=n,t[8]*=i,t[1]*=r,t[5]*=n,t[9]*=i,t[2]*=r,t[6]*=n,t[10]*=i,t[3]*=r,t[7]*=n,t[11]*=i,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,r,n))}makeTranslation(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),r=Math.sin(e);return this.set(1,0,0,0,0,t,-r,0,0,r,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),r=Math.sin(e);return this.set(t,0,r,0,0,1,0,0,-r,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),r=Math.sin(e);return this.set(t,-r,0,0,r,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const r=Math.cos(t),n=Math.sin(t),i=1-r,a=e.x,o=e.y,s=e.z,$=i*a,l=i*o;return this.set($*a+r,$*o-n*s,$*s+n*o,0,$*o+n*s,l*o+r,l*s-n*a,0,$*s-n*o,l*s+n*a,i*s*s+r,0,0,0,0,1),this}makeScale(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this}makeShear(e,t,r,n,i,a){return this.set(1,r,i,0,e,1,a,0,t,n,1,0,0,0,0,1),this}compose(e,t,r){const n=this.elements,i=t._x,a=t._y,o=t._z,s=t._w,$=i+i,l=a+a,c=o+o,p=i*$,h=i*l,u=i*c,g=a*l,d=a*c,m=o*c,f=s*$,x=s*l,v=s*c,B=r.x,_=r.y,K=r.z;return n[0]=(1-(g+m))*B,n[1]=(h+v)*B,n[2]=(u-x)*B,n[3]=0,n[4]=(h-v)*_,n[5]=(1-(p+m))*_,n[6]=(d+f)*_,n[7]=0,n[8]=(u+x)*K,n[9]=(d-f)*K,n[10]=(1-(p+g))*K,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,t,r){const n=this.elements;let i=Pb.set(n[0],n[1],n[2]).length();const a=Pb.set(n[4],n[5],n[6]).length(),o=Pb.set(n[8],n[9],n[10]).length();this.determinant()<0&&(i=-i),e.x=n[12],e.y=n[13],e.z=n[14],Pa.copy(this);const s=1/i,$=1/a,l=1/o;return Pa.elements[0]*=s,Pa.elements[1]*=s,Pa.elements[2]*=s,Pa.elements[4]*=$,Pa.elements[5]*=$,Pa.elements[6]*=$,Pa.elements[8]*=l,Pa.elements[9]*=l,Pa.elements[10]*=l,t.setFromRotationMatrix(Pa),r.x=i,r.y=a,r.z=o,this}makePerspective(e,t,r,n,i,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const o=this.elements,s=2*i/(t-e),$=2*i/(r-n),l=(t+e)/(t-e),c=(r+n)/(r-n),p=-(a+i)/(a-i),h=-2*a*i/(a-i);return o[0]=s,o[4]=0,o[8]=l,o[12]=0,o[1]=0,o[5]=$,o[9]=c,o[13]=0,o[2]=0,o[6]=0,o[10]=p,o[14]=h,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(e,t,r,n,i,a){const o=this.elements,s=1/(t-e),$=1/(r-n),l=1/(a-i),c=(t+e)*s,p=(r+n)*$,h=(a+i)*l;return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-c,o[1]=0,o[5]=2*$,o[9]=0,o[13]=-p,o[2]=0,o[6]=0,o[10]=-2*l,o[14]=-h,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(e){const t=this.elements,r=e.elements;for(let n=0;n<16;n++)if(t[n]!==r[n])return!1;return!0}fromArray(e,t=0){for(let r=0;r<16;r++)this.elements[r]=e[r+t];return this}toArray(e=[],t=0){const r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e}}ea.prototype.isMatrix4=!0;const Pb=new aa,Pa=new ea,Hk=new aa(0,0,0),Ik=new aa(1,1,1),hb=new aa,fd=new aa,Ha=new aa,Eg=new ea,Fg=new ta;class wc{constructor(e=0,t=0,r=0,n=wc.DefaultOrder){this._x=e,this._y=t,this._z=r,this._order=n}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,r,n=this._order){return this._x=e,this._y=t,this._z=r,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,r=!0){const n=e.elements,i=n[0],a=n[4],o=n[8],s=n[1],$=n[5],l=n[9],c=n[2],p=n[6],h=n[10];switch(t){case"XYZ":this._y=Math.asin(wa(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-l,h),this._z=Math.atan2(-a,i)):(this._x=Math.atan2(p,$),this._z=0);break;case"YXZ":this._x=Math.asin(-wa(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(o,h),this._z=Math.atan2(s,$)):(this._y=Math.atan2(-c,i),this._z=0);break;case"ZXY":this._x=Math.asin(wa(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(-c,h),this._z=Math.atan2(-a,$)):(this._y=0,this._z=Math.atan2(s,i));break;case"ZYX":this._y=Math.asin(-wa(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(p,h),this._z=Math.atan2(s,i)):(this._x=0,this._z=Math.atan2(-a,$));break;case"YZX":this._z=Math.asin(wa(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-l,$),this._y=Math.atan2(-c,i)):(this._x=0,this._y=Math.atan2(o,h));break;case"XZY":this._z=Math.asin(-wa(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(p,$),this._y=Math.atan2(o,i)):(this._x=Math.atan2(-l,h),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t);}return this._order=t,!0===r&&this._onChangeCallback(),this}setFromQuaternion(e,t,r){return Eg.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Eg,t,r)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Fg.setFromEuler(this),this.setFromQuaternion(Fg,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new aa(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}wc.prototype.isEuler=!0,wc.DefaultOrder="XYZ",wc.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Jk{constructor(){this.mask=1}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}}let Kk=0;const Gg=new aa,Qb=new ta,Za=new ea,gd=new aa,xc=new aa,Lk=new aa,Mk=new ta,Hg=new aa(1,0,0),Ig=new aa(0,1,0),Jg=new aa(0,0,1),Nk={type:"added"},Kg={type:"removed"};class ja extends db{constructor(){super(),Object.defineProperty(this,"id",{value:Kk++}),this.uuid=Ga(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ja.DefaultUp.clone();const e=new aa,t=new wc,r=new ta,n=new aa(1,1,1);t._onChange(function(){r.setFromEuler(t,!1)}),r._onChange(function(){t.setFromQuaternion(r,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:r},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new ea},normalMatrix:{value:new xa}}),this.matrix=new ea,this.matrixWorld=new ea,this.matrixAutoUpdate=ja.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Jk,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Qb.setFromAxisAngle(e,t),this.quaternion.multiply(Qb),this}rotateOnWorldAxis(e,t){return Qb.setFromAxisAngle(e,t),this.quaternion.premultiply(Qb),this}rotateX(e){return this.rotateOnAxis(Hg,e)}rotateY(e){return this.rotateOnAxis(Ig,e)}rotateZ(e){return this.rotateOnAxis(Jg,e)}translateOnAxis(e,t){return Gg.copy(e).applyQuaternion(this.quaternion),this.position.add(Gg.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Hg,e)}translateY(e){return this.translateOnAxis(Ig,e)}translateZ(e){return this.translateOnAxis(Jg,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(Za.copy(this.matrixWorld).invert())}lookAt(e,t,r){e.isVector3?gd.copy(e):gd.set(e,t,r);const n=this.parent;this.updateWorldMatrix(!0,!1),xc.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Za.lookAt(xc,gd,this.up):Za.lookAt(gd,xc,this.up),this.quaternion.setFromRotationMatrix(Za),n&&(Za.extractRotation(n.matrixWorld),Qb.setFromRotationMatrix(Za),this.quaternion.premultiply(Qb.invert()))}add(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Nk)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Kg)),this}removeFromParent(){const e=this.parent;return null!==e&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Kg)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Za.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),Za.multiply(e.parent.matrixWorld)),e.applyMatrix4(Za),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let r=0,n=this.children.length;r<n;r++){const n=this.children[r].getObjectByProperty(e,t);if(void 0!==n)return n}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(xc,e,Lk),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(xc,Mk,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let r=0,n=t.length;r<n;r++)t[r].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);const t=this.children;for(let r=0,n=t.length;r<n;r++)t[r].traverseVisible(e)}traverseAncestors(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let r=0,n=t.length;r<n;r++)t[r].updateMatrixWorld(e)}updateWorldMatrix(e,t){const r=this.parent;if(!0===e&&null!==r&&r.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const e=this.children;for(let t=0,r=e.length;t<r;t++)e[t].updateWorldMatrix(!1,!0)}}toJSON(e){const t=void 0===e||"string"==typeof e,r={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},r.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const n={};function i(t,r){return void 0===t[r.uuid]&&(t[r.uuid]=r.toJSON(e)),r.uuid}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),!1===this.frustumCulled&&(n.frustumCulled=!1),0!==this.renderOrder&&(n.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(n.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(n.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=i(e.geometries,this.geometry);const t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){const r=t.shapes;if(Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const n=r[t];i(e.shapes,n)}else i(e.shapes,r)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(i(e.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const t=[];for(let r=0,n=this.material.length;r<n;r++)t.push(i(e.materials,this.material[r]));n.material=t}else n.material=i(e.materials,this.material);if(this.children.length>0){n.children=[];for(let t=0;t<this.children.length;t++)n.children.push(this.children[t].toJSON(e).object)}if(this.animations.length>0){n.animations=[];for(let t=0;t<this.animations.length;t++){const r=this.animations[t];n.animations.push(i(e.animations,r))}}if(t){const t=a(e.geometries),n=a(e.materials),i=a(e.textures),o=a(e.images),s=a(e.shapes),$=a(e.skeletons),l=a(e.animations);t.length>0&&(r.geometries=t),n.length>0&&(r.materials=n),i.length>0&&(r.textures=i),o.length>0&&(r.images=o),s.length>0&&(r.shapes=s),$.length>0&&(r.skeletons=$),l.length>0&&(r.animations=l)}return r.object=n,r;function a(e){const t=[];for(const r in e){const n=e[r];delete n.metadata,t.push(n)}return t}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let r=0;r<e.children.length;r++){const t=e.children[r];this.add(t.clone())}return this}}ja.DefaultUp=new aa(0,1,0),ja.DefaultMatrixAutoUpdate=!0,ja.prototype.isObject3D=!0;const Qa=new aa,$a=new aa,Qe=new aa,_a=new aa,Rb=new aa,Sb=new aa,Lg=new aa,Re=new aa,Te=new aa,Ue=new aa;class sa{constructor(e=new aa,t=new aa,r=new aa){this.a=e,this.b=t,this.c=r}static getNormal(e,t,r,n){n.subVectors(r,t),Qa.subVectors(e,t),n.cross(Qa);const i=n.lengthSq();return i>0?n.multiplyScalar(1/Math.sqrt(i)):n.set(0,0,0)}static getBarycoord(e,t,r,n,i){Qa.subVectors(n,t),$a.subVectors(r,t),Qe.subVectors(e,t);const a=Qa.dot(Qa),o=Qa.dot($a),s=Qa.dot(Qe),$=$a.dot($a),l=$a.dot(Qe),c=a*$-o*o;if(0===c)return i.set(-2,-1,-1);const p=1/c,h=($*s-o*l)*p,u=(a*l-o*s)*p;return i.set(1-h-u,u,h)}static containsPoint(e,t,r,n){return this.getBarycoord(e,t,r,n,_a),_a.x>=0&&_a.y>=0&&_a.x+_a.y<=1}static getUV(e,t,r,n,i,a,o,s){return this.getBarycoord(e,t,r,n,_a),s.set(0,0),s.addScaledVector(i,_a.x),s.addScaledVector(a,_a.y),s.addScaledVector(o,_a.z),s}static isFrontFacing(e,t,r,n){return Qa.subVectors(r,t),$a.subVectors(e,t),Qa.cross($a).dot(n)<0}set(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this}setFromPointsAndIndices(e,t,r,n){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[n]),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Qa.subVectors(this.c,this.b),$a.subVectors(this.a,this.b),.5*Qa.cross($a).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return sa.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return sa.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,r,n,i){return sa.getUV(e,this.a,this.b,this.c,t,r,n,i)}containsPoint(e){return sa.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return sa.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const r=this.a,n=this.b,i=this.c;let a,o;Rb.subVectors(n,r),Sb.subVectors(i,r),Re.subVectors(e,r);const s=Rb.dot(Re),$=Sb.dot(Re);if(s<=0&&$<=0)return t.copy(r);Te.subVectors(e,n);const l=Rb.dot(Te),c=Sb.dot(Te);if(l>=0&&c<=l)return t.copy(n);const p=s*c-l*$;if(p<=0&&s>=0&&l<=0)return a=s/(s-l),t.copy(r).addScaledVector(Rb,a);Ue.subVectors(e,i);const h=Rb.dot(Ue),u=Sb.dot(Ue);if(u>=0&&h<=u)return t.copy(i);const g=h*$-s*u;if(g<=0&&$>=0&&u<=0)return o=$/($-u),t.copy(r).addScaledVector(Sb,o);const d=l*u-h*c;if(d<=0&&c-l>=0&&h-u>=0)return Lg.subVectors(i,n),o=(c-l)/(c-l+(h-u)),t.copy(n).addScaledVector(Lg,o);const m=1/(d+g+p);return a=g*m,o=p*m,t.copy(r).addScaledVector(Rb,a).addScaledVector(Sb,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let Ok=0;class ya extends db{constructor(){super(),Object.defineProperty(this,"id",{value:Ok++}),this.uuid=Ga(),this.name="",this.type="Material",this.fog=!0,this.blending=mc,this.side=kc,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=fg,this.blendDst=gg,this.blendEquation=Bb,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Zd,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=pk,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ce,this.stencilZFail=Ce,this.stencilZPass=Ce,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}onBuild(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(const t in e){const r=e[t];if(void 0===r){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if("shading"===t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=r===bg;continue}const n=this[t];void 0!==n?n&&n.isColor?n.set(r):n&&n.isVector3&&r&&r.isVector3?n.copy(r):this[t]=r:console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.")}}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const r={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function n(e){const t=[];for(const r in e){const n=e[r];delete n.metadata,t.push(n)}return t}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),this.color&&this.color.isColor&&(r.color=this.color.getHex()),void 0!==this.roughness&&(r.roughness=this.roughness),void 0!==this.metalness&&(r.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(r.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(r.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(r.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(r.specular=this.specular.getHex()),void 0!==this.shininess&&(r.shininess=this.shininess),void 0!==this.clearcoat&&(r.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(r.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(r.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(r.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(r.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,r.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(r.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(r.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(r.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(r.lightMap=this.lightMap.toJSON(e).uuid,r.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(r.aoMap=this.aoMap.toJSON(e).uuid,r.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(r.bumpMap=this.bumpMap.toJSON(e).uuid,r.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(r.normalMap=this.normalMap.toJSON(e).uuid,r.normalMapType=this.normalMapType,r.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(r.displacementMap=this.displacementMap.toJSON(e).uuid,r.displacementScale=this.displacementScale,r.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(r.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(r.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(r.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(r.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(r.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(r.combine=this.combine)),void 0!==this.envMapIntensity&&(r.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(r.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(r.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(r.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(r.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(r.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(r.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(r.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&(r.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(r.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(r.size=this.size),null!==this.shadowSide&&(r.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(r.sizeAttenuation=this.sizeAttenuation),this.blending!==mc&&(r.blending=this.blending),this.side!==kc&&(r.side=this.side),this.vertexColors&&(r.vertexColors=!0),this.opacity<1&&(r.opacity=this.opacity),!0===this.transparent&&(r.transparent=this.transparent),r.depthFunc=this.depthFunc,r.depthTest=this.depthTest,r.depthWrite=this.depthWrite,r.colorWrite=this.colorWrite,r.stencilWrite=this.stencilWrite,r.stencilWriteMask=this.stencilWriteMask,r.stencilFunc=this.stencilFunc,r.stencilRef=this.stencilRef,r.stencilFuncMask=this.stencilFuncMask,r.stencilFail=this.stencilFail,r.stencilZFail=this.stencilZFail,r.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(r.rotation=this.rotation),!0===this.polygonOffset&&(r.polygonOffset=!0),0!==this.polygonOffsetFactor&&(r.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(r.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(r.linewidth=this.linewidth),void 0!==this.dashSize&&(r.dashSize=this.dashSize),void 0!==this.gapSize&&(r.gapSize=this.gapSize),void 0!==this.scale&&(r.scale=this.scale),!0===this.dithering&&(r.dithering=!0),this.alphaTest>0&&(r.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(r.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(r.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(r.wireframe=this.wireframe),this.wireframeLinewidth>1&&(r.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(r.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(r.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(r.morphTargets=!0),!0===this.morphNormals&&(r.morphNormals=!0),!0===this.flatShading&&(r.flatShading=this.flatShading),!1===this.visible&&(r.visible=!1),!1===this.toneMapped&&(r.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),t){const t=n(e.textures),i=n(e.images);t.length>0&&(r.textures=t),i.length>0&&(r.images=i)}return r}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let r=null;if(null!==t){const e=t.length;r=new Array(e);for(let n=0;n!==e;++n)r[n]=t[n].clone()}return this.clippingPlanes=r,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}ya.prototype.isMaterial=!0;const Mg={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Ra={h:0,s:0,l:0},hd={h:0,s:0,l:0};function Ve(e,t,r){return r<0&&(r+=1),r>1&&(r-=1),r<1/6?e+6*(t-e)*r:r<.5?t:r<2/3?e+6*(t-e)*(2/3-r):e}function We(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function Xe(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}class da{constructor(e,t,r){return void 0===t&&void 0===r?this.set(e):this.setRGB(e,t,r)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this}setRGB(e,t,r){return this.r=e,this.g=t,this.b=r,this}setHSL(e,t,r){if(e=De(e,1),t=wa(t,0,1),r=wa(r,0,1),0===t)this.r=this.g=this.b=r;else{const n=r<=.5?r*(1+t):r+t-r*t,i=2*r-n;this.r=Ve(i,n,e+1/3),this.g=Ve(i,n,e),this.b=Ve(i,n,e-1/3)}return this}setStyle(e){function t(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let e;const n=r[1],i=r[2];switch(n){case"rgb":case"rgba":if(e=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,t(e[4]),this;if(e=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,t(e[4]),this;break;case"hsl":case"hsla":if(e=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i)){const r=parseFloat(e[1])/360,n=parseInt(e[2],10)/100,i=parseInt(e[3],10)/100;return t(e[4]),this.setHSL(r,n,i)}}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const e=r[1],t=e.length;if(3===t)return this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255,this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255,this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255,this;if(6===t)return this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255,this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255,this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){const t=Mg[e.toLowerCase()];return void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyGammaToLinear(e,t=2){return this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}copyLinearToGamma(e,t=2){const r=t>0?1/t:1;return this.r=Math.pow(e.r,r),this.g=Math.pow(e.g,r),this.b=Math.pow(e.b,r),this}convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this}convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this}copySRGBToLinear(e){return this.r=We(e.r),this.g=We(e.g),this.b=We(e.b),this}copyLinearToSRGB(e){return this.r=Xe(e.r),this.g=Xe(e.g),this.b=Xe(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){const t=this.r,r=this.g,n=this.b,i=Math.max(t,r,n),a=Math.min(t,r,n);let o,s;const $=(a+i)/2;if(a===i)o=0,s=0;else{const e=i-a;switch(s=$<=.5?e/(i+a):e/(2-i-a),i){case t:o=(r-n)/e+(r<n?6:0);break;case r:o=(n-t)/e+2;break;case n:o=(t-r)/e+4;}o/=6}return e.h=o,e.s=s,e.l=$,e}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(e,t,r){return this.getHSL(Ra),Ra.h+=e,Ra.s+=t,Ra.l+=r,this.setHSL(Ra.h,Ra.s,Ra.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,r){return this.r=e.r+(t.r-e.r)*r,this.g=e.g+(t.g-e.g)*r,this.b=e.b+(t.b-e.b)*r,this}lerpHSL(e,t){this.getHSL(Ra),e.getHSL(hd);const r=sc(Ra.h,hd.h,t),n=sc(Ra.s,hd.s,t),i=sc(Ra.l,hd.l,t);return this.setHSL(r,n,i),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}da.NAMES=Mg,da.prototype.isColor=!0,da.prototype.r=1,da.prototype.g=1,da.prototype.b=1;class yc extends ya{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new da(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Uc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.morphTargets=e.morphTargets,this}}yc.prototype.isMeshBasicMaterial=!0;const ma=new aa,id=new ba;class pa{constructor(e,t,r){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===r,this.usage=qc,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,r){e*=this.itemSize,r*=t.itemSize;for(let n=0,i=this.itemSize;n<i;n++)this.array[e+n]=t.array[r+n];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let r=0;for(let n=0,i=e.length;n<i;n++){let i=e[n];void 0===i&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",n),i=new da),t[r++]=i.r,t[r++]=i.g,t[r++]=i.b}return this}copyVector2sArray(e){const t=this.array;let r=0;for(let n=0,i=e.length;n<i;n++){let i=e[n];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",n),i=new ba),t[r++]=i.x,t[r++]=i.y}return this}copyVector3sArray(e){const t=this.array;let r=0;for(let n=0,i=e.length;n<i;n++){let i=e[n];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",n),i=new aa),t[r++]=i.x,t[r++]=i.y,t[r++]=i.z}return this}copyVector4sArray(e){const t=this.array;let r=0;for(let n=0,i=e.length;n<i;n++){let i=e[n];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",n),i=new la),t[r++]=i.x,t[r++]=i.y,t[r++]=i.z,t[r++]=i.w}return this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,r=this.count;t<r;t++)id.fromBufferAttribute(this,t),id.applyMatrix3(e),this.setXY(t,id.x,id.y);else if(3===this.itemSize)for(let t=0,r=this.count;t<r;t++)ma.fromBufferAttribute(this,t),ma.applyMatrix3(e),this.setXYZ(t,ma.x,ma.y,ma.z);return this}applyMatrix4(e){for(let t=0,r=this.count;t<r;t++)ma.x=this.getX(t),ma.y=this.getY(t),ma.z=this.getZ(t),ma.applyMatrix4(e),this.setXYZ(t,ma.x,ma.y,ma.z);return this}applyNormalMatrix(e){for(let t=0,r=this.count;t<r;t++)ma.x=this.getX(t),ma.y=this.getY(t),ma.z=this.getZ(t),ma.applyNormalMatrix(e),this.setXYZ(t,ma.x,ma.y,ma.z);return this}transformDirection(e){for(let t=0,r=this.count;t<r;t++)ma.x=this.getX(t),ma.y=this.getY(t),ma.z=this.getZ(t),ma.transformDirection(e),this.setXYZ(t,ma.x,ma.y,ma.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this}setXYZ(e,t,r,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=n,this}setXYZW(e,t,r,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=n,this.array[e+3]=i,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==qc&&(e.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(e.updateRange=this.updateRange),e}}pa.prototype.isBufferAttribute=!0;class Ng extends pa{constructor(e,t,r){super(new Uint16Array(e),t,r)}}class Og extends pa{constructor(e,t,r){super(new Uint32Array(e),t,r)}}class Pk extends pa{constructor(e,t,r){super(new Uint16Array(e),t,r)}}Pk.prototype.isFloat16BufferAttribute=!0;class fa extends pa{constructor(e,t,r){super(new Float32Array(e),t,r)}}function Pg(e){if(0===e.length)return-1/0;let t=e[0];for(let r=1,n=e.length;r<n;++r)e[r]>t&&(t=e[r]);return t}const b={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};let Qk=0;const La=new ea,Ye=new ja,Tb=new aa,Ia=new Ka,zc=new Ka,ua=new aa;class ga extends db{constructor(){super(),Object.defineProperty(this,"id",{value:Qk++}),this.uuid=Ga(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Pg(e)>65535?Og:Ng)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,r=0){this.groups.push({start:e,count:t,materialIndex:r})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const r=this.attributes.normal;if(void 0!==r){const t=new xa().getNormalMatrix(e);r.applyNormalMatrix(t),r.needsUpdate=!0}const n=this.attributes.tangent;return void 0!==n&&(n.transformDirection(e),n.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return La.makeRotationFromQuaternion(e),this.applyMatrix4(La),this}rotateX(e){return La.makeRotationX(e),this.applyMatrix4(La),this}rotateY(e){return La.makeRotationY(e),this.applyMatrix4(La),this}rotateZ(e){return La.makeRotationZ(e),this.applyMatrix4(La),this}translate(e,t,r){return La.makeTranslation(e,t,r),this.applyMatrix4(La),this}scale(e,t,r){return La.makeScale(e,t,r),this.applyMatrix4(La),this}lookAt(e){return Ye.lookAt(e),Ye.updateMatrix(),this.applyMatrix4(Ye.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Tb).negate(),this.translate(Tb.x,Tb.y,Tb.z),this}setFromPoints(e){const t=[];for(let r=0,n=e.length;r<n;r++){const n=e[r];t.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new fa(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Ka);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".",this),void this.boundingBox.set(new aa(-1/0,-1/0,-1/0),new aa(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let r=0,n=t.length;r<n;r++){const e=t[r];Ia.setFromBufferAttribute(e),this.morphTargetsRelative?(ua.addVectors(this.boundingBox.min,Ia.min),this.boundingBox.expandByPoint(ua),ua.addVectors(this.boundingBox.max,Ia.max),this.boundingBox.expandByPoint(ua)):(this.boundingBox.expandByPoint(Ia.min),this.boundingBox.expandByPoint(Ia.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error("THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.",this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Nb);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".",this),void this.boundingSphere.set(new aa,1/0);if(e){const r=this.boundingSphere.center;if(Ia.setFromBufferAttribute(e),t)for(let e=0,i=t.length;e<i;e++){const r=t[e];zc.setFromBufferAttribute(r),this.morphTargetsRelative?(ua.addVectors(Ia.min,zc.min),Ia.expandByPoint(ua),ua.addVectors(Ia.max,zc.max),Ia.expandByPoint(ua)):(Ia.expandByPoint(zc.min),Ia.expandByPoint(zc.max))}Ia.getCenter(r);let n=0;for(let t=0,i=e.count;t<i;t++)ua.fromBufferAttribute(e,t),n=Math.max(n,r.distanceToSquared(ua));if(t)for(let i=0,a=t.length;i<a;i++){const a=t[i],o=this.morphTargetsRelative;for(let t=0,i=a.count;t<i;t++)ua.fromBufferAttribute(a,t),o&&(Tb.fromBufferAttribute(e,t),ua.add(Tb)),n=Math.max(n,r.distanceToSquared(ua))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error("THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.",this)}}computeFaceNormals(){}computeTangents(){const e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const r=e.array,n=t.position.array,i=t.normal.array,a=t.uv.array,o=n.length/3;void 0===t.tangent&&this.setAttribute("tangent",new pa(new Float32Array(4*o),4));const s=t.tangent.array,$=[],l=[];for(let M=0;M<o;M++)$[M]=new aa,l[M]=new aa;const c=new aa,p=new aa,h=new aa,u=new ba,g=new ba,d=new ba,m=new aa,f=new aa;function x(e,t,r){c.fromArray(n,3*e),p.fromArray(n,3*t),h.fromArray(n,3*r),u.fromArray(a,2*e),g.fromArray(a,2*t),d.fromArray(a,2*r),p.sub(c),h.sub(c),g.sub(u),d.sub(u);const i=1/(g.x*d.y-d.x*g.y);isFinite(i)&&(m.copy(p).multiplyScalar(d.y).addScaledVector(h,-g.y).multiplyScalar(i),f.copy(h).multiplyScalar(g.x).addScaledVector(p,-d.x).multiplyScalar(i),$[e].add(m),$[t].add(m),$[r].add(m),l[e].add(f),l[t].add(f),l[r].add(f))}let v=this.groups;0===v.length&&(v=[{start:0,count:r.length}]);for(let M=0,S=v.length;M<S;++M){const e=v[M],t=e.start;for(let n=t,i=t+e.count;n<i;n+=3)x(r[n+0],r[n+1],r[n+2])}const B=new aa,_=new aa,K=new aa,y=new aa;function b(e){K.fromArray(i,3*e),y.copy(K);const t=$[e];B.copy(t),B.sub(K.multiplyScalar(K.dot(t))).normalize(),_.crossVectors(y,t);const r=_.dot(l[e])<0?-1:1;s[4*e]=B.x,s[4*e+1]=B.y,s[4*e+2]=B.z,s[4*e+3]=r}for(let M=0,S=v.length;M<S;++M){const e=v[M],t=e.start;for(let n=t,i=t+e.count;n<i;n+=3)b(r[n+0]),b(r[n+1]),b(r[n+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let r=this.getAttribute("normal");if(void 0===r)r=new pa(new Float32Array(3*t.count),3),this.setAttribute("normal",r);else for(let e=0,t=r.count;e<t;e++)r.setXYZ(e,0,0,0);const n=new aa,i=new aa,a=new aa,o=new aa,s=new aa,$=new aa,l=new aa,c=new aa;if(e)for(let p=0,h=e.count;p<h;p+=3){const h=e.getX(p+0),u=e.getX(p+1),g=e.getX(p+2);n.fromBufferAttribute(t,h),i.fromBufferAttribute(t,u),a.fromBufferAttribute(t,g),l.subVectors(a,i),c.subVectors(n,i),l.cross(c),o.fromBufferAttribute(r,h),s.fromBufferAttribute(r,u),$.fromBufferAttribute(r,g),o.add(l),s.add(l),$.add(l),r.setXYZ(h,o.x,o.y,o.z),r.setXYZ(u,s.x,s.y,s.z),r.setXYZ(g,$.x,$.y,$.z)}else for(let e=0,p=t.count;e<p;e+=3)n.fromBufferAttribute(t,e+0),i.fromBufferAttribute(t,e+1),a.fromBufferAttribute(t,e+2),l.subVectors(a,i),c.subVectors(n,i),l.cross(c),r.setXYZ(e+0,l.x,l.y,l.z),r.setXYZ(e+1,l.x,l.y,l.z),r.setXYZ(e+2,l.x,l.y,l.z);this.normalizeNormals(),r.needsUpdate=!0}}merge(e,t){if(!e||!e.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const r=this.attributes;for(const n in r){if(void 0===e.attributes[n])continue;const i=r[n].array,a=e.attributes[n],o=a.array,s=a.itemSize*t,$=Math.min(o.length,i.length-s);for(let e=0,t=s;e<$;e++,t++)i[t]=o[e]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,r=e.count;t<r;t++)ua.fromBufferAttribute(e,t),ua.normalize(),e.setXYZ(t,ua.x,ua.y,ua.z)}toNonIndexed(){function e(e,t){const r=e.array,n=e.itemSize,i=e.normalized,a=new r.constructor(t.length*n);let o=0,s=0;for(let $=0,l=t.length;$<l;$++){o=e.isInterleavedBufferAttribute?t[$]*e.data.stride+e.offset:t[$]*n;for(let e=0;e<n;e++)a[s++]=r[o++]}return new pa(a,n,i)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new ga,r=this.index.array,n=this.attributes;for(const o in n){const i=e(n[o],r);t.setAttribute(o,i)}const i=this.morphAttributes;for(const o in i){const n=[],a=i[o];for(let t=0,i=a.length;t<i;t++){const i=e(a[t],r);n.push(i)}t.morphAttributes[o]=n}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,s=a.length;o<s;o++){const e=a[o];t.addGroup(e.start,e.count,e.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const r in t)void 0!==t[r]&&(e[r]=t[r]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const r=this.attributes;for(const s in r){const t=r[s];e.data.attributes[s]=t.toJSON(e.data)}const n={};let i=!1;for(const s in this.morphAttributes){const t=this.morphAttributes[s],r=[];for(let n=0,i=t.length;n<i;n++){const i=t[n];r.push(i.toJSON(e.data))}r.length>0&&(n[s]=r,i=!0)}i&&(e.data.morphAttributes=n,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return null!==o&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new ga().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const r=e.index;null!==r&&this.setIndex(r.clone(t));const n=e.attributes;for(const $ in n){const e=n[$];this.setAttribute($,e.clone(t))}const i=e.morphAttributes;for(const $ in i){const e=[],r=i[$];for(let n=0,i=r.length;n<i;n++)e.push(r[n].clone(t));this.morphAttributes[$]=e}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let $=0,l=a.length;$<l;$++){const e=a[$];this.addGroup(e.start,e.count,e.materialIndex)}const o=e.boundingBox;null!==o&&(this.boundingBox=o.clone());const s=e.boundingSphere;return null!==s&&(this.boundingSphere=s.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}ga.prototype.isBufferGeometry=!0;const Qg=new ea,Ub=new Ob,Ze=new Nb,ib=new aa,jb=new aa,kb=new aa,af=new aa,bf=new aa,cf=new aa,jd=new aa,kd=new aa,ld=new aa,md=new ba,nd=new ba,od=new ba,df=new aa,pd=new aa;class Ma extends ja{constructor(e=new ga,t=new yc){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,r=Object.keys(t);if(r.length>0){const e=t[r[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,r=e.length;t<r;t++){const r=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,t){const r=this.geometry,n=this.material,i=this.matrixWorld;if(void 0===n)return;if(null===r.boundingSphere&&r.computeBoundingSphere(),Ze.copy(r.boundingSphere),Ze.applyMatrix4(i),!1===e.ray.intersectsSphere(Ze))return;if(Qg.copy(i).invert(),Ub.copy(e.ray).applyMatrix4(Qg),null!==r.boundingBox&&!1===Ub.intersectsBox(r.boundingBox))return;let a;if(r.isBufferGeometry){const i=r.index,o=r.attributes.position,s=r.morphAttributes.position,$=r.morphTargetsRelative,l=r.attributes.uv,c=r.attributes.uv2,p=r.groups,h=r.drawRange;if(null!==i){if(Array.isArray(n))for(let r=0,u=p.length;r<u;r++){const u=p[r],g=n[u.materialIndex];for(let r=Math.max(u.start,h.start),n=Math.min(u.start+u.count,h.start+h.count);r<n;r+=3){const n=i.getX(r),p=i.getX(r+1),h=i.getX(r+2);(a=qd(this,g,e,Ub,o,s,$,l,c,n,p,h))&&(a.faceIndex=Math.floor(r/3),a.face.materialIndex=u.materialIndex,t.push(a))}}else{for(let r=Math.max(0,h.start),p=Math.min(i.count,h.start+h.count);r<p;r+=3){const p=i.getX(r),h=i.getX(r+1),u=i.getX(r+2);(a=qd(this,n,e,Ub,o,s,$,l,c,p,h,u))&&(a.faceIndex=Math.floor(r/3),t.push(a))}}}else if(void 0!==o)if(Array.isArray(n))for(let r=0,u=p.length;r<u;r++){const i=p[r],u=n[i.materialIndex];for(let r=Math.max(i.start,h.start),n=Math.min(i.start+i.count,h.start+h.count);r<n;r+=3){(a=qd(this,u,e,Ub,o,s,$,l,c,r,r+1,r+2))&&(a.faceIndex=Math.floor(r/3),a.face.materialIndex=i.materialIndex,t.push(a))}}else{for(let r=Math.max(0,h.start),i=Math.min(o.count,h.start+h.count);r<i;r+=3){(a=qd(this,n,e,Ub,o,s,$,l,c,r,r+1,r+2))&&(a.faceIndex=Math.floor(r/3),t.push(a))}}}else r.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}function Rk(e,t,r,n,i,a,o,s){let $;if(null===($=t.side===ra?n.intersectTriangle(o,a,i,!0,s):n.intersectTriangle(i,a,o,t.side!==Ab,s)))return null;pd.copy(s),pd.applyMatrix4(e.matrixWorld);const l=r.ray.origin.distanceTo(pd);return l<r.near||l>r.far?null:{distance:l,point:pd.clone(),object:e}}function qd(e,t,r,n,i,a,o,s,$,l,c,p){ib.fromBufferAttribute(i,l),jb.fromBufferAttribute(i,c),kb.fromBufferAttribute(i,p);const h=e.morphTargetInfluences;if(t.morphTargets&&a&&h){jd.set(0,0,0),kd.set(0,0,0),ld.set(0,0,0);for(let e=0,t=a.length;e<t;e++){const t=h[e],r=a[e];0!==t&&(af.fromBufferAttribute(r,l),bf.fromBufferAttribute(r,c),cf.fromBufferAttribute(r,p),o?(jd.addScaledVector(af,t),kd.addScaledVector(bf,t),ld.addScaledVector(cf,t)):(jd.addScaledVector(af.sub(ib),t),kd.addScaledVector(bf.sub(jb),t),ld.addScaledVector(cf.sub(kb),t)))}ib.add(jd),jb.add(kd),kb.add(ld)}e.isSkinnedMesh&&(e.boneTransform(l,ib),e.boneTransform(c,jb),e.boneTransform(p,kb));const u=Rk(e,t,r,n,ib,jb,kb,df);if(u){s&&(md.fromBufferAttribute(s,l),nd.fromBufferAttribute(s,c),od.fromBufferAttribute(s,p),u.uv=sa.getUV(df,ib,jb,kb,md,nd,od,new ba)),$&&(md.fromBufferAttribute($,l),nd.fromBufferAttribute($,c),od.fromBufferAttribute($,p),u.uv2=sa.getUV(df,ib,jb,kb,md,nd,od,new ba));const e={a:l,b:c,c:p,normal:new aa,materialIndex:0};sa.getNormal(ib,jb,kb,e.normal),u.face=e}return u}Ma.prototype.isMesh=!0;class Vb extends ga{constructor(e=1,t=1,r=1,n=1,i=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:r,widthSegments:n,heightSegments:i,depthSegments:a};const o=this;n=Math.floor(n),i=Math.floor(i),a=Math.floor(a);const s=[],$=[],l=[],c=[];let p=0,h=0;function u(e,t,r,n,i,a,u,g,d,m,f){const x=a/d,v=u/m,B=a/2,_=u/2,K=g/2,y=d+1,b=m+1;let M=0,S=0;const w=new aa;for(let o=0;o<b;o++){const a=o*v-_;for(let s=0;s<y;s++){const p=s*x-B;w[e]=p*n,w[t]=a*i,w[r]=K,$.push(w.x,w.y,w.z),w[e]=0,w[t]=0,w[r]=g>0?1:-1,l.push(w.x,w.y,w.z),c.push(s/d),c.push(1-o/m),M+=1}}for(let o=0;o<m;o++)for(let e=0;e<d;e++){const t=p+e+y*o,r=p+e+y*(o+1),n=p+(e+1)+y*(o+1),i=p+(e+1)+y*o;s.push(t,r,i),s.push(r,n,i),S+=6}o.addGroup(h,S,f),h+=S,p+=M}u("z","y","x",-1,-1,r,t,e,a,i,0),u("z","y","x",1,-1,r,t,-e,a,i,1),u("x","z","y",1,1,e,r,t,n,a,2),u("x","z","y",1,-1,e,r,-t,n,a,3),u("x","y","z",1,-1,e,t,r,n,i,4),u("x","y","z",-1,-1,e,t,-r,n,i,5),this.setIndex(s),this.setAttribute("position",new fa($,3)),this.setAttribute("normal",new fa(l,3)),this.setAttribute("uv",new fa(c,2))}static fromJSON(e){return new Vb(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Wb(e){const t={};for(const r in e){t[r]={};for(const n in e[r]){const i=e[r][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?t[r][n]=i.clone():Array.isArray(i)?t[r][n]=i.slice():t[r][n]=i}}return t}function Ba(e){const t={};for(let r=0;r<e.length;r++){const n=Wb(e[r]);for(const e in n)t[e]=n[e]}return t}const Sk={clone:Wb,merge:Ba};var Tk="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",Uk="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";class lb extends ya{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=Tk,this.fragmentShader=Uk,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Wb(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const r=this.uniforms[n].value;r&&r.isTexture?t.uniforms[n]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[n]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[n]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[n]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[n]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[n]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[n]={type:"m4",value:r.toArray()}:t.uniforms[n]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const r={};for(const n in this.extensions)!0===this.extensions[n]&&(r[n]=!0);return Object.keys(r).length>0&&(t.extensions=r),t}}lb.prototype.isShaderMaterial=!0;class rd extends ja{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new ea,this.projectionMatrix=new ea,this.projectionMatrixInverse=new ea}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}rd.prototype.isCamera=!0;class Ea extends rd{constructor(e=50,t=1,r=.1,n=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=r,this.far=n,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=2*rc*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(.5*Ib*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*rc*Math.atan(Math.tan(.5*Ib*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,r,n,i,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=n,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(.5*Ib*this.fov)/this.zoom,r=2*t,n=this.aspect*r,i=-.5*n;const a=this.view;if(null!==this.view&&this.view.enabled){const e=a.fullWidth,o=a.fullHeight;i+=a.offsetX*n/e,t-=a.offsetY*r/o,n*=a.width/e,r*=a.height/o}const o=this.filmOffset;0!==o&&(i+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+n,t,t-r,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}Ea.prototype.isPerspectiveCamera=!0;const Xb=90,Yb=1;class ef extends ja{constructor(e,t,r){if(super(),this.type="CubeCamera",!0!==r.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=r;const n=new Ea(Xb,Yb,e,t);n.layers=this.layers,n.up.set(0,-1,0),n.lookAt(new aa(1,0,0)),this.add(n);const i=new Ea(Xb,Yb,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new aa(-1,0,0)),this.add(i);const a=new Ea(Xb,Yb,e,t);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new aa(0,1,0)),this.add(a);const o=new Ea(Xb,Yb,e,t);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new aa(0,-1,0)),this.add(o);const s=new Ea(Xb,Yb,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new aa(0,0,1)),this.add(s);const $=new Ea(Xb,Yb,e,t);$.layers=this.layers,$.up.set(0,-1,0),$.lookAt(new aa(0,0,-1)),this.add($)}update(e,t){null===this.parent&&this.updateMatrixWorld();const r=this.renderTarget,[n,i,a,o,s,$]=this.children,l=e.xr.enabled,c=e.getRenderTarget();e.xr.enabled=!1;const p=r.texture.generateMipmaps;r.texture.generateMipmaps=!1,e.setRenderTarget(r,0),e.render(t,n),e.setRenderTarget(r,1),e.render(t,i),e.setRenderTarget(r,2),e.render(t,a),e.setRenderTarget(r,3),e.render(t,o),e.setRenderTarget(r,4),e.render(t,s),r.texture.generateMipmaps=p,e.setRenderTarget(r,5),e.render(t,$),e.setRenderTarget(c),e.xr.enabled=l}}class sd extends Aa{constructor(e,t,r,n,i,a,o,s,$,l){super(e=void 0!==e?e:[],t=void 0!==t?t:$d,r,n,i,a,o=void 0!==o?o:tb,s,$,l),this._needsFlipEnvMap=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}sd.prototype.isCubeTexture=!0;class Rg extends Wa{constructor(e,t,r){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=r),super(e,e,t),t=t||{},this.texture=new sd(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:Ja,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.format=Oa,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const r={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},n=new Vb(5,5,5),i=new lb({name:"CubemapFromEquirect",uniforms:Wb(r.uniforms),vertexShader:r.vertexShader,fragmentShader:r.fragmentShader,side:ra,blending:lc});i.uniforms.tEquirect.value=t;const a=new Ma(n,i),o=t.minFilter;return t.minFilter===Vc&&(t.minFilter=Ja),new ef(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,r,n){const i=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,r,n);e.setRenderTarget(i)}}Rg.prototype.isWebGLCubeRenderTarget=!0;const ff=new aa,Vk=new aa,Wk=new xa;class ab{constructor(e=new aa(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,r,n){return this.normal.set(e,t,r),this.constant=n,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,r){const n=ff.subVectors(r,t).cross(Vk.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const r=e.delta(ff),n=this.normal.dot(r);if(0===n)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;const i=-(e.start.dot(this.normal)+this.constant)/n;return i<0||i>1?null:t.copy(r).multiplyScalar(i).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),r=this.distanceToPoint(e.end);return t<0&&r>0||r<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const r=t||Wk.getNormalMatrix(e),n=this.coplanarPoint(ff).applyMatrix4(e),i=this.normal.applyMatrix3(r).normalize();return this.constant=-n.dot(i),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}ab.prototype.isPlane=!0;const Zb=new Nb,td=new aa;class ud{constructor(e=new ab,t=new ab,r=new ab,n=new ab,i=new ab,a=new ab){this.planes=[e,t,r,n,i,a]}set(e,t,r,n,i,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(r),o[3].copy(n),o[4].copy(i),o[5].copy(a),this}copy(e){const t=this.planes;for(let r=0;r<6;r++)t[r].copy(e.planes[r]);return this}setFromProjectionMatrix(e){const t=this.planes,r=e.elements,n=r[0],i=r[1],a=r[2],o=r[3],s=r[4],$=r[5],l=r[6],c=r[7],p=r[8],h=r[9],u=r[10],g=r[11],d=r[12],m=r[13],f=r[14],x=r[15];return t[0].setComponents(o-n,c-s,g-p,x-d).normalize(),t[1].setComponents(o+n,c+s,g+p,x+d).normalize(),t[2].setComponents(o+i,c+$,g+h,x+m).normalize(),t[3].setComponents(o-i,c-$,g-h,x-m).normalize(),t[4].setComponents(o-a,c-l,g-u,x-f).normalize(),t[5].setComponents(o+a,c+l,g+u,x+f).normalize(),this}intersectsObject(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),Zb.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Zb)}intersectsSprite(e){return Zb.center.set(0,0,0),Zb.radius=.7071067811865476,Zb.applyMatrix4(e.matrixWorld),this.intersectsSphere(Zb)}intersectsSphere(e){const t=this.planes,r=e.center,n=-e.radius;for(let i=0;i<6;i++){if(t[i].distanceToPoint(r)<n)return!1}return!0}intersectsBox(e){const t=this.planes;for(let r=0;r<6;r++){const n=t[r];if(td.x=n.normal.x>0?e.max.x:e.min.x,td.y=n.normal.y>0?e.max.y:e.min.y,td.z=n.normal.z>0?e.max.z:e.min.z,n.distanceToPoint(td)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let r=0;r<6;r++)if(t[r].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Sg(){let e=null,t=!1,r=null,n=null;function i(t,a){r(t,a),n=e.requestAnimationFrame(i)}return{start:function(){!0!==t&&null!==r&&(n=e.requestAnimationFrame(i),t=!0)},stop:function(){e.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(e){r=e},setContext:function(t){e=t}}}function Xk(e,t){const r=t.isWebGL2,n=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),n.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);const r=n.get(t);r&&(e.deleteBuffer(r.buffer),n.delete(t))},update:function(t,i){if(t.isGLBufferAttribute){const e=n.get(t);return void((!e||e.version<t.version)&&n.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version}))}t.isInterleavedBufferAttribute&&(t=t.data);const a=n.get(t);void 0===a?n.set(t,function(t,n){const i=t.array,a=t.usage,o=e.createBuffer();e.bindBuffer(n,o),e.bufferData(n,i,a),t.onUploadCallback();let s=5126;return i instanceof Float32Array?s=5126:i instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):i instanceof Uint16Array?t.isFloat16BufferAttribute?r?s=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):s=5123:i instanceof Int16Array?s=5122:i instanceof Uint32Array?s=5125:i instanceof Int32Array?s=5124:i instanceof Int8Array?s=5120:i instanceof Uint8Array?s=5121:i instanceof Uint8ClampedArray&&(s=5121),{buffer:o,type:s,bytesPerElement:i.BYTES_PER_ELEMENT,version:t.version}}(t,i)):a.version<t.version&&(function(t,n,i){const a=n.array,o=n.updateRange;e.bindBuffer(i,t),-1===o.count?e.bufferSubData(i,0,a):(r?e.bufferSubData(i,o.offset*a.BYTES_PER_ELEMENT,a,o.offset,o.count):e.bufferSubData(i,o.offset*a.BYTES_PER_ELEMENT,a.subarray(o.offset,o.offset+o.count)),o.count=-1)}(a.buffer,t,i),a.version=t.version)}}}class vd extends ga{constructor(e=1,t=1,r=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:n};const i=e/2,a=t/2,o=Math.floor(r),s=Math.floor(n),$=o+1,l=s+1,c=e/o,p=t/s,h=[],u=[],g=[],d=[];for(let m=0;m<l;m++){const e=m*p-a;for(let t=0;t<$;t++){const r=t*c-i;u.push(r,-e,0),g.push(0,0,1),d.push(t/o),d.push(1-m/s)}}for(let m=0;m<s;m++)for(let e=0;e<o;e++){const t=e+$*m,r=e+$*(m+1),n=e+1+$*(m+1),i=e+1+$*m;h.push(t,r,i),h.push(r,n,i)}this.setIndex(h),this.setAttribute("position",new fa(u,3)),this.setAttribute("normal",new fa(g,3)),this.setAttribute("uv",new fa(d,2))}static fromJSON(e){return new vd(e.width,e.height,e.widthSegments,e.heightSegments)}}var Yk="#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",Zk="#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",$k="#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",_k="#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",al="#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",bl="vec3 transformed = vec3( position );",cl="vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",dl="vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotVH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",el="#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",fl="#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",gl="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",hl="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",il="#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",jl="#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",kl="#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",ll="#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",ml="#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",nl="#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",ol="#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",pl="vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",ql="#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",rl="#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",sl="#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",tl="#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",ul="gl_FragColor = linearToOutputTexel( gl_FragColor );",vl="\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",wl="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",xl="#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",yl="#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",zl="#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",Al="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",Bl="#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",Cl="#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",Dl="#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",El="#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",Fl="#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",Gl="#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",Hl="#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",Il="vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",Jl="uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",Kl="#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",Ll="ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",Ml="varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",Nl="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",Ol="varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",Pl="PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",Ql="struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",Rl="\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",Sl="#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",Tl="#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",Ul="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",Vl="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",Wl="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",Xl="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",Yl="#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",Zl="#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",$l="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",_l="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",am="float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",bm="#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",cm="#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",dm="#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",em="#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",fm="float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",gm="#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",hm="#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",im="#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",jm="#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",km="#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",lm="vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",mm="#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",nm="vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",om="#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",pm="#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",qm="float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",rm="#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",sm="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",tm="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",um="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",vm="float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",wm="#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",xm="#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",ym="#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",zm="#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",Am="float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",Bm="#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",Cm="#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",Dm="#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",Em="#ifdef USE_TRANSMISSION\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSNMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition.xyz / vWorldPosition.w;\n\tvec3 v = normalize( cameraPosition - pos );\n\tfloat ior = ( 1.0 + 0.4 * reflectivity ) / ( 1.0 - 0.4 * reflectivity );\n\tvec3 transmission = transmissionFactor * getIBLVolumeRefraction(\n\t\tnormal, v, roughnessFactor, material.diffuseColor, totalSpecular,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission, transmissionFactor );\n#endif",Fm="#ifdef USE_TRANSMISSION\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec4 vWorldPosition;\n\tvec3 getVolumeTransmissionRay(vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix) {\n\t\tvec3 refractionVector = refract(-v, normalize(n), 1.0 / ior);\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length(vec3(modelMatrix[0].xyz));\n\t\tmodelScale.y = length(vec3(modelMatrix[1].xyz));\n\t\tmodelScale.z = length(vec3(modelMatrix[2].xyz));\n\t\treturn normalize(refractionVector) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness(float roughness, float ior) {\n\t\treturn roughness * clamp(ior * 2.0 - 2.0, 0.0, 1.0);\n\t}\n\tvec3 getTransmissionSample(vec2 fragCoord, float roughness, float ior) {\n\t\tfloat framebufferLod = log2(transmissionSamplerSize.x) * applyIorToRoughness(roughness, ior);\n\t\treturn texture2DLodEXT(transmissionSamplerMap, fragCoord.xy, framebufferLod).rgb;\n\t}\n\tvec3 applyVolumeAttenuation(vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance) {\n\t\tif (attenuationDistance == 0.0) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log(attenuationColor) / attenuationDistance;\n\t\t\tvec3 transmittance = exp(-attenuationCoefficient * transmissionDistance);\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec3 getIBLVolumeRefraction(vec3 n, vec3 v, float perceptualRoughness, vec3 baseColor, vec3 specularColor,\n\t\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\n\t\tvec3 attenuationColor, float attenuationDistance) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay(n, v, thickness, ior, modelMatrix);\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4(refractedRayExit, 1.0);\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec3 transmittedLight = getTransmissionSample(refractionCoords, perceptualRoughness, ior);\n\t\tvec3 attenuatedColor = applyVolumeAttenuation(transmittedLight, length(transmissionRay), attenuationColor, attenuationDistance);\n\t\treturn (1.0 - specularColor) * attenuatedColor * baseColor;\n\t}\n#endif",Gm="#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",Hm="#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",Im="#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",Jm="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",Km="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",Lm="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",Mm="#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",Nm="uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",Om="varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",Pm="#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",Qm="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",Rm="#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",Sm="#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",Tm="#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",Um="#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",Vm="uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",Wm="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",Xm="uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",Ym="uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",Zm="uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",$m="#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",_m="uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",an="#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",bn="#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",cn="#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",dn="#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",en="#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",fn="#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",gn="#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",hn="#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform vec3 attenuationColor;\n\tuniform float attenuationDistance;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <transmission_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",jn="#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#ifdef USE_TRANSMISSION\n\tvarying vec4 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition;\n#endif\n}",kn="#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",ln="#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",mn="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",nn="uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",on="uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",pn="#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",qn="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",rn="uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}";const ha={alphamap_fragment:Yk,alphamap_pars_fragment:Zk,alphatest_fragment:$k,aomap_fragment:_k,aomap_pars_fragment:al,begin_vertex:bl,beginnormal_vertex:cl,bsdfs:dl,bumpmap_pars_fragment:el,clipping_planes_fragment:fl,clipping_planes_pars_fragment:gl,clipping_planes_pars_vertex:hl,clipping_planes_vertex:il,color_fragment:jl,color_pars_fragment:kl,color_pars_vertex:ll,color_vertex:ml,common:nl,cube_uv_reflection_fragment:ol,defaultnormal_vertex:pl,displacementmap_pars_vertex:ql,displacementmap_vertex:rl,emissivemap_fragment:sl,emissivemap_pars_fragment:tl,encodings_fragment:ul,encodings_pars_fragment:vl,envmap_fragment:wl,envmap_common_pars_fragment:xl,envmap_pars_fragment:yl,envmap_pars_vertex:zl,envmap_physical_pars_fragment:Kl,envmap_vertex:Al,fog_vertex:Bl,fog_pars_vertex:Cl,fog_fragment:Dl,fog_pars_fragment:El,gradientmap_pars_fragment:Fl,lightmap_fragment:Gl,lightmap_pars_fragment:Hl,lights_lambert_vertex:Il,lights_pars_begin:Jl,lights_toon_fragment:Ll,lights_toon_pars_fragment:Ml,lights_phong_fragment:Nl,lights_phong_pars_fragment:Ol,lights_physical_fragment:Pl,lights_physical_pars_fragment:Ql,lights_fragment_begin:Rl,lights_fragment_maps:Sl,lights_fragment_end:Tl,logdepthbuf_fragment:Ul,logdepthbuf_pars_fragment:Vl,logdepthbuf_pars_vertex:Wl,logdepthbuf_vertex:Xl,map_fragment:Yl,map_pars_fragment:Zl,map_particle_fragment:$l,map_particle_pars_fragment:_l,metalnessmap_fragment:am,metalnessmap_pars_fragment:bm,morphnormal_vertex:cm,morphtarget_pars_vertex:dm,morphtarget_vertex:em,normal_fragment_begin:fm,normal_fragment_maps:gm,normalmap_pars_fragment:hm,clearcoat_normal_fragment_begin:im,clearcoat_normal_fragment_maps:jm,clearcoat_pars_fragment:km,packing:lm,premultiplied_alpha_fragment:mm,project_vertex:nm,dithering_fragment:om,dithering_pars_fragment:pm,roughnessmap_fragment:qm,roughnessmap_pars_fragment:rm,shadowmap_pars_fragment:sm,shadowmap_pars_vertex:tm,shadowmap_vertex:um,shadowmask_pars_fragment:vm,skinbase_vertex:wm,skinning_pars_vertex:xm,skinning_vertex:ym,skinnormal_vertex:zm,specularmap_fragment:Am,specularmap_pars_fragment:Bm,tonemapping_fragment:Cm,tonemapping_pars_fragment:Dm,transmission_fragment:Em,transmission_pars_fragment:Fm,uv_pars_fragment:Gm,uv_pars_vertex:Hm,uv_vertex:Im,uv2_pars_fragment:Jm,uv2_pars_vertex:Km,uv2_vertex:Lm,worldpos_vertex:Mm,background_frag:Nm,background_vert:Om,cube_frag:Pm,cube_vert:Qm,depth_frag:Rm,depth_vert:Sm,distanceRGBA_frag:Tm,distanceRGBA_vert:Um,equirect_frag:Vm,equirect_vert:Wm,linedashed_frag:Xm,linedashed_vert:Ym,meshbasic_frag:Zm,meshbasic_vert:$m,meshlambert_frag:_m,meshlambert_vert:an,meshmatcap_frag:bn,meshmatcap_vert:cn,meshtoon_frag:dn,meshtoon_vert:en,meshphong_frag:fn,meshphong_vert:gn,meshphysical_frag:hn,meshphysical_vert:jn,normal_frag:kn,normal_vert:ln,points_frag:mn,points_vert:nn,shadow_frag:on,shadow_vert:pn,sprite_frag:qn,sprite_vert:rn},ca={common:{diffuse:{value:new da(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new xa},uv2Transform:{value:new xa},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new ba(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new da(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new da(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new xa}},sprite:{diffuse:{value:new da(16777215)},opacity:{value:1},center:{value:new ba(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new xa}}},Ta={basic:{uniforms:Ba([ca.common,ca.specularmap,ca.envmap,ca.aomap,ca.lightmap,ca.fog]),vertexShader:ha.meshbasic_vert,fragmentShader:ha.meshbasic_frag},lambert:{uniforms:Ba([ca.common,ca.specularmap,ca.envmap,ca.aomap,ca.lightmap,ca.emissivemap,ca.fog,ca.lights,{emissive:{value:new da(0)}}]),vertexShader:ha.meshlambert_vert,fragmentShader:ha.meshlambert_frag},phong:{uniforms:Ba([ca.common,ca.specularmap,ca.envmap,ca.aomap,ca.lightmap,ca.emissivemap,ca.bumpmap,ca.normalmap,ca.displacementmap,ca.fog,ca.lights,{emissive:{value:new da(0)},specular:{value:new da(1118481)},shininess:{value:30}}]),vertexShader:ha.meshphong_vert,fragmentShader:ha.meshphong_frag},standard:{uniforms:Ba([ca.common,ca.envmap,ca.aomap,ca.lightmap,ca.emissivemap,ca.bumpmap,ca.normalmap,ca.displacementmap,ca.roughnessmap,ca.metalnessmap,ca.fog,ca.lights,{emissive:{value:new da(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ha.meshphysical_vert,fragmentShader:ha.meshphysical_frag},toon:{uniforms:Ba([ca.common,ca.aomap,ca.lightmap,ca.emissivemap,ca.bumpmap,ca.normalmap,ca.displacementmap,ca.gradientmap,ca.fog,ca.lights,{emissive:{value:new da(0)}}]),vertexShader:ha.meshtoon_vert,fragmentShader:ha.meshtoon_frag},matcap:{uniforms:Ba([ca.common,ca.bumpmap,ca.normalmap,ca.displacementmap,ca.fog,{matcap:{value:null}}]),vertexShader:ha.meshmatcap_vert,fragmentShader:ha.meshmatcap_frag},points:{uniforms:Ba([ca.points,ca.fog]),vertexShader:ha.points_vert,fragmentShader:ha.points_frag},dashed:{uniforms:Ba([ca.common,ca.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ha.linedashed_vert,fragmentShader:ha.linedashed_frag},depth:{uniforms:Ba([ca.common,ca.displacementmap]),vertexShader:ha.depth_vert,fragmentShader:ha.depth_frag},normal:{uniforms:Ba([ca.common,ca.bumpmap,ca.normalmap,ca.displacementmap,{opacity:{value:1}}]),vertexShader:ha.normal_vert,fragmentShader:ha.normal_frag},sprite:{uniforms:Ba([ca.sprite,ca.fog]),vertexShader:ha.sprite_vert,fragmentShader:ha.sprite_frag},background:{uniforms:{uvTransform:{value:new xa},t2D:{value:null}},vertexShader:ha.background_vert,fragmentShader:ha.background_frag},cube:{uniforms:Ba([ca.envmap,{opacity:{value:1}}]),vertexShader:ha.cube_vert,fragmentShader:ha.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ha.equirect_vert,fragmentShader:ha.equirect_frag},distanceRGBA:{uniforms:Ba([ca.common,ca.displacementmap,{referencePosition:{value:new aa},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ha.distanceRGBA_vert,fragmentShader:ha.distanceRGBA_frag},shadow:{uniforms:Ba([ca.lights,ca.fog,{color:{value:new da(0)},opacity:{value:1}}]),vertexShader:ha.shadow_vert,fragmentShader:ha.shadow_frag}};function sn(e,t,r,n,i){const a=new da(0);let o,s,$=0,l=null,c=0,p=null;function h(e,t){r.buffers.color.setClear(e.r,e.g,e.b,t,i)}return{getClearColor:function(){return a},setClearColor:function(e,t=1){a.set(e),h(a,$=t)},getClearAlpha:function(){return $},setClearAlpha:function(e){h(a,$=e)},render:function(r,i){let u=!1,g=!0===i.isScene?i.background:null;g&&g.isTexture&&(g=t.get(g));const d=e.xr,m=d.getSession&&d.getSession();m&&"additive"===m.environmentBlendMode&&(g=null),null===g?h(a,$):g&&g.isColor&&(h(g,1),u=!0),(e.autoClear||u)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),g&&(g.isCubeTexture||g.mapping===je)?(void 0===s&&((s=new Ma(new Vb(1,1,1),new lb({name:"BackgroundCubeMaterial",uniforms:Wb(Ta.cube.uniforms),vertexShader:Ta.cube.vertexShader,fragmentShader:Ta.cube.fragmentShader,side:ra,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),s.geometry.deleteAttribute("uv"),s.onBeforeRender=function(e,t,r){this.matrixWorld.copyPosition(r.matrixWorld)},Object.defineProperty(s.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(s)),s.material.uniforms.envMap.value=g,s.material.uniforms.flipEnvMap.value=g.isCubeTexture&&g._needsFlipEnvMap?-1:1,l===g&&c===g.version&&p===e.toneMapping||(s.material.needsUpdate=!0,l=g,c=g.version,p=e.toneMapping),r.unshift(s,s.geometry,s.material,0,0,null)):g&&g.isTexture&&(void 0===o&&((o=new Ma(new vd(2,2),new lb({name:"BackgroundMaterial",uniforms:Wb(Ta.background.uniforms),vertexShader:Ta.background.vertexShader,fragmentShader:Ta.background.fragmentShader,side:kc,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(o)),o.material.uniforms.t2D.value=g,!0===g.matrixAutoUpdate&&g.updateMatrix(),o.material.uniforms.uvTransform.value.copy(g.matrix),l===g&&c===g.version&&p===e.toneMapping||(o.material.needsUpdate=!0,l=g,c=g.version,p=e.toneMapping),r.unshift(o,o.geometry,o.material,0,0,null))}}}function tn(e,t,r,n){const i=e.getParameter(34921),a=n.isWebGL2?null:t.get("OES_vertex_array_object"),o=n.isWebGL2||null!==a,s={},$=h(null);let l=$;function c(t){return n.isWebGL2?e.bindVertexArray(t):a.bindVertexArrayOES(t)}function p(t){return n.isWebGL2?e.deleteVertexArray(t):a.deleteVertexArrayOES(t)}function h(e){const t=[],r=[],n=[];for(let a=0;a<i;a++)t[a]=0,r[a]=0,n[a]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:r,attributeDivisors:n,object:e,attributes:{},index:null}}function u(){const e=l.newAttributes;for(let t=0,r=e.length;t<r;t++)e[t]=0}function g(e){d(e,0)}function d(r,i){const a=l.newAttributes,o=l.enabledAttributes,s=l.attributeDivisors;if(a[r]=1,0===o[r]&&(e.enableVertexAttribArray(r),o[r]=1),s[r]!==i){(n.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](r,i),s[r]=i}}function m(){const t=l.newAttributes,r=l.enabledAttributes;for(let n=0,i=r.length;n<i;n++)r[n]!==t[n]&&(e.disableVertexAttribArray(n),r[n]=0)}function f(t,r,i,a,o,s){!0!==n.isWebGL2||5124!==i&&5125!==i?e.vertexAttribPointer(t,r,i,a,o,s):e.vertexAttribIPointer(t,r,i,o,s)}function x(){v(),l!==$&&c((l=$).object)}function v(){$.geometry=null,$.program=null,$.wireframe=!1}return{setup:function(i,$,p,x,v){let B=!1;if(o){const t=function(t,r,i){const o=!0===i.wireframe;let $=s[t.id];void 0===$&&($={},s[t.id]=$);let l=$[r.id];void 0===l&&(l={},$[r.id]=l);let c=l[o];return void 0===c&&(c=h(n.isWebGL2?e.createVertexArray():a.createVertexArrayOES()),l[o]=c),c}(x,p,$);l!==t&&c((l=t).object),(B=function(e,t){const r=l.attributes,n=e.attributes;let i=0;for(const a in n){const e=r[a],t=n[a];if(void 0===e)return!0;if(e.attribute!==t)return!0;if(e.data!==t.data)return!0;i++}return l.attributesNum!==i||l.index!==t}(x,v))&&function(e,t){const r={},n=e.attributes;let i=0;for(const a in n){const e=n[a],t={};t.attribute=e,e.data&&(t.data=e.data),r[a]=t,i++}l.attributes=r,l.attributesNum=i,l.index=t}(x,v)}else{const e=!0===$.wireframe;l.geometry===x.id&&l.program===p.id&&l.wireframe===e||(l.geometry=x.id,l.program=p.id,l.wireframe=e,B=!0)}!0===i.isInstancedMesh&&(B=!0),null!==v&&r.update(v,34963),B&&(function(i,a,o,s){if(!1===n.isWebGL2&&(i.isInstancedMesh||s.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;u();const $=s.attributes,l=o.getAttributes(),c=a.defaultAttributeValues;for(const t in l){const n=l[t];if(n>=0){const a=$[t];if(void 0!==a){const t=a.normalized,i=a.itemSize,o=r.get(a);if(void 0===o)continue;const $=o.buffer,l=o.type,c=o.bytesPerElement;if(a.isInterleavedBufferAttribute){const r=a.data,o=r.stride,p=a.offset;r&&r.isInstancedInterleavedBuffer?(d(n,r.meshPerAttribute),void 0===s._maxInstanceCount&&(s._maxInstanceCount=r.meshPerAttribute*r.count)):g(n),e.bindBuffer(34962,$),f(n,i,l,t,o*c,p*c)}else a.isInstancedBufferAttribute?(d(n,a.meshPerAttribute),void 0===s._maxInstanceCount&&(s._maxInstanceCount=a.meshPerAttribute*a.count)):g(n),e.bindBuffer(34962,$),f(n,i,l,t,0,0)}else if("instanceMatrix"===t){const t=r.get(i.instanceMatrix);if(void 0===t)continue;const a=t.buffer,o=t.type;d(n+0,1),d(n+1,1),d(n+2,1),d(n+3,1),e.bindBuffer(34962,a),e.vertexAttribPointer(n+0,4,o,!1,64,0),e.vertexAttribPointer(n+1,4,o,!1,64,16),e.vertexAttribPointer(n+2,4,o,!1,64,32),e.vertexAttribPointer(n+3,4,o,!1,64,48)}else if("instanceColor"===t){const t=r.get(i.instanceColor);if(void 0===t)continue;const a=t.buffer,o=t.type;d(n,1),e.bindBuffer(34962,a),e.vertexAttribPointer(n,3,o,!1,12,0)}else if(void 0!==c){const r=c[t];if(void 0!==r)switch(r.length){case 2:e.vertexAttrib2fv(n,r);break;case 3:e.vertexAttrib3fv(n,r);break;case 4:e.vertexAttrib4fv(n,r);break;default:e.vertexAttrib1fv(n,r);}}}}m()}(i,$,p,x),null!==v&&e.bindBuffer(34963,r.get(v).buffer))},reset:x,resetDefaultState:v,dispose:function(){x();for(const e in s){const t=s[e];for(const e in t){const r=t[e];for(const e in r)p(r[e].object),delete r[e];delete t[e]}delete s[e]}},releaseStatesOfGeometry:function(e){if(void 0===s[e.id])return;const t=s[e.id];for(const r in t){const e=t[r];for(const t in e)p(e[t].object),delete e[t];delete t[r]}delete s[e.id]},releaseStatesOfProgram:function(e){for(const t in s){const r=s[t];if(void 0===r[e.id])continue;const n=r[e.id];for(const e in n)p(n[e].object),delete n[e];delete r[e.id]}},initAttributes:u,enableAttribute:g,disableUnusedAttributes:m}}function un(e,t,r,n){const i=n.isWebGL2;let a;this.setMode=function(e){a=e},this.render=function(t,n){e.drawArrays(a,t,n),r.update(n,a,1)},this.renderInstances=function(n,o,s){if(0===s)return;let $,l;if(i)$=e,l="drawArraysInstanced";else if(l="drawArraysInstancedANGLE",null===($=t.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");$[l](a,n,o,s),r.update(o,a,s)}}function vn(e,t,r){let n;function i(t){if("highp"===t){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const a="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext;let o=void 0!==r.precision?r.precision:"highp";const s=i(o);s!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",s,"instead."),o=s);const $=a||t.has("WEBGL_draw_buffers"),l=!0===r.logarithmicDepthBuffer,c=e.getParameter(34930),p=e.getParameter(35660),h=e.getParameter(3379),u=e.getParameter(34076),g=e.getParameter(34921),d=e.getParameter(36347),m=e.getParameter(36348),f=e.getParameter(36349),x=p>0,v=a||t.has("OES_texture_float");return{isWebGL2:a,drawBuffers:$,getMaxAnisotropy:function(){if(void 0!==n)return n;if(!0===t.has("EXT_texture_filter_anisotropic")){const r=t.get("EXT_texture_filter_anisotropic");n=e.getParameter(r.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n},getMaxPrecision:i,precision:o,logarithmicDepthBuffer:l,maxTextures:c,maxVertexTextures:p,maxTextureSize:h,maxCubemapSize:u,maxAttributes:g,maxVertexUniforms:d,maxVaryings:m,maxFragmentUniforms:f,vertexTextures:x,floatFragmentTextures:v,floatVertexTextures:x&&v,maxSamples:a?e.getParameter(36183):0}}function wn(e){const t=this;let r=null,n=0,i=!1,a=!1;const o=new ab,s=new xa,$={value:null,needsUpdate:!1};function l(){$.value!==r&&($.value=r,$.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function c(e,r,n,i){const a=null!==e?e.length:0;let l=null;if(0!==a){if(l=$.value,!0!==i||null===l){const t=n+4*a,i=r.matrixWorldInverse;s.getNormalMatrix(i),(null===l||l.length<t)&&(l=new Float32Array(t));for(let r=0,$=n;r!==a;++r,$+=4)o.copy(e[r]).applyMatrix4(i,s),o.normal.toArray(l,$),l[$+3]=o.constant}$.value=l,$.needsUpdate=!0}return t.numPlanes=a,t.numIntersection=0,l}this.uniform=$,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,a){const o=0!==e.length||t||0!==n||i;return i=t,r=c(e,a,0),n=e.length,o},this.beginShadows=function(){a=!0,c(null)},this.endShadows=function(){a=!1,l()},this.setState=function(t,o,s){const p=t.clippingPlanes,h=t.clipIntersection,u=t.clipShadows,g=e.get(t);if(!i||null===p||0===p.length||a&&!u)a?c(null):l();else{const e=a?0:n,t=4*e;let i=g.clippingState||null;$.value=i,i=c(p,o,t,s);for(let n=0;n!==t;++n)i[n]=r[n];g.clippingState=i,this.numIntersection=h?this.numPlanes:0,this.numPlanes+=e}}}function xn(e){let t=new WeakMap;function r(e,t){return t===ig?e.mapping=$d:t===jg&&(e.mapping=_d),e}function n(e){const r=e.target;r.removeEventListener("dispose",n);const i=t.get(r);void 0!==i&&(t.delete(r),i.dispose())}return{get:function(i){if(i&&i.isTexture){const a=i.mapping;if(a===ig||a===jg){if(t.has(i))return r(t.get(i).texture,i.mapping);{const a=i.image;if(a&&a.height>0){const o=e.getRenderTarget(),s=new Rg(a.height/2);return s.fromEquirectangularTexture(e,i),t.set(i,s),e.setRenderTarget(o),i.addEventListener("dispose",n),r(s.texture,i.mapping)}return null}}}return i},dispose:function(){t=new WeakMap}}}function yn(e){const t={};function r(r){if(void 0!==t[r])return t[r];let n;switch(r){case"WEBGL_depth_texture":n=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=e.getExtension(r);}return t[r]=n,n}return{has:function(e){return null!==r(e)},init:function(e){e.isWebGL2?r("EXT_color_buffer_float"):(r("WEBGL_depth_texture"),r("OES_texture_float"),r("OES_texture_half_float"),r("OES_texture_half_float_linear"),r("OES_standard_derivatives"),r("OES_element_index_uint"),r("OES_vertex_array_object"),r("ANGLE_instanced_arrays")),r("OES_texture_float_linear"),r("EXT_color_buffer_half_float")},get:function(e){const t=r(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function zn(e,t,r,n){const i={},a=new WeakMap;function o(e){const s=e.target;null!==s.index&&t.remove(s.index);for(const r in s.attributes)t.remove(s.attributes[r]);s.removeEventListener("dispose",o),delete i[s.id];const $=a.get(s);$&&(t.remove($),a.delete(s)),n.releaseStatesOfGeometry(s),!0===s.isInstancedBufferGeometry&&delete s._maxInstanceCount,r.memory.geometries--}function s(e){const r=[],n=e.index,i=e.attributes.position;let o=0;if(null!==n){const e=n.array;o=n.version;for(let t=0,n=e.length;t<n;t+=3){const n=e[t+0],i=e[t+1],a=e[t+2];r.push(n,i,i,a,a,n)}}else{const e=i.array;o=i.version;for(let t=0,n=e.length/3-1;t<n;t+=3){const e=t+0,n=t+1,i=t+2;r.push(e,n,n,i,i,e)}}const s=new(Pg(r)>65535?Og:Ng)(r,1);s.version=o;const $=a.get(e);$&&t.remove($),a.set(e,s)}return{get:function(e,t){return!0===i[t.id]?t:(t.addEventListener("dispose",o),i[t.id]=!0,r.memory.geometries++,t)},update:function(e){const r=e.attributes;for(const i in r)t.update(r[i],34962);const n=e.morphAttributes;for(const i in n){const e=n[i];for(let r=0,n=e.length;r<n;r++)t.update(e[r],34962)}},getWireframeAttribute:function(e){const t=a.get(e);if(t){const r=e.index;null!==r&&t.version<r.version&&s(e)}else s(e);return a.get(e)}}}function An(e,t,r,n){const i=n.isWebGL2;let a,o,s;this.setMode=function(e){a=e},this.setIndex=function(e){o=e.type,s=e.bytesPerElement},this.render=function(t,n){e.drawElements(a,n,o,t*s),r.update(n,a,1)},this.renderInstances=function(n,$,l){if(0===l)return;let c,p;if(i)c=e,p="drawElementsInstanced";else if(p="drawElementsInstancedANGLE",null===(c=t.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[p](a,$,o,n*s,l),r.update($,a,l)}}function Bn(e){const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(e,r,n){switch(t.calls++,r){case 4:t.triangles+=n*(e/3);break;case 1:t.lines+=n*(e/2);break;case 3:t.lines+=n*(e-1);break;case 2:t.lines+=n*e;break;case 0:t.points+=n*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",r);}}}}function Cn(e,t){return e[0]-t[0]}function Dn(e,t){return Math.abs(t[1])-Math.abs(e[1])}function En(e){const t={},r=new Float32Array(8),n=[];for(let i=0;i<8;i++)n[i]=[i,0];return{update:function(i,a,o,s){const $=i.morphTargetInfluences,l=void 0===$?0:$.length;let c=t[a.id];if(void 0===c||c.length!==l){c=[];for(let e=0;e<l;e++)c[e]=[e,0];t[a.id]=c}for(let e=0;e<l;e++){const t=c[e];t[0]=e,t[1]=$[e]}c.sort(Dn);for(let e=0;e<8;e++)e<l&&c[e][1]?(n[e][0]=c[e][0],n[e][1]=c[e][1]):(n[e][0]=Number.MAX_SAFE_INTEGER,n[e][1]=0);n.sort(Cn);const p=o.morphTargets&&a.morphAttributes.position,h=o.morphNormals&&a.morphAttributes.normal;let u=0;for(let e=0;e<8;e++){const t=n[e],i=t[0],o=t[1];i!==Number.MAX_SAFE_INTEGER&&o?(p&&a.getAttribute("morphTarget"+e)!==p[i]&&a.setAttribute("morphTarget"+e,p[i]),h&&a.getAttribute("morphNormal"+e)!==h[i]&&a.setAttribute("morphNormal"+e,h[i]),r[e]=o,u+=o):(p&&!0===a.hasAttribute("morphTarget"+e)&&a.deleteAttribute("morphTarget"+e),h&&!0===a.hasAttribute("morphNormal"+e)&&a.deleteAttribute("morphNormal"+e),r[e]=0)}const g=a.morphTargetsRelative?1:1-u;s.getUniforms().setValue(e,"morphTargetBaseInfluence",g),s.getUniforms().setValue(e,"morphTargetInfluences",r)}}}function Fn(e,t,r,n){let i=new WeakMap;function a(e){const t=e.target;t.removeEventListener("dispose",a),r.remove(t.instanceMatrix),null!==t.instanceColor&&r.remove(t.instanceColor)}return{update:function(e){const o=n.render.frame,s=e.geometry,$=t.get(e,s);return i.get($)!==o&&(t.update($),i.set($,o)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",a)&&e.addEventListener("dispose",a),r.update(e.instanceMatrix,34962),null!==e.instanceColor&&r.update(e.instanceColor,34962)),$},dispose:function(){i=new WeakMap}}}Ta.physical={uniforms:Ba([Ta.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new ba(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new da(0)},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new ba},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new da(0)}}]),vertexShader:ha.meshphysical_vert,fragmentShader:ha.meshphysical_frag};class Tg extends Aa{constructor(e=null,t=1,r=1,n=1){super(null),this.image={data:e,width:t,height:r,depth:n},this.magFilter=za,this.minFilter=za,this.wrapR=Fa,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}Tg.prototype.isDataTexture2DArray=!0;class Ug extends Aa{constructor(e=null,t=1,r=1,n=1){super(null),this.image={data:e,width:t,height:r,depth:n},this.magFilter=za,this.minFilter=za,this.wrapR=Fa,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}Ug.prototype.isDataTexture3D=!0;const Vg=new Aa,Gn=new Tg,Hn=new Ug,Wg=new sd,Xg=[],Yg=[],Zg=new Float32Array(16),$g=new Float32Array(9),_g=new Float32Array(4);function $b(e,t,r){const n=e[0];if(n<=0||n>0)return e;const i=t*r;let a=Xg[i];if(void 0===a&&(a=new Float32Array(i),Xg[i]=a),0!==t){n.toArray(a,0);for(let n=1,i=0;n!==t;++n)i+=r,e[n].toArray(a,i)}return a}function Da(e,t){if(e.length!==t.length)return!1;for(let r=0,n=e.length;r<n;r++)if(e[r]!==t[r])return!1;return!0}function Ca(e,t){for(let r=0,n=t.length;r<n;r++)e[r]=t[r]}function ah(e,t){let r=Yg[t];void 0===r&&(r=new Int32Array(t),Yg[t]=r);for(let n=0;n!==t;++n)r[n]=e.allocateTextureUnit();return r}function In(e,t){const r=this.cache;r[0]!==t&&(e.uniform1f(this.addr,t),r[0]=t)}function Jn(e,t){const r=this.cache;if(void 0!==t.x)r[0]===t.x&&r[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),r[0]=t.x,r[1]=t.y);else{if(Da(r,t))return;e.uniform2fv(this.addr,t),Ca(r,t)}}function Kn(e,t){const r=this.cache;if(void 0!==t.x)r[0]===t.x&&r[1]===t.y&&r[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),r[0]=t.x,r[1]=t.y,r[2]=t.z);else if(void 0!==t.r)r[0]===t.r&&r[1]===t.g&&r[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),r[0]=t.r,r[1]=t.g,r[2]=t.b);else{if(Da(r,t))return;e.uniform3fv(this.addr,t),Ca(r,t)}}function Ln(e,t){const r=this.cache;if(void 0!==t.x)r[0]===t.x&&r[1]===t.y&&r[2]===t.z&&r[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),r[0]=t.x,r[1]=t.y,r[2]=t.z,r[3]=t.w);else{if(Da(r,t))return;e.uniform4fv(this.addr,t),Ca(r,t)}}function Mn(e,t){const r=this.cache,n=t.elements;if(void 0===n){if(Da(r,t))return;e.uniformMatrix2fv(this.addr,!1,t),Ca(r,t)}else{if(Da(r,n))return;_g.set(n),e.uniformMatrix2fv(this.addr,!1,_g),Ca(r,n)}}function Nn(e,t){const r=this.cache,n=t.elements;if(void 0===n){if(Da(r,t))return;e.uniformMatrix3fv(this.addr,!1,t),Ca(r,t)}else{if(Da(r,n))return;$g.set(n),e.uniformMatrix3fv(this.addr,!1,$g),Ca(r,n)}}function On(e,t){const r=this.cache,n=t.elements;if(void 0===n){if(Da(r,t))return;e.uniformMatrix4fv(this.addr,!1,t),Ca(r,t)}else{if(Da(r,n))return;Zg.set(n),e.uniformMatrix4fv(this.addr,!1,Zg),Ca(r,n)}}function Pn(e,t){const r=this.cache;r[0]!==t&&(e.uniform1i(this.addr,t),r[0]=t)}function Qn(e,t){const r=this.cache;Da(r,t)||(e.uniform2iv(this.addr,t),Ca(r,t))}function Rn(e,t){const r=this.cache;Da(r,t)||(e.uniform3iv(this.addr,t),Ca(r,t))}function Sn(e,t){const r=this.cache;Da(r,t)||(e.uniform4iv(this.addr,t),Ca(r,t))}function Tn(e,t){const r=this.cache;r[0]!==t&&(e.uniform1ui(this.addr,t),r[0]=t)}function Un(e,t){const r=this.cache;Da(r,t)||(e.uniform2uiv(this.addr,t),Ca(r,t))}function Vn(e,t){const r=this.cache;Da(r,t)||(e.uniform3uiv(this.addr,t),Ca(r,t))}function Wn(e,t){const r=this.cache;Da(r,t)||(e.uniform4uiv(this.addr,t),Ca(r,t))}function Xn(e,t,r){const n=this.cache,i=r.allocateTextureUnit();n[0]!==i&&(e.uniform1i(this.addr,i),n[0]=i),r.safeSetTexture2D(t||Vg,i)}function Yn(e,t,r){const n=this.cache,i=r.allocateTextureUnit();n[0]!==i&&(e.uniform1i(this.addr,i),n[0]=i),r.setTexture3D(t||Hn,i)}function Zn(e,t,r){const n=this.cache,i=r.allocateTextureUnit();n[0]!==i&&(e.uniform1i(this.addr,i),n[0]=i),r.safeSetTextureCube(t||Wg,i)}function $n(e,t,r){const n=this.cache,i=r.allocateTextureUnit();n[0]!==i&&(e.uniform1i(this.addr,i),n[0]=i),r.setTexture2DArray(t||Gn,i)}function _n(e){switch(e){case 5126:return In;case 35664:return Jn;case 35665:return Kn;case 35666:return Ln;case 35674:return Mn;case 35675:return Nn;case 35676:return On;case 5124:case 35670:return Pn;case 35667:case 35671:return Qn;case 35668:case 35672:return Rn;case 35669:case 35673:return Sn;case 5125:return Tn;case 36294:return Un;case 36295:return Vn;case 36296:return Wn;case 35678:case 36198:case 36298:case 36306:case 35682:return Xn;case 35679:case 36299:case 36307:return Yn;case 35680:case 36300:case 36308:case 36293:return Zn;case 36289:case 36303:case 36311:case 36292:return $n;}}function ao(e,t){e.uniform1fv(this.addr,t)}function bo(e,t){const r=$b(t,this.size,2);e.uniform2fv(this.addr,r)}function co(e,t){const r=$b(t,this.size,3);e.uniform3fv(this.addr,r)}function eo(e,t){const r=$b(t,this.size,4);e.uniform4fv(this.addr,r)}function fo(e,t){const r=$b(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,r)}function go(e,t){const r=$b(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,r)}function ho(e,t){const r=$b(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,r)}function io(e,t){e.uniform1iv(this.addr,t)}function jo(e,t){e.uniform2iv(this.addr,t)}function ko(e,t){e.uniform3iv(this.addr,t)}function lo(e,t){e.uniform4iv(this.addr,t)}function mo(e,t){e.uniform1uiv(this.addr,t)}function no(e,t){e.uniform2uiv(this.addr,t)}function oo(e,t){e.uniform3uiv(this.addr,t)}function po(e,t){e.uniform4uiv(this.addr,t)}function qo(e,t,r){const n=t.length,i=ah(r,n);e.uniform1iv(this.addr,i);for(let a=0;a!==n;++a)r.safeSetTexture2D(t[a]||Vg,i[a])}function ro(e,t,r){const n=t.length,i=ah(r,n);e.uniform1iv(this.addr,i);for(let a=0;a!==n;++a)r.safeSetTextureCube(t[a]||Wg,i[a])}function so(e){switch(e){case 5126:return ao;case 35664:return bo;case 35665:return co;case 35666:return eo;case 35674:return fo;case 35675:return go;case 35676:return ho;case 5124:case 35670:return io;case 35667:case 35671:return jo;case 35668:case 35672:return ko;case 35669:case 35673:return lo;case 5125:return mo;case 36294:return no;case 36295:return oo;case 36296:return po;case 35678:case 36198:case 36298:case 36306:case 35682:return qo;case 35680:case 36300:case 36308:case 36293:return ro;}}function to(e,t,r){this.id=e,this.addr=r,this.cache=[],this.setValue=_n(t.type)}function bh(e,t,r){this.id=e,this.addr=r,this.cache=[],this.size=t.size,this.setValue=so(t.type)}function ch(e){this.id=e,this.seq=[],this.map={}}bh.prototype.updateCache=function(e){const t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),Ca(t,e)},ch.prototype.setValue=function(e,t,r){const n=this.seq;for(let i=0,a=n.length;i!==a;++i){const a=n[i];a.setValue(e,t[a.id],r)}};const gf=/(\w+)(\])?(\[|\.)?/g;function dh(e,t){e.seq.push(t),e.map[t.id]=t}function uo(e,t,r){const n=e.name,i=n.length;for(gf.lastIndex=0;;){const a=gf.exec(n),o=gf.lastIndex;let s=a[1];const $="]"===a[2],l=a[3];if($&&(s|=0),void 0===l||"["===l&&o+2===i){dh(r,void 0===l?new to(s,e,t):new bh(s,e,t));break}{let e=r.map[s];void 0===e&&dh(r,e=new ch(s)),r=e}}}function mb(e,t){this.seq=[],this.map={};const r=e.getProgramParameter(t,35718);for(let n=0;n<r;++n){const r=e.getActiveUniform(t,n);uo(r,e.getUniformLocation(t,r.name),this)}}function eh(e,t,r){const n=e.createShader(t);return e.shaderSource(n,r),e.compileShader(n),n}mb.prototype.setValue=function(e,t,r,n){const i=this.map[t];void 0!==i&&i.setValue(e,r,n)},mb.prototype.setOptional=function(e,t,r){const n=t[r];void 0!==n&&this.setValue(e,r,n)},mb.upload=function(e,t,r,n){for(let i=0,a=t.length;i!==a;++i){const a=t[i],o=r[a.id];!1!==o.needsUpdate&&a.setValue(e,o.value,n)}},mb.seqWithValue=function(e,t){const r=[];for(let n=0,i=e.length;n!==i;++n){const i=e[n];i.id in t&&r.push(i)}return r};let vo=0;function wo(e){const t=e.split("\n");for(let r=0;r<t.length;r++)t[r]=r+1+": "+t[r];return t.join("\n")}function fh(e){switch(e){case pc:return["Linear","( value )"];case xg:return["sRGB","( value )"];case hk:return["RGBE","( value )"];case jk:return["RGBM","( value, 7.0 )"];case kk:return["RGBM","( value, 16.0 )"];case lk:return["RGBD","( value, 256.0 )"];case gk:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case ik:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"];}}function gh(e,t,r){const n=e.getShaderParameter(t,35713),i=e.getShaderInfoLog(t).trim();return n&&""===i?"":"THREE.WebGLShader: gl.getShaderInfoLog() "+r+"\n"+i+wo(e.getShaderSource(t))}function Ac(e,t){const r=fh(t);return"vec4 "+e+"( vec4 value ) { return "+r[0]+"ToLinear"+r[1]+"; }"}function xo(e,t){const r=fh(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+r[0]+r[1]+"; }"}function yo(e,t){let r;switch(t){case gj:r="Linear";break;case hj:r="Reinhard";break;case ij:r="OptimizedCineon";break;case jj:r="ACESFilmic";break;case kj:r="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),r="Linear";}return"vec3 "+e+"( vec3 color ) { return "+r+"ToneMapping( color ); }"}function zo(e){return[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission>0)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Bc).join("\n")}function Ao(e){const t=[];for(const r in e){const n=e[r];!1!==n&&t.push("#define "+r+" "+n)}return t.join("\n")}function Bo(e,t){const r={},n=e.getProgramParameter(t,35721);for(let i=0;i<n;i++){const n=e.getActiveAttrib(t,i).name;r[n]=e.getAttribLocation(t,n)}return r}function Bc(e){return""!==e}function hh(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function ih(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const Co=/^[ \t]*#include +<([\w\d./]+)>/gm;function hf(e){return e.replace(Co,Do)}function Do(e,t){const r=ha[t];if(void 0===r)throw new Error("Can not resolve #include <"+t+">");return hf(r)}const Eo=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Fo=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function jh(e){return e.replace(Fo,kh).replace(Eo,Go)}function Go(e,t,r,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),kh(e,t,r,n)}function kh(e,t,r,n){let i="";for(let a=parseInt(t);a<parseInt(r);a++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return i}function lh(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function Ho(e){let t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===ag?t="SHADOWMAP_TYPE_PCF":e.shadowMapType===Mi?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===jc&&(t="SHADOWMAP_TYPE_VSM"),t}function Io(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case $d:case _d:t="ENVMAP_TYPE_CUBE";break;case je:case ke:t="ENVMAP_TYPE_CUBE_UV";}return t}function Jo(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case _d:case ke:t="ENVMAP_MODE_REFRACTION";}return t}function Ko(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case Uc:t="ENVMAP_BLENDING_MULTIPLY";break;case ej:t="ENVMAP_BLENDING_MIX";break;case fj:t="ENVMAP_BLENDING_ADD";}return t}function Lo(e,t,r,n){const i=e.getContext(),a=r.defines;let o=r.vertexShader,s=r.fragmentShader;const $=Ho(r),l=Io(r),c=Jo(r),p=Ko(r),h=e.gammaFactor>0?e.gammaFactor:1,u=r.isWebGL2?"":zo(r),g=Ao(a),d=i.createProgram();let m,f,x=r.glslVersion?"#version "+r.glslVersion+"\n":"";r.isRawShaderMaterial?((m=[g].filter(Bc).join("\n")).length>0&&(m+="\n"),(f=[u,g].filter(Bc).join("\n")).length>0&&(f+="\n")):(m=[lh(r),"#define SHADER_NAME "+r.shaderName,g,r.instancing?"#define USE_INSTANCING":"",r.instancingColor?"#define USE_INSTANCING_COLOR":"",r.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+h,"#define MAX_BONES "+r.maxBones,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+c:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMap&&r.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",r.normalMap&&r.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.displacementMap&&r.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.transmission?"#define USE_TRANSMISSION":"",r.transmissionMap?"#define USE_TRANSMISSIONMAP":"",r.thicknessMap?"#define USE_THICKNESSMAP":"",r.vertexTangents?"#define USE_TANGENT":"",r.vertexColors?"#define USE_COLOR":"",r.vertexAlphas?"#define USE_COLOR_ALPHA":"",r.vertexUvs?"#define USE_UV":"",r.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",r.flatShading?"#define FLAT_SHADED":"",r.skinning?"#define USE_SKINNING":"",r.useVertexTexture?"#define BONE_TEXTURE":"",r.morphTargets?"#define USE_MORPHTARGETS":"",r.morphNormals&&!1===r.flatShading?"#define USE_MORPHNORMALS":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+$:"",r.sizeAttenuation?"#define USE_SIZEATTENUATION":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Bc).join("\n"),f=[u,lh(r),"#define SHADER_NAME "+r.shaderName,g,r.alphaTest?"#define ALPHATEST "+r.alphaTest+(r.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+h,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.matcap?"#define USE_MATCAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+l:"",r.envMap?"#define "+c:"",r.envMap?"#define "+p:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMap&&r.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",r.normalMap&&r.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.sheen?"#define USE_SHEEN":"",r.transmission?"#define USE_TRANSMISSION":"",r.transmissionMap?"#define USE_TRANSMISSIONMAP":"",r.thicknessMap?"#define USE_THICKNESSMAP":"",r.vertexTangents?"#define USE_TANGENT":"",r.vertexColors||r.instancingColor?"#define USE_COLOR":"",r.vertexAlphas?"#define USE_COLOR_ALPHA":"",r.vertexUvs?"#define USE_UV":"",r.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",r.gradientMap?"#define USE_GRADIENTMAP":"",r.flatShading?"#define FLAT_SHADED":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+$:"",r.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",r.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(r.extensionShaderTextureLOD||r.envMap)&&r.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",r.toneMapping!==Cb?"#define TONE_MAPPING":"",r.toneMapping!==Cb?ha.tonemapping_pars_fragment:"",r.toneMapping!==Cb?yo("toneMapping",r.toneMapping):"",r.dithering?"#define DITHERING":"",ha.encodings_pars_fragment,r.map?Ac("mapTexelToLinear",r.mapEncoding):"",r.matcap?Ac("matcapTexelToLinear",r.matcapEncoding):"",r.envMap?Ac("envMapTexelToLinear",r.envMapEncoding):"",r.emissiveMap?Ac("emissiveMapTexelToLinear",r.emissiveMapEncoding):"",r.lightMap?Ac("lightMapTexelToLinear",r.lightMapEncoding):"",xo("linearToOutputTexel",r.outputEncoding),r.depthPacking?"#define DEPTH_PACKING "+r.depthPacking:"","\n"].filter(Bc).join("\n")),o=ih(o=hh(o=hf(o),r),r),s=ih(s=hh(s=hf(s),r),r),o=jh(o),s=jh(s),r.isWebGL2&&!0!==r.isRawShaderMaterial&&(x="#version 300 es\n",m=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+m,f=["#define varying in",r.glslVersion===yg?"":"out highp vec4 pc_fragColor;",r.glslVersion===yg?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+f);const v=x+f+s,B=eh(i,35633,x+m+o),_=eh(i,35632,v);if(i.attachShader(d,B),i.attachShader(d,_),void 0!==r.index0AttributeName?i.bindAttribLocation(d,0,r.index0AttributeName):!0===r.morphTargets&&i.bindAttribLocation(d,0,"position"),i.linkProgram(d),e.debug.checkShaderErrors){const e=i.getProgramInfoLog(d).trim(),t=i.getShaderInfoLog(B).trim(),r=i.getShaderInfoLog(_).trim();let n=!0,a=!0;if(!1===i.getProgramParameter(d,35714)){n=!1;const t=gh(i,B,"vertex"),r=gh(i,_,"fragment");console.error("THREE.WebGLProgram: shader error: ",i.getError(),"35715",i.getProgramParameter(d,35715),"gl.getProgramInfoLog",e,t,r)}else""!==e?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",e):""!==t&&""!==r||(a=!1);a&&(this.diagnostics={runnable:n,programLog:e,vertexShader:{log:t,prefix:m},fragmentShader:{log:r,prefix:f}})}let K,y;return i.deleteShader(B),i.deleteShader(_),this.getUniforms=function(){return void 0===K&&(K=new mb(i,d)),K},this.getAttributes=function(){return void 0===y&&(y=Bo(i,d)),y},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(d),this.program=void 0},this.name=r.shaderName,this.id=vo++,this.cacheKey=t,this.usedTimes=1,this.program=d,this.vertexShader=B,this.fragmentShader=_,this}function Mo(e,t,r,n,i,a){const o=[],s=n.isWebGL2,$=n.logarithmicDepthBuffer,l=n.floatVertexTextures,c=n.maxVertexUniforms,p=n.vertexTextures;let h=n.precision;const u={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},g=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmission","transmissionMap","thicknessMap"];function d(e){let t;return e&&e.isTexture?t=e.encoding:e&&e.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),t=e.texture.encoding):t=pc,t}return{getParameters:function(i,o,g,m,f){const x=m.fog,v=i.isMeshStandardMaterial?m.environment:null,B=t.get(i.envMap||v),_=u[i.type],K=f.isSkinnedMesh?function(e){const t=e.skeleton.bones;if(l)return 1024;{const e=c,r=Math.floor((e-20)/4),n=Math.min(r,t.length);return n<t.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+t.length+" bones. This GPU supports "+n+"."),0):n}}(f):0;let y,b;if(null!==i.precision&&(h=n.getMaxPrecision(i.precision))!==i.precision&&console.warn("THREE.WebGLProgram.getParameters:",i.precision,"not supported, using",h,"instead."),_){const e=Ta[_];y=e.vertexShader,b=e.fragmentShader}else y=i.vertexShader,b=i.fragmentShader;const M=e.getRenderTarget();return{isWebGL2:s,shaderID:_,shaderName:i.type,vertexShader:y,fragmentShader:b,defines:i.defines,isRawShaderMaterial:!0===i.isRawShaderMaterial,glslVersion:i.glslVersion,precision:h,instancing:!0===f.isInstancedMesh,instancingColor:!0===f.isInstancedMesh&&null!==f.instanceColor,supportsVertexTextures:p,outputEncoding:null!==M?d(M.texture):e.outputEncoding,map:!!i.map,mapEncoding:d(i.map),matcap:!!i.matcap,matcapEncoding:d(i.matcap),envMap:!!B,envMapMode:B&&B.mapping,envMapEncoding:d(B),envMapCubeUV:!!B&&(B.mapping===je||B.mapping===ke),lightMap:!!i.lightMap,lightMapEncoding:d(i.lightMap),aoMap:!!i.aoMap,emissiveMap:!!i.emissiveMap,emissiveMapEncoding:d(i.emissiveMap),bumpMap:!!i.bumpMap,normalMap:!!i.normalMap,objectSpaceNormalMap:i.normalMapType===ok,tangentSpaceNormalMap:i.normalMapType===Hb,clearcoatMap:!!i.clearcoatMap,clearcoatRoughnessMap:!!i.clearcoatRoughnessMap,clearcoatNormalMap:!!i.clearcoatNormalMap,displacementMap:!!i.displacementMap,roughnessMap:!!i.roughnessMap,metalnessMap:!!i.metalnessMap,specularMap:!!i.specularMap,alphaMap:!!i.alphaMap,gradientMap:!!i.gradientMap,sheen:!!i.sheen,transmission:!!i.transmission,transmissionMap:!!i.transmissionMap,thicknessMap:!!i.thicknessMap,combine:i.combine,vertexTangents:i.normalMap&&i.vertexTangents,vertexColors:i.vertexColors,vertexAlphas:!0===i.vertexColors&&f.geometry&&f.geometry.attributes.color&&4===f.geometry.attributes.color.itemSize,vertexUvs:!!(i.map||i.bumpMap||i.normalMap||i.specularMap||i.alphaMap||i.emissiveMap||i.roughnessMap||i.metalnessMap||i.clearcoatMap||i.clearcoatRoughnessMap||i.clearcoatNormalMap||i.displacementMap||i.transmissionMap||i.thicknessMap),uvsVertexOnly:!(i.map||i.bumpMap||i.normalMap||i.specularMap||i.alphaMap||i.emissiveMap||i.roughnessMap||i.metalnessMap||i.clearcoatNormalMap||i.transmission||i.transmissionMap||i.thicknessMap||!i.displacementMap),fog:!!x,useFog:i.fog,fogExp2:x&&x.isFogExp2,flatShading:!!i.flatShading,sizeAttenuation:i.sizeAttenuation,logarithmicDepthBuffer:$,skinning:!0===f.isSkinnedMesh&&K>0,maxBones:K,useVertexTexture:l,morphTargets:i.morphTargets,morphNormals:i.morphNormals,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:i.dithering,shadowMapEnabled:e.shadowMap.enabled&&g.length>0,shadowMapType:e.shadowMap.type,toneMapping:i.toneMapped?e.toneMapping:Cb,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:i.premultipliedAlpha,alphaTest:i.alphaTest,doubleSided:i.side===Ab,flipSided:i.side===ra,depthPacking:void 0!==i.depthPacking&&i.depthPacking,index0AttributeName:i.index0AttributeName,extensionDerivatives:i.extensions&&i.extensions.derivatives,extensionFragDepth:i.extensions&&i.extensions.fragDepth,extensionDrawBuffers:i.extensions&&i.extensions.drawBuffers,extensionShaderTextureLOD:i.extensions&&i.extensions.shaderTextureLOD,rendererExtensionFragDepth:s||r.has("EXT_frag_depth"),rendererExtensionDrawBuffers:s||r.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:s||r.has("EXT_shader_texture_lod"),customProgramCacheKey:i.customProgramCacheKey()}},getProgramCacheKey:function(t){const r=[];if(t.shaderID?r.push(t.shaderID):(r.push(t.fragmentShader),r.push(t.vertexShader)),void 0!==t.defines)for(const e in t.defines)r.push(e),r.push(t.defines[e]);if(!1===t.isRawShaderMaterial){for(let e=0;e<g.length;e++)r.push(t[g[e]]);r.push(e.outputEncoding),r.push(e.gammaFactor)}return r.push(t.customProgramCacheKey),r.join()},getUniforms:function(e){const t=u[e.type];let r;if(t){const e=Ta[t];r=Sk.clone(e.uniforms)}else r=e.uniforms;return r},acquireProgram:function(t,r){let n;for(let e=0,i=o.length;e<i;e++){const t=o[e];if(t.cacheKey===r){++(n=t).usedTimes;break}}return void 0===n&&(n=new Lo(e,r,t,i),o.push(n)),n},releaseProgram:function(e){if(0==--e.usedTimes){const t=o.indexOf(e);o[t]=o[o.length-1],o.pop(),e.destroy()}},programs:o}}function No(){let e=new WeakMap;return{get:function(t){let r=e.get(t);return void 0===r&&(r={},e.set(t,r)),r},remove:function(t){e.delete(t)},update:function(t,r,n){e.get(t)[r]=n},dispose:function(){e=new WeakMap}}}function Oo(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function mh(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function nh(e){const t=[];let r=0;const n=[],i=[],a=[],o={id:-1};function s(n,i,a,s,$,l){let c=t[r];const p=e.get(a);return void 0===c?(c={id:n.id,object:n,geometry:i,material:a,program:p.program||o,groupOrder:s,renderOrder:n.renderOrder,z:$,group:l},t[r]=c):(c.id=n.id,c.object=n,c.geometry=i,c.material=a,c.program=p.program||o,c.groupOrder=s,c.renderOrder=n.renderOrder,c.z=$,c.group=l),r++,c}return{opaque:n,transmissive:i,transparent:a,init:function(){r=0,n.length=0,i.length=0,a.length=0},push:function(e,t,r,o,$,l){const c=s(e,t,r,o,$,l);r.transmission>0?i.push(c):!0===r.transparent?a.push(c):n.push(c)},unshift:function(e,t,r,o,$,l){const c=s(e,t,r,o,$,l);r.transmission>0?i.unshift(c):!0===r.transparent?a.unshift(c):n.unshift(c)},finish:function(){for(let e=r,n=t.length;e<n;e++){const r=t[e];if(null===r.id)break;r.id=null,r.object=null,r.geometry=null,r.material=null,r.program=null,r.group=null}},sort:function(e,t){n.length>1&&n.sort(e||Oo),i.length>1&&i.sort(t||mh),a.length>1&&a.sort(t||mh)}}}function Po(e){let t=new WeakMap;return{get:function(r,n){let i;return!1===t.has(r)?(i=new nh(e),t.set(r,[i])):n>=t.get(r).length?(i=new nh(e),t.get(r).push(i)):i=t.get(r)[n],i},dispose:function(){t=new WeakMap}}}function Qo(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let r;switch(t.type){case"DirectionalLight":r={direction:new aa,color:new da};break;case"SpotLight":r={position:new aa,direction:new aa,color:new da,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":r={position:new aa,color:new da,distance:0,decay:0};break;case"HemisphereLight":r={direction:new aa,skyColor:new da,groundColor:new da};break;case"RectAreaLight":r={color:new da,position:new aa,halfWidth:new aa,halfHeight:new aa};}return e[t.id]=r,r}}}function Ro(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let r;switch(t.type){case"DirectionalLight":case"SpotLight":r={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ba};break;case"PointLight":r={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ba,shadowCameraNear:1,shadowCameraFar:1e3};}return e[t.id]=r,r}}}let So=0;function To(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function Uo(e,t){const r=new Qo,n=Ro(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let $=0;$<9;$++)i.probe.push(new aa);const a=new aa,o=new ea,s=new ea;return{setup:function(a){let o=0,s=0,$=0;for(let e=0;e<9;e++)i.probe[e].set(0,0,0);let l=0,c=0,p=0,h=0,u=0,g=0,d=0,m=0;a.sort(To);for(let e=0,t=a.length;e<t;e++){const t=a[e],f=t.color,x=t.intensity,v=t.distance,B=t.shadow&&t.shadow.map?t.shadow.map.texture:null;if(t.isAmbientLight)o+=f.r*x,s+=f.g*x,$+=f.b*x;else if(t.isLightProbe)for(let e=0;e<9;e++)i.probe[e].addScaledVector(t.sh.coefficients[e],x);else if(t.isDirectionalLight){const e=r.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity),t.castShadow){const e=t.shadow,r=n.get(t);r.shadowBias=e.bias,r.shadowNormalBias=e.normalBias,r.shadowRadius=e.radius,r.shadowMapSize=e.mapSize,i.directionalShadow[l]=r,i.directionalShadowMap[l]=B,i.directionalShadowMatrix[l]=t.shadow.matrix,g++}i.directional[l]=e,l++}else if(t.isSpotLight){const e=r.get(t);if(e.position.setFromMatrixPosition(t.matrixWorld),e.color.copy(f).multiplyScalar(x),e.distance=v,e.coneCos=Math.cos(t.angle),e.penumbraCos=Math.cos(t.angle*(1-t.penumbra)),e.decay=t.decay,t.castShadow){const e=t.shadow,r=n.get(t);r.shadowBias=e.bias,r.shadowNormalBias=e.normalBias,r.shadowRadius=e.radius,r.shadowMapSize=e.mapSize,i.spotShadow[p]=r,i.spotShadowMap[p]=B,i.spotShadowMatrix[p]=t.shadow.matrix,m++}i.spot[p]=e,p++}else if(t.isRectAreaLight){const e=r.get(t);e.color.copy(f).multiplyScalar(x),e.halfWidth.set(.5*t.width,0,0),e.halfHeight.set(0,.5*t.height,0),i.rectArea[h]=e,h++}else if(t.isPointLight){const e=r.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity),e.distance=t.distance,e.decay=t.decay,t.castShadow){const e=t.shadow,r=n.get(t);r.shadowBias=e.bias,r.shadowNormalBias=e.normalBias,r.shadowRadius=e.radius,r.shadowMapSize=e.mapSize,r.shadowCameraNear=e.camera.near,r.shadowCameraFar=e.camera.far,i.pointShadow[c]=r,i.pointShadowMap[c]=B,i.pointShadowMatrix[c]=t.shadow.matrix,d++}i.point[c]=e,c++}else if(t.isHemisphereLight){const e=r.get(t);e.skyColor.copy(t.color).multiplyScalar(x),e.groundColor.copy(t.groundColor).multiplyScalar(x),i.hemi[u]=e,u++}}h>0&&(t.isWebGL2?(i.rectAreaLTC1=ca.LTC_FLOAT_1,i.rectAreaLTC2=ca.LTC_FLOAT_2):!0===e.has("OES_texture_float_linear")?(i.rectAreaLTC1=ca.LTC_FLOAT_1,i.rectAreaLTC2=ca.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(i.rectAreaLTC1=ca.LTC_HALF_1,i.rectAreaLTC2=ca.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=o,i.ambient[1]=s,i.ambient[2]=$;const f=i.hash;f.directionalLength===l&&f.pointLength===c&&f.spotLength===p&&f.rectAreaLength===h&&f.hemiLength===u&&f.numDirectionalShadows===g&&f.numPointShadows===d&&f.numSpotShadows===m||(i.directional.length=l,i.spot.length=p,i.rectArea.length=h,i.point.length=c,i.hemi.length=u,i.directionalShadow.length=g,i.directionalShadowMap.length=g,i.pointShadow.length=d,i.pointShadowMap.length=d,i.spotShadow.length=m,i.spotShadowMap.length=m,i.directionalShadowMatrix.length=g,i.pointShadowMatrix.length=d,i.spotShadowMatrix.length=m,f.directionalLength=l,f.pointLength=c,f.spotLength=p,f.rectAreaLength=h,f.hemiLength=u,f.numDirectionalShadows=g,f.numPointShadows=d,f.numSpotShadows=m,i.version=So++)},setupView:function(e,t){let r=0,n=0,$=0,l=0,c=0;const p=t.matrixWorldInverse;for(let h=0,u=e.length;h<u;h++){const t=e[h];if(t.isDirectionalLight){const e=i.directional[r];e.direction.setFromMatrixPosition(t.matrixWorld),a.setFromMatrixPosition(t.target.matrixWorld),e.direction.sub(a),e.direction.transformDirection(p),r++}else if(t.isSpotLight){const e=i.spot[$];e.position.setFromMatrixPosition(t.matrixWorld),e.position.applyMatrix4(p),e.direction.setFromMatrixPosition(t.matrixWorld),a.setFromMatrixPosition(t.target.matrixWorld),e.direction.sub(a),e.direction.transformDirection(p),$++}else if(t.isRectAreaLight){const e=i.rectArea[l];e.position.setFromMatrixPosition(t.matrixWorld),e.position.applyMatrix4(p),s.identity(),o.copy(t.matrixWorld),o.premultiply(p),s.extractRotation(o),e.halfWidth.set(.5*t.width,0,0),e.halfHeight.set(0,.5*t.height,0),e.halfWidth.applyMatrix4(s),e.halfHeight.applyMatrix4(s),l++}else if(t.isPointLight){const e=i.point[n];e.position.setFromMatrixPosition(t.matrixWorld),e.position.applyMatrix4(p),n++}else if(t.isHemisphereLight){const e=i.hemi[c];e.direction.setFromMatrixPosition(t.matrixWorld),e.direction.transformDirection(p),e.direction.normalize(),c++}}},state:i}}function oh(e,t){const r=new Uo(e,t),n=[],i=[];return{init:function(){n.length=0,i.length=0},state:{lightsArray:n,shadowsArray:i,lights:r},setupLights:function(){r.setup(n)},setupLightsView:function(e){r.setupView(n,e)},pushLight:function(e){n.push(e)},pushShadow:function(e){i.push(e)}}}function Vo(e,t){let r=new WeakMap;return{get:function(n,i=0){let a;return!1===r.has(n)?(a=new oh(e,t),r.set(n,[a])):i>=r.get(n).length?(a=new oh(e,t),r.get(n).push(a)):a=r.get(n)[i],a},dispose:function(){r=new WeakMap}}}class jf extends ya{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=mk,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}jf.prototype.isMeshDepthMaterial=!0;class kf extends ya{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new aa,this.nearDistance=1,this.farDistance=1e3,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}kf.prototype.isMeshDistanceMaterial=!0;var Wo="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}",Xo="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}";function ph(e,t,r){let n=new ud;const i=new ba,a=new ba,o=new la,s=[],$=[],l={},c=r.maxTextureSize,p={0:ra,1:kc,2:Ab},h=new lb({defines:{SAMPLE_RATE:.25,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new ba},radius:{value:4}},vertexShader:Xo,fragmentShader:Wo}),u=h.clone();u.defines.HORIZONTAL_PASS=1;const g=new ga;g.setAttribute("position",new pa(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const d=new Ma(g,h),m=this;function f(r,n){const i=t.update(d);h.uniforms.shadow_pass.value=r.map.texture,h.uniforms.resolution.value=r.mapSize,h.uniforms.radius.value=r.radius,e.setRenderTarget(r.mapPass),e.clear(),e.renderBufferDirect(n,null,i,h,d,null),u.uniforms.shadow_pass.value=r.mapPass.texture,u.uniforms.resolution.value=r.mapSize,u.uniforms.radius.value=r.radius,e.setRenderTarget(r.map),e.clear(),e.renderBufferDirect(n,null,i,u,d,null)}function x(e){const t=e<<0;let r=s[t];return void 0===r&&(r=new jf({depthPacking:nk,morphTargets:e}),s[t]=r),r}function v(e){const t=e<<0;let r=$[t];return void 0===r&&(r=new kf({morphTargets:e}),$[t]=r),r}function B(t,r,n,i,a,o,s){let $=null,c=x,h=t.customDepthMaterial;if(!0===i.isPointLight&&(c=v,h=t.customDistanceMaterial),void 0===h){let e=!1;!0===n.morphTargets&&(e=r.morphAttributes&&r.morphAttributes.position&&r.morphAttributes.position.length>0),$=c(e)}else $=h;if(e.localClippingEnabled&&!0===n.clipShadows&&0!==n.clippingPlanes.length){const e=$.uuid,t=n.uuid;let r=l[e];void 0===r&&(r={},l[e]=r);let i=r[t];void 0===i&&(i=$.clone(),r[t]=i),$=i}return $.visible=n.visible,$.wireframe=n.wireframe,$.side=s===jc?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:p[n.side],$.clipShadows=n.clipShadows,$.clippingPlanes=n.clippingPlanes,$.clipIntersection=n.clipIntersection,$.wireframeLinewidth=n.wireframeLinewidth,$.linewidth=n.linewidth,!0===i.isPointLight&&!0===$.isMeshDistanceMaterial&&($.referencePosition.setFromMatrixPosition(i.matrixWorld),$.nearDistance=a,$.farDistance=o),$}function _(r,i,a,o,s){if(!1===r.visible)return;if(r.layers.test(i.layers)&&(r.isMesh||r.isLine||r.isPoints)&&(r.castShadow||r.receiveShadow&&s===jc)&&(!r.frustumCulled||n.intersectsObject(r))){r.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,r.matrixWorld);const n=t.update(r),i=r.material;if(Array.isArray(i)){const t=n.groups;for(let $=0,l=t.length;$<l;$++){const l=t[$],c=i[l.materialIndex];if(c&&c.visible){const t=B(r,n,c,o,a.near,a.far,s);e.renderBufferDirect(a,null,n,t,r,l)}}}else if(i.visible){const t=B(r,n,i,o,a.near,a.far,s);e.renderBufferDirect(a,null,n,t,r,null)}}const $=r.children;for(let e=0,t=$.length;e<t;e++)_($[e],i,a,o,s)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=ag,this.render=function(t,r,s){if(!1===m.enabled)return;if(!1===m.autoUpdate&&!1===m.needsUpdate)return;if(0===t.length)return;const $=e.getRenderTarget(),l=e.getActiveCubeFace(),p=e.getActiveMipmapLevel(),h=e.state;h.setBlending(lc),h.buffers.color.setClear(1,1,1,1),h.buffers.depth.setTest(!0),h.setScissorTest(!1);for(let u=0,g=t.length;u<g;u++){const $=t[u],l=$.shadow;if(void 0===l){console.warn("THREE.WebGLShadowMap:",$,"has no shadow.");continue}if(!1===l.autoUpdate&&!1===l.needsUpdate)continue;i.copy(l.mapSize);const p=l.getFrameExtents();if(i.multiply(p),a.copy(l.mapSize),(i.x>c||i.y>c)&&(i.x>c&&(a.x=Math.floor(c/p.x),i.x=a.x*p.x,l.mapSize.x=a.x),i.y>c&&(a.y=Math.floor(c/p.y),i.y=a.y*p.y,l.mapSize.y=a.y)),null===l.map&&!l.isPointLightShadow&&this.type===jc){const e={minFilter:Ja,magFilter:Ja,format:Oa};l.map=new Wa(i.x,i.y,e),l.map.texture.name=$.name+".shadowMap",l.mapPass=new Wa(i.x,i.y,e),l.camera.updateProjectionMatrix()}if(null===l.map){const e={minFilter:za,magFilter:za,format:Oa};l.map=new Wa(i.x,i.y,e),l.map.texture.name=$.name+".shadowMap",l.camera.updateProjectionMatrix()}e.setRenderTarget(l.map),e.clear();const g=l.getViewportCount();for(let e=0;e<g;e++){const t=l.getViewport(e);o.set(a.x*t.x,a.y*t.y,a.x*t.z,a.y*t.w),h.viewport(o),l.updateMatrices($,e),n=l.getFrustum(),_(r,s,l.camera,$,this.type)}l.isPointLightShadow||this.type!==jc||f(l,s),l.needsUpdate=!1}m.needsUpdate=!1,e.setRenderTarget($,l,p)}}function Yo(e,t,r){const n=r.isWebGL2;const i=new function(){let t=!1;const r=new la;let n=null;const i=new la(0,0,0,0);return{setMask:function(r){n===r||t||(e.colorMask(r,r,r,r),n=r)},setLocked:function(e){t=e},setClear:function(t,n,a,o,s){!0===s&&(t*=o,n*=o,a*=o),r.set(t,n,a,o),!1===i.equals(r)&&(e.clearColor(t,n,a,o),i.copy(r))},reset:function(){t=!1,n=null,i.set(-1,0,0,0)}}},a=new function(){let t=!1,r=null,n=null,i=null;return{setTest:function(e){e?I(2929):G(2929)},setMask:function(n){r===n||t||(e.depthMask(n),r=n)},setFunc:function(t){if(n!==t){if(t)switch(t){case Zi:e.depthFunc(512);break;case $i:e.depthFunc(519);break;case _i:e.depthFunc(513);break;case Zd:e.depthFunc(515);break;case aj:e.depthFunc(514);break;case bj:e.depthFunc(518);break;case cj:e.depthFunc(516);break;case dj:e.depthFunc(517);break;default:e.depthFunc(515);}else e.depthFunc(515);n=t}},setLocked:function(e){t=e},setClear:function(t){i!==t&&(e.clearDepth(t),i=t)},reset:function(){t=!1,r=null,n=null,i=null}}},o=new function(){let t=!1,r=null,n=null,i=null,a=null,o=null,s=null,$=null,l=null;return{setTest:function(e){t||(e?I(2960):G(2960))},setMask:function(n){r===n||t||(e.stencilMask(n),r=n)},setFunc:function(t,r,o){n===t&&i===r&&a===o||(e.stencilFunc(t,r,o),n=t,i=r,a=o)},setOp:function(t,r,n){o===t&&s===r&&$===n||(e.stencilOp(t,r,n),o=t,s=r,$=n)},setLocked:function(e){t=e},setClear:function(t){l!==t&&(e.clearStencil(t),l=t)},reset:function(){t=!1,r=null,n=null,i=null,a=null,o=null,s=null,$=null,l=null}}};let s={},$=null,l={},c=null,p=!1,h=null,u=null,g=null,d=null,m=null,f=null,x=null,v=!1,B=null,_=null,K=null,y=null,b=null;const M=e.getParameter(35661);let S=!1,w=0;const T=e.getParameter(7938);-1!==T.indexOf("WebGL")?(w=parseFloat(/^WebGL (\d)/.exec(T)[1]),S=w>=1):-1!==T.indexOf("OpenGL ES")&&(w=parseFloat(/^OpenGL ES (\d)/.exec(T)[1]),S=w>=2);let A=null,E={};const L=e.getParameter(3088),C=e.getParameter(2978),R=new la().fromArray(L),P=new la().fromArray(C);function D(t,r,n){const i=new Uint8Array(4),a=e.createTexture();e.bindTexture(t,a),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(let o=0;o<n;o++)e.texImage2D(r+o,0,6408,1,1,0,6408,5121,i);return a}const F={};function I(t){!0!==s[t]&&(e.enable(t),s[t]=!0)}function G(t){!1!==s[t]&&(e.disable(t),s[t]=!1)}F[3553]=D(3553,3553,1),F[34067]=D(34067,34069,6),i.setClear(0,0,0,1),a.setClear(1),o.setClear(0),I(2929),a.setFunc(Zd),O(!1),z(_f),I(2884),U(lc);const N={[Bb]:32774,[Oi]:32778,[Pi]:32779};if(n){}else{const e=t.get("EXT_blend_minmax");null!==e&&e.MAX_EXT}const V={[Qi]:0,[Ri]:1,[Si]:768,[fg]:770,[Yi]:776,[Wi]:774,[Ui]:772,[Ti]:769,[gg]:771,[Xi]:775,[Vi]:773};function U(t,r,n,i,a,o,s,$){if(t!==lc){if(!1===p&&(I(3042),p=!0),t===Ni)a=a||r,o=o||n,s=s||i,r===u&&a===m||(e.blendEquationSeparate(N[r],N[a]),u=r,m=a),n===g&&i===d&&o===f&&s===x||(e.blendFuncSeparate(V[n],V[i],V[o],V[s]),g=n,d=i,f=o,x=s),h=t,v=null;else if(t!==h||$!==v){if(u===Bb&&m===Bb||(e.blendEquation(32774),u=Bb,m=Bb),$)switch(t){case mc:e.blendFuncSeparate(1,771,1,771);break;case cg:e.blendFunc(1,1);break;case dg:e.blendFuncSeparate(0,0,769,771);break;case eg:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t);}else switch(t){case mc:e.blendFuncSeparate(770,771,1,771);break;case cg:e.blendFunc(770,1);break;case dg:e.blendFunc(0,769);break;case eg:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t);}g=null,d=null,f=null,x=null,h=t,v=$}}else!0===p&&(G(3042),p=!1)}function O(t){B!==t&&(t?e.frontFace(2304):e.frontFace(2305),B=t)}function z(t){t!==Ki?(I(2884),t!==_&&(t===_f?e.cullFace(1029):t===Li?e.cullFace(1028):e.cullFace(1032))):G(2884),_=t}function H(t,r,n){t?(I(32823),y===r&&b===n||(e.polygonOffset(r,n),y=r,b=n)):G(32823)}function k(t){void 0===t&&(t=33984+M-1),A!==t&&(e.activeTexture(t),A=t)}return{buffers:{color:i,depth:a,stencil:o},enable:I,disable:G,bindFramebuffer:function(t,r){return null===r&&null!==$&&(r=$),l[t]!==r&&(e.bindFramebuffer(t,r),l[t]=r,n&&(36009===t&&(l[36160]=r),36160===t&&(l[36009]=r)),!0)},bindXRFramebuffer:function(t){t!==$&&(e.bindFramebuffer(36160,t),$=t)},useProgram:function(t){return c!==t&&(e.useProgram(t),c=t,!0)},setBlending:U,setMaterial:function(e,t){e.side===Ab?G(2884):I(2884);let r=e.side===ra;t&&(r=!r),O(r),e.blending===mc&&!1===e.transparent?U(lc):U(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),a.setFunc(e.depthFunc),a.setTest(e.depthTest),a.setMask(e.depthWrite),i.setMask(e.colorWrite);const n=e.stencilWrite;o.setTest(n),n&&(o.setMask(e.stencilWriteMask),o.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),o.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),H(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?I(32926):G(32926)},setFlipSided:O,setCullFace:z,setLineWidth:function(t){t!==K&&(S&&e.lineWidth(t),K=t)},setPolygonOffset:H,setScissorTest:function(e){e?I(3089):G(3089)},activeTexture:k,bindTexture:function(t,r){null===A&&k();let n=E[A];void 0===n&&(n={type:void 0,texture:void 0},E[A]=n),n.type===t&&n.texture===r||(e.bindTexture(t,r||F[t]),n.type=t,n.texture=r)},unbindTexture:function(){const t=E[A];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(t){!1===R.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),R.copy(t))},viewport:function(t){!1===P.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),P.copy(t))},reset:function(){e.disable(3042),e.disable(2884),e.disable(2929),e.disable(32823),e.disable(3089),e.disable(2960),e.disable(32926),e.blendEquation(32774),e.blendFunc(1,0),e.blendFuncSeparate(1,0,1,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(513),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(519,0,4294967295),e.stencilOp(7680,7680,7680),e.clearStencil(0),e.cullFace(1029),e.frontFace(2305),e.polygonOffset(0,0),e.activeTexture(33984),e.bindFramebuffer(36160,null),!0===n&&(e.bindFramebuffer(36009,null),e.bindFramebuffer(36008,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),s={},A=null,E={},$=null,l={},c=null,p=!1,h=null,u=null,g=null,d=null,m=null,f=null,x=null,v=!1,B=null,_=null,K=null,y=null,b=null,R.set(0,0,e.canvas.width,e.canvas.height),P.set(0,0,e.canvas.width,e.canvas.height),i.reset(),a.reset(),o.reset()}}}function Zo(e,t,r,n,i,a,o){const s=i.isWebGL2,$=i.maxTextures,l=i.maxCubemapSize,c=i.maxTextureSize,p=i.maxSamples,h=new WeakMap;let u,g=!1;try{g="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(G){}function d(e,t){return g?new OffscreenCanvas(e,t):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function m(e,t,r,n){let i=1;if((e.width>n||e.height>n)&&(i=n/Math.max(e.width,e.height)),i<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const n=t?Ag:Math.floor,a=n(i*e.width),o=n(i*e.height);void 0===u&&(u=d(a,o));const s=r?d(a,o):u;return s.width=a,s.height=o,s.getContext("2d").drawImage(e,0,0,a,o),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+a+"x"+o+")."),s}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function f(e){return Ee(e.width)&&Ee(e.height)}function x(e,t){return e.generateMipmaps&&t&&e.minFilter!==za&&e.minFilter!==Ja}function v(t,r,i,a,o=1){e.generateMipmap(t),n.get(r).__maxMipLevel=Math.log2(Math.max(i,a,o))}function B(r,n,i){if(!1===s)return n;if(null!==r){if(void 0!==e[r])return e[r];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+r+"'")}let a=n;return 6403===n&&(5126===i&&(a=33326),5131===i&&(a=33325),5121===i&&(a=33321)),6407===n&&(5126===i&&(a=34837),5131===i&&(a=34843),5121===i&&(a=32849)),6408===n&&(5126===i&&(a=34836),5131===i&&(a=34842),5121===i&&(a=32856)),33325!==a&&33326!==a&&34842!==a&&34836!==a||t.get("EXT_color_buffer_float"),a}function _(e){return e===za||e===kg||e===lg?9728:9729}function K(t){const r=t.target;r.removeEventListener("dispose",K),function(t){const r=n.get(t);if(void 0===r.__webglInit)return;e.deleteTexture(r.__webglTexture),n.remove(t)}(r),r.isVideoTexture&&h.delete(r),o.memory.textures--}function y(t){const r=t.target;r.removeEventListener("dispose",y),function(t){const r=t.texture,i=n.get(t),a=n.get(r);if(!t)return;void 0!==a.__webglTexture&&(e.deleteTexture(a.__webglTexture),o.memory.textures--);t.depthTexture&&t.depthTexture.dispose();if(t.isWebGLCubeRenderTarget)for(let n=0;n<6;n++)e.deleteFramebuffer(i.__webglFramebuffer[n]),i.__webglDepthbuffer&&e.deleteRenderbuffer(i.__webglDepthbuffer[n]);else e.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&e.deleteRenderbuffer(i.__webglDepthbuffer),i.__webglMultisampledFramebuffer&&e.deleteFramebuffer(i.__webglMultisampledFramebuffer),i.__webglColorRenderbuffer&&e.deleteRenderbuffer(i.__webglColorRenderbuffer),i.__webglDepthRenderbuffer&&e.deleteRenderbuffer(i.__webglDepthRenderbuffer);if(t.isWebGLMultipleRenderTargets)for(let s=0,$=r.length;s<$;s++){const t=n.get(r[s]);t.__webglTexture&&(e.deleteTexture(t.__webglTexture),o.memory.textures--),n.remove(r[s])}n.remove(r),n.remove(t)}(r)}let b=0;function M(e,t){const i=n.get(e);if(e.isVideoTexture&&function(e){const t=o.render.frame;h.get(e)!==t&&(h.set(e,t),e.update())}(e),e.version>0&&i.__version!==e.version){const r=e.image;if(void 0===r)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==r.complete)return void L(i,e,t);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}r.activeTexture(33984+t),r.bindTexture(3553,i.__webglTexture)}function S(t,i){const o=n.get(t);t.version>0&&o.__version!==t.version?function(t,n,i){if(6!==n.image.length)return;E(t,n),r.activeTexture(33984+i),r.bindTexture(34067,t.__webglTexture),e.pixelStorei(37440,n.flipY),e.pixelStorei(37441,n.premultiplyAlpha),e.pixelStorei(3317,n.unpackAlignment),e.pixelStorei(37443,0);const o=n&&(n.isCompressedTexture||n.image[0].isCompressedTexture),$=n.image[0]&&n.image[0].isDataTexture,c=[];for(let e=0;e<6;e++)c[e]=o||$?$?n.image[e].image:n.image[e]:m(n.image[e],!1,!0,l);const p=c[0],h=f(p)||s,u=a.convert(n.format),g=a.convert(n.type),d=B(n.internalFormat,u,g);let _;if(A(34067,n,h),o){for(let e=0;e<6;e++){_=c[e].mipmaps;for(let t=0;t<_.length;t++){const i=_[t];n.format!==Oa&&n.format!==tb?null!==u?r.compressedTexImage2D(34069+e,t,d,i.width,i.height,0,i.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):r.texImage2D(34069+e,t,d,i.width,i.height,0,u,g,i.data)}}t.__maxMipLevel=_.length-1}else{_=n.mipmaps;for(let e=0;e<6;e++)if($){r.texImage2D(34069+e,0,d,c[e].width,c[e].height,0,u,g,c[e].data);for(let t=0;t<_.length;t++){const n=_[t],i=n.image[e].image;r.texImage2D(34069+e,t+1,d,i.width,i.height,0,u,g,i.data)}}else{r.texImage2D(34069+e,0,d,u,g,c[e]);for(let t=0;t<_.length;t++){const n=_[t];r.texImage2D(34069+e,t+1,d,u,g,n.image[e])}}t.__maxMipLevel=_.length}x(n,h)&&v(34067,n,p.width,p.height);t.__version=n.version,n.onUpdate&&n.onUpdate(n)}(o,t,i):(r.activeTexture(33984+i),r.bindTexture(34067,o.__webglTexture))}const w={[qe]:10497,[Fa]:33071,[we]:33648},T={[za]:9728,[kg]:9984,[lg]:9986,[Ja]:9729,[lj]:9985,[Vc]:9987};function A(r,a,o){if(o?(e.texParameteri(r,10242,w[a.wrapS]),e.texParameteri(r,10243,w[a.wrapT]),32879!==r&&35866!==r||e.texParameteri(r,32882,w[a.wrapR]),e.texParameteri(r,10240,T[a.magFilter]),e.texParameteri(r,10241,T[a.minFilter])):(e.texParameteri(r,10242,33071),e.texParameteri(r,10243,33071),32879!==r&&35866!==r||e.texParameteri(r,32882,33071),a.wrapS===Fa&&a.wrapT===Fa||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(r,10240,_(a.magFilter)),e.texParameteri(r,10241,_(a.minFilter)),a.minFilter!==za&&a.minFilter!==Ja&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===t.has("EXT_texture_filter_anisotropic")){const o=t.get("EXT_texture_filter_anisotropic");if(a.type===cb&&!1===t.has("OES_texture_float_linear"))return;if(!1===s&&a.type===Db&&!1===t.has("OES_texture_half_float_linear"))return;(a.anisotropy>1||n.get(a).__currentAnisotropy)&&(e.texParameterf(r,o.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,i.getMaxAnisotropy())),n.get(a).__currentAnisotropy=a.anisotropy)}}function E(t,r){void 0===t.__webglInit&&(t.__webglInit=!0,r.addEventListener("dispose",K),t.__webglTexture=e.createTexture(),o.memory.textures++)}function L(t,n,i){let o=3553;n.isDataTexture2DArray&&(o=35866),n.isDataTexture3D&&(o=32879),E(t,n),r.activeTexture(33984+i),r.bindTexture(o,t.__webglTexture),e.pixelStorei(37440,n.flipY),e.pixelStorei(37441,n.premultiplyAlpha),e.pixelStorei(3317,n.unpackAlignment),e.pixelStorei(37443,0);const $=function(e){return!s&&(e.wrapS!==Fa||e.wrapT!==Fa||e.minFilter!==za&&e.minFilter!==Ja)}(n)&&!1===f(n.image),l=m(n.image,$,!1,c),p=f(l)||s,h=a.convert(n.format);let u,g=a.convert(n.type),d=B(n.internalFormat,h,g);A(o,n,p);const _=n.mipmaps;if(n.isDepthTexture)d=6402,s?d=n.type===cb?36012:n.type===Yc?33190:n.type===nc?35056:33189:n.type===cb&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),n.format===Eb&&6402===d&&n.type!==Xc&&n.type!==Yc&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=Xc,g=a.convert(n.type)),n.format===oc&&6402===d&&(d=34041,n.type!==nc&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=nc,g=a.convert(n.type))),r.texImage2D(3553,0,d,l.width,l.height,0,h,g,null);else if(n.isDataTexture){if(_.length>0&&p){for(let e=0,t=_.length;e<t;e++)u=_[e],r.texImage2D(3553,e,d,u.width,u.height,0,h,g,u.data);n.generateMipmaps=!1,t.__maxMipLevel=_.length-1}else r.texImage2D(3553,0,d,l.width,l.height,0,h,g,l.data),t.__maxMipLevel=0;}else if(n.isCompressedTexture){for(let e=0,t=_.length;e<t;e++)u=_[e],n.format!==Oa&&n.format!==tb?null!==h?r.compressedTexImage2D(3553,e,d,u.width,u.height,0,u.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):r.texImage2D(3553,e,d,u.width,u.height,0,h,g,u.data);t.__maxMipLevel=_.length-1}else if(n.isDataTexture2DArray)r.texImage3D(35866,0,d,l.width,l.height,l.depth,0,h,g,l.data),t.__maxMipLevel=0;else if(n.isDataTexture3D)r.texImage3D(32879,0,d,l.width,l.height,l.depth,0,h,g,l.data),t.__maxMipLevel=0;else if(_.length>0&&p){for(let e=0,t=_.length;e<t;e++)u=_[e],r.texImage2D(3553,e,d,h,g,u);n.generateMipmaps=!1,t.__maxMipLevel=_.length-1}else r.texImage2D(3553,0,d,h,g,l),t.__maxMipLevel=0;x(n,p)&&v(o,n,l.width,l.height),t.__version=n.version,n.onUpdate&&n.onUpdate(n)}function C(t,i,o,s,$){const l=a.convert(o.format),c=a.convert(o.type),p=B(o.internalFormat,l,c);32879===$||35866===$?r.texImage3D($,0,p,i.width,i.height,i.depth,0,l,c,null):r.texImage2D($,0,p,i.width,i.height,0,l,c,null),r.bindFramebuffer(36160,t),e.framebufferTexture2D(36160,s,$,n.get(o).__webglTexture,0),r.bindFramebuffer(36160,null)}function R(t,r,n){if(e.bindRenderbuffer(36161,t),r.depthBuffer&&!r.stencilBuffer){let i=33189;if(n){const t=r.depthTexture;t&&t.isDepthTexture&&(t.type===cb?i=36012:t.type===Yc&&(i=33190));const n=D(r);e.renderbufferStorageMultisample(36161,n,i,r.width,r.height)}else e.renderbufferStorage(36161,i,r.width,r.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(r.depthBuffer&&r.stencilBuffer){if(n){const t=D(r);e.renderbufferStorageMultisample(36161,t,35056,r.width,r.height)}else e.renderbufferStorage(36161,34041,r.width,r.height);e.framebufferRenderbuffer(36160,33306,36161,t)}else{const t=!0===r.isWebGLMultipleRenderTargets?r.texture[0]:r.texture,i=a.convert(t.format),o=a.convert(t.type),s=B(t.internalFormat,i,o);if(n){const t=D(r);e.renderbufferStorageMultisample(36161,t,s,r.width,r.height)}else e.renderbufferStorage(36161,s,r.width,r.height)}e.bindRenderbuffer(36161,null)}function P(t){const i=n.get(t),a=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture){if(a)throw new Error("target.depthTexture not supported in Cube render targets");!function(t,i){if(i&&i.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(r.bindFramebuffer(36160,t),!i.depthTexture||!i.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");n.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),M(i.depthTexture,0);const a=n.get(i.depthTexture).__webglTexture;if(i.depthTexture.format===Eb)e.framebufferTexture2D(36160,36096,3553,a,0);else{if(i.depthTexture.format!==oc)throw new Error("Unknown depthTexture format");e.framebufferTexture2D(36160,33306,3553,a,0)}}(i.__webglFramebuffer,t)}else if(a){i.__webglDepthbuffer=[];for(let n=0;n<6;n++)r.bindFramebuffer(36160,i.__webglFramebuffer[n]),i.__webglDepthbuffer[n]=e.createRenderbuffer(),R(i.__webglDepthbuffer[n],t,!1)}else r.bindFramebuffer(36160,i.__webglFramebuffer),i.__webglDepthbuffer=e.createRenderbuffer(),R(i.__webglDepthbuffer,t,!1);r.bindFramebuffer(36160,null)}function D(e){return s&&e.isWebGLMultisampleRenderTarget?Math.min(p,e.samples):0}let F=!1,I=!1;this.allocateTextureUnit=function(){const e=b;return e>=$&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+$),b+=1,e},this.resetTextureUnits=function(){b=0},this.setTexture2D=M,this.setTexture2DArray=function(e,t){const i=n.get(e);e.version>0&&i.__version!==e.version?L(i,e,t):(r.activeTexture(33984+t),r.bindTexture(35866,i.__webglTexture))},this.setTexture3D=function(e,t){const i=n.get(e);e.version>0&&i.__version!==e.version?L(i,e,t):(r.activeTexture(33984+t),r.bindTexture(32879,i.__webglTexture))},this.setTextureCube=S,this.setupRenderTarget=function(t){const $=t.texture,l=n.get(t),c=n.get($);t.addEventListener("dispose",y),!0!==t.isWebGLMultipleRenderTargets&&(c.__webglTexture=e.createTexture(),c.__version=$.version,o.memory.textures++);const p=!0===t.isWebGLCubeRenderTarget,h=!0===t.isWebGLMultipleRenderTargets,u=!0===t.isWebGLMultisampleRenderTarget,g=$.isDataTexture3D||$.isDataTexture2DArray,d=f(t)||s;if(!s||$.format!==tb||$.type!==cb&&$.type!==Db||($.format=Oa,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),p){l.__webglFramebuffer=[];for(let t=0;t<6;t++)l.__webglFramebuffer[t]=e.createFramebuffer()}else if(l.__webglFramebuffer=e.createFramebuffer(),h){if(i.drawBuffers){const r=t.texture;for(let t=0,i=r.length;t<i;t++){const i=n.get(r[t]);void 0===i.__webglTexture&&(i.__webglTexture=e.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");}else if(u)if(s){l.__webglMultisampledFramebuffer=e.createFramebuffer(),l.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,l.__webglColorRenderbuffer);const n=a.convert($.format),i=a.convert($.type),o=B($.internalFormat,n,i),s=D(t);e.renderbufferStorageMultisample(36161,s,o,t.width,t.height),r.bindFramebuffer(36160,l.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,l.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),t.depthBuffer&&(l.__webglDepthRenderbuffer=e.createRenderbuffer(),R(l.__webglDepthRenderbuffer,t,!0)),r.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(p){r.bindTexture(34067,c.__webglTexture),A(34067,$,d);for(let e=0;e<6;e++)C(l.__webglFramebuffer[e],t,$,36064,34069+e);x($,d)&&v(34067,$,t.width,t.height),r.bindTexture(34067,null)}else if(h){const e=t.texture;for(let i=0,a=e.length;i<a;i++){const a=e[i],o=n.get(a);r.bindTexture(3553,o.__webglTexture),A(3553,a,d),C(l.__webglFramebuffer,t,a,36064+i,3553),x(a,d)&&v(3553,a,t.width,t.height)}r.bindTexture(3553,null)}else{let e=3553;g&&(s?e=$.isDataTexture3D?32879:35866:console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),r.bindTexture(e,c.__webglTexture),A(e,$,d),C(l.__webglFramebuffer,t,$,36064,e),x($,d)&&v(e,$,t.width,t.height,t.depth),r.bindTexture(e,null)}t.depthBuffer&&P(t)},this.updateRenderTargetMipmap=function(e){const t=f(e)||s,i=!0===e.isWebGLMultipleRenderTargets?e.texture:[e.texture];for(let a=0,o=i.length;a<o;a++){const o=i[a];if(x(o,t)){const t=e.isWebGLCubeRenderTarget?34067:3553,i=n.get(o).__webglTexture;r.bindTexture(t,i),v(t,o,e.width,e.height),r.bindTexture(t,null)}}},this.updateMultisampleRenderTarget=function(t){if(t.isWebGLMultisampleRenderTarget)if(s){const i=t.width,a=t.height;let o=16384;t.depthBuffer&&(o|=256),t.stencilBuffer&&(o|=1024);const s=n.get(t);r.bindFramebuffer(36008,s.__webglMultisampledFramebuffer),r.bindFramebuffer(36009,s.__webglFramebuffer),e.blitFramebuffer(0,0,i,a,0,0,i,a,o,9728),r.bindFramebuffer(36008,null),r.bindFramebuffer(36009,s.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(e,t){e&&e.isWebGLRenderTarget&&(!1===F&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),F=!0),e=e.texture),M(e,t)},this.safeSetTextureCube=function(e,t){e&&e.isWebGLCubeRenderTarget&&(!1===I&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),I=!0),e=e.texture),S(e,t)}}function $o(e,t,r){const n=r.isWebGL2;return{convert:function(e){let r;if(e===Wc)return 5121;if(e===pj)return 32819;if(e===qj)return 32820;if(e===rj)return 33635;if(e===mj)return 5120;if(e===nj)return 5122;if(e===Xc)return 5123;if(e===oj)return 5124;if(e===Yc)return 5125;if(e===cb)return 5126;if(e===Db)return n?5131:null!==(r=t.get("OES_texture_half_float"))?r.HALF_FLOAT_OES:null;if(e===sj)return 6406;if(e===tb)return 6407;if(e===Oa)return 6408;if(e===tj)return 6409;if(e===uj)return 6410;if(e===Eb)return 6402;if(e===oc)return 34041;if(e===vj)return 6403;if(e===wj)return 36244;if(e===xj)return 33319;if(e===yj)return 33320;if(e===zj)return 36248;if(e===Aj)return 36249;if(e===mg||e===ng||e===og||e===pg){if(null===(r=t.get("WEBGL_compressed_texture_s3tc")))return null;if(e===mg)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===ng)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===og)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===pg)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(e===qg||e===rg||e===sg||e===tg){if(null===(r=t.get("WEBGL_compressed_texture_pvrtc")))return null;if(e===qg)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===rg)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===sg)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===tg)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===Bj)return null!==(r=t.get("WEBGL_compressed_texture_etc1"))?r.COMPRESSED_RGB_ETC1_WEBGL:null;if((e===ug||e===vg)&&null!==(r=t.get("WEBGL_compressed_texture_etc"))){if(e===ug)return r.COMPRESSED_RGB8_ETC2;if(e===vg)return r.COMPRESSED_RGBA8_ETC2_EAC}return e===Cj||e===Dj||e===Ej||e===Fj||e===Gj||e===Hj||e===Ij||e===Jj||e===Kj||e===Lj||e===Mj||e===Nj||e===Oj||e===Pj||e===Rj||e===Sj||e===Tj||e===Uj||e===Vj||e===Wj||e===Xj||e===Yj||e===Zj||e===$j||e===_j||e===ak||e===bk||e===ck?null!==(r=t.get("WEBGL_compressed_texture_astc"))?e:null:e===Qj?null!==(r=t.get("EXT_texture_compression_bptc"))?e:null:e===nc?n?34042:null!==(r=t.get("WEBGL_depth_texture"))?r.UNSIGNED_INT_24_8_WEBGL:null:void 0}}}class qh extends Ea{constructor(e=[]){super(),this.cameras=e}}qh.prototype.isArrayCamera=!0;class Cc extends ja{constructor(){super(),this.type="Group"}}Cc.prototype.isGroup=!0;const _o={type:"move"};class lf{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Cc,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Cc,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new aa,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new aa),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Cc,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new aa,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new aa),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,r){let n=null,i=null,a=null;const o=this._targetRay,s=this._grip,$=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState)if(null!==o&&null!==(n=t.getPose(e.targetRaySpace,r))&&(o.matrix.fromArray(n.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),n.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(n.linearVelocity)):o.hasLinearVelocity=!1,n.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(n.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(_o)),$&&e.hand){a=!0;for(const a of e.hand.values()){const e=t.getJointPose(a,r);if(void 0===$.joints[a.jointName]){const e=new Cc;e.matrixAutoUpdate=!1,e.visible=!1,$.joints[a.jointName]=e,$.add(e)}const n=$.joints[a.jointName];null!==e&&(n.matrix.fromArray(e.transform.matrix),n.matrix.decompose(n.position,n.rotation,n.scale),n.jointRadius=e.radius),n.visible=null!==e}const n=$.joints["index-finger-tip"],i=$.joints["thumb-tip"],o=n.position.distanceTo(i.position),s=.02,l=.005;$.inputState.pinching&&o>s+l?($.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!$.inputState.pinching&&o<=s-l&&($.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==s&&e.gripSpace&&null!==(i=t.getPose(e.gripSpace,r))&&(s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),i.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(i.linearVelocity)):s.hasLinearVelocity=!1,i.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(i.angularVelocity)):s.hasAngularVelocity=!1);return null!==o&&(o.visible=null!==n),null!==s&&(s.visible=null!==i),null!==$&&($.visible=null!==a),this}}class ap extends db{constructor(e,t){super();const r=this,n=e.state;let i=null,a=1,o=null,s="local-floor",$=null,l=null,c=null,p=null;const h=[],u=new Map,g=new Ea;g.layers.enable(1),g.viewport=new la;const d=new Ea;d.layers.enable(2),d.viewport=new la;const m=[g,d],f=new qh;f.layers.enable(1),f.layers.enable(2);let x=null,v=null;function B(e){const t=u.get(e.inputSource);t&&t.dispatchEvent({type:e.type,data:e.inputSource})}function _(){u.forEach(function(e,t){e.disconnect(t)}),u.clear(),x=null,v=null,n.bindXRFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),w.stop(),r.isPresenting=!1,r.dispatchEvent({type:"sessionend"})}function K(e){const t=i.inputSources;for(let r=0;r<h.length;r++)u.set(t[r],h[r]);for(let r=0;r<e.removed.length;r++){const t=e.removed[r],n=u.get(t);n&&(n.dispatchEvent({type:"disconnected",data:t}),u.delete(t))}for(let r=0;r<e.added.length;r++){const t=e.added[r],n=u.get(t);n&&n.dispatchEvent({type:"connected",data:t})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=h[e];return void 0===t&&(t=new lf,h[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=h[e];return void 0===t&&(t=new lf,h[e]=t),t.getGripSpace()},this.getHand=function(e){let t=h[e];return void 0===t&&(t=new lf,h[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){a=e,!0===r.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){s=e,!0===r.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return o},this.getSession=function(){return i},this.setSession=async function(e){if(null!==(i=e)){i.addEventListener("select",B),i.addEventListener("selectstart",B),i.addEventListener("selectend",B),i.addEventListener("squeeze",B),i.addEventListener("squeezestart",B),i.addEventListener("squeezeend",B),i.addEventListener("end",_),i.addEventListener("inputsourceschange",K);const e=t.getContextAttributes();if(!0!==e.xrCompatible&&(await t.makeXRCompatible()),void 0===i.renderState.layers){const r={antialias:e.antialias,alpha:e.alpha,depth:e.depth,stencil:e.stencil,framebufferScaleFactor:a},n=new XRWebGLLayer(i,t,r);i.updateRenderState({baseLayer:n})}else{let r=0;e.depth&&(r=e.stencil?34041:6402);const n={colorFormat:e.alpha?6408:6407,depthFormat:r,scaleFactor:a};l=new XRWebGLBinding(i,t),p=l.createProjectionLayer(n),c=t.createFramebuffer(),i.updateRenderState({layers:[p]})}o=await i.requestReferenceSpace(s),w.setContext(i),w.start(),r.isPresenting=!0,r.dispatchEvent({type:"sessionstart"})}};const y=new aa,b=new aa;function M(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null===i)return;f.near=d.near=g.near=e.near,f.far=d.far=g.far=e.far,x===f.near&&v===f.far||(i.updateRenderState({depthNear:f.near,depthFar:f.far}),x=f.near,v=f.far);const t=e.parent,r=f.cameras;M(f,t);for(let i=0;i<r.length;i++)M(r[i],t);f.matrixWorld.decompose(f.position,f.quaternion,f.scale),e.position.copy(f.position),e.quaternion.copy(f.quaternion),e.scale.copy(f.scale),e.matrix.copy(f.matrix),e.matrixWorld.copy(f.matrixWorld);const n=e.children;for(let i=0,a=n.length;i<a;i++)n[i].updateMatrixWorld(!0);2===r.length?function(e,t,r){y.setFromMatrixPosition(t.matrixWorld),b.setFromMatrixPosition(r.matrixWorld);const n=y.distanceTo(b),i=t.projectionMatrix.elements,a=r.projectionMatrix.elements,o=i[14]/(i[10]-1),s=i[14]/(i[10]+1),$=(i[9]+1)/i[5],l=(i[9]-1)/i[5],c=(i[8]-1)/i[0],p=(a[8]+1)/a[0],h=o*c,u=o*p,g=n/(-c+p),d=g*-c;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(d),e.translateZ(g),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();const m=o+g,f=s+g,x=h-d,v=u+(n-d),B=$*s/f*m,_=l*s/f*m;e.projectionMatrix.makePerspective(x,v,B,_,m,f)}(f,g,d):f.projectionMatrix.copy(g.projectionMatrix)},this.getCamera=function(){return f};let S=null;const w=new Sg;w.setAnimationLoop(function(e,r){if(null!==($=r.getViewerPose(o))){const e=$.views,r=i.renderState.baseLayer;void 0===i.renderState.layers&&n.bindXRFramebuffer(r.framebuffer);let a=!1;e.length!==f.cameras.length&&(f.cameras.length=0,a=!0);for(let o=0;o<e.length;o++){const s=e[o];let $=null;if(void 0===i.renderState.layers)$=r.getViewport(s);else{const e=l.getViewSubImage(p,s);n.bindXRFramebuffer(c),t.framebufferTexture2D(36160,36064,3553,e.colorTexture,0),void 0!==e.depthStencilTexture&&t.framebufferTexture2D(36160,36096,3553,e.depthStencilTexture,0),$=e.viewport}const h=m[o];h.matrix.fromArray(s.transform.matrix),h.projectionMatrix.fromArray(s.projectionMatrix),h.viewport.set($.x,$.y,$.width,$.height),0===o&&f.matrix.copy(h.matrix),!0===a&&f.cameras.push(h)}}const a=i.inputSources;for(let t=0;t<h.length;t++){const e=h[t],n=a[t];e.update(n,r,o)}S&&S(e,r)}),this.setAnimationLoop=function(e){S=e},this.dispose=function(){}}}function bp(e){function t(t,r){t.opacity.value=r.opacity,r.color&&t.diffuse.value.copy(r.color),r.emissive&&t.emissive.value.copy(r.emissive).multiplyScalar(r.emissiveIntensity),r.map&&(t.map.value=r.map),r.alphaMap&&(t.alphaMap.value=r.alphaMap),r.specularMap&&(t.specularMap.value=r.specularMap);const n=e.get(r).envMap;if(n){t.envMap.value=n,t.flipEnvMap.value=n.isCubeTexture&&n._needsFlipEnvMap?-1:1,t.reflectivity.value=r.reflectivity,t.refractionRatio.value=r.refractionRatio;const i=e.get(n).__maxMipLevel;void 0!==i&&(t.maxMipLevel.value=i)}let i,a;r.lightMap&&(t.lightMap.value=r.lightMap,t.lightMapIntensity.value=r.lightMapIntensity),r.aoMap&&(t.aoMap.value=r.aoMap,t.aoMapIntensity.value=r.aoMapIntensity),r.map?i=r.map:r.specularMap?i=r.specularMap:r.displacementMap?i=r.displacementMap:r.normalMap?i=r.normalMap:r.bumpMap?i=r.bumpMap:r.roughnessMap?i=r.roughnessMap:r.metalnessMap?i=r.metalnessMap:r.alphaMap?i=r.alphaMap:r.emissiveMap?i=r.emissiveMap:r.clearcoatMap?i=r.clearcoatMap:r.clearcoatNormalMap?i=r.clearcoatNormalMap:r.clearcoatRoughnessMap&&(i=r.clearcoatRoughnessMap),void 0!==i&&(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uvTransform.value.copy(i.matrix)),r.aoMap?a=r.aoMap:r.lightMap&&(a=r.lightMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),t.uv2Transform.value.copy(a.matrix))}function r(t,r){t.roughness.value=r.roughness,t.metalness.value=r.metalness,r.roughnessMap&&(t.roughnessMap.value=r.roughnessMap),r.metalnessMap&&(t.metalnessMap.value=r.metalnessMap),r.emissiveMap&&(t.emissiveMap.value=r.emissiveMap),r.bumpMap&&(t.bumpMap.value=r.bumpMap,t.bumpScale.value=r.bumpScale,r.side===ra&&(t.bumpScale.value*=-1)),r.normalMap&&(t.normalMap.value=r.normalMap,t.normalScale.value.copy(r.normalScale),r.side===ra&&t.normalScale.value.negate()),r.displacementMap&&(t.displacementMap.value=r.displacementMap,t.displacementScale.value=r.displacementScale,t.displacementBias.value=r.displacementBias),e.get(r).envMap&&(t.envMapIntensity.value=r.envMapIntensity)}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(e,n,i,a,o){n.isMeshBasicMaterial?t(e,n):n.isMeshLambertMaterial?(t(e,n),function(e,t){t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap)}(e,n)):n.isMeshToonMaterial?(t(e,n),function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===ra&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===ra&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,n)):n.isMeshPhongMaterial?(t(e,n),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===ra&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===ra&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,n)):n.isMeshStandardMaterial?(t(e,n),n.isMeshPhysicalMaterial?function(e,t,n){r(e,t),e.reflectivity.value=t.reflectivity,e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.sheen&&e.sheen.value.copy(t.sheen),t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap),t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap),t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,t.side===ra&&e.clearcoatNormalScale.value.negate()),e.transmission.value=t.transmission,t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap),t.transmission>0&&(e.transmissionSamplerMap.value=n.texture,e.transmissionSamplerSize.value.set(n.width,n.height)),e.thickness.value=t.thickness,t.thicknessMap&&(e.thicknessMap.value=t.thicknessMap),e.attenuationDistance.value=t.attenuationDistance,e.attenuationColor.value.copy(t.attenuationColor)}(e,n,o):r(e,n)):n.isMeshMatcapMaterial?(t(e,n),function(e,t){t.matcap&&(e.matcap.value=t.matcap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===ra&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===ra&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,n)):n.isMeshDepthMaterial?(t(e,n),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,n)):n.isMeshDistanceMaterial?(t(e,n),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}(e,n)):n.isMeshNormalMaterial?(t(e,n),function(e,t){t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===ra&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===ra&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,n)):n.isLineBasicMaterial?(function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity}(e,n),n.isLineDashedMaterial&&function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(e,n)):n.isPointsMaterial?function(e,t,r,n){let i;e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*r,e.scale.value=.5*n,t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.map?i=t.map:t.alphaMap&&(i=t.alphaMap),void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),e.uvTransform.value.copy(i.matrix))}(e,n,i,a):n.isSpriteMaterial?function(e,t){let r;e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.map?r=t.map:t.alphaMap&&(r=t.alphaMap),void 0!==r&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix))}(e,n):n.isShadowMaterial?(e.color.value.copy(n.color),e.opacity.value=n.opacity):n.isShaderMaterial&&(n.uniformsNeedUpdate=!1)}}}function cp(){const e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return e.style.display="block",e}function ka(e={}){const t=void 0!==e.canvas?e.canvas:cp(),r=void 0!==e.context?e.context:null,n=void 0!==e.alpha&&e.alpha,i=void 0===e.depth||e.depth,a=void 0===e.stencil||e.stencil,o=void 0!==e.antialias&&e.antialias,s=void 0===e.premultipliedAlpha||e.premultipliedAlpha,$=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,l=void 0!==e.powerPreference?e.powerPreference:"default",c=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat;let p=null,h=null;const u=[],g=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=pc,this.physicallyCorrectLights=!1,this.toneMapping=Cb,this.toneMappingExposure=1;const d=this;let m=!1,f=0,x=0,v=null,B=-1,_=null;const K=new la,y=new la;let b=null,M=t.width,S=t.height,w=1,T=null,A=null;const E=new la(0,0,M,S),L=new la(0,0,M,S);let C=!1;const R=[],P=new ud;let D=!1,F=!1,I=null;const G=new ea,N=new aa,V={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function U(){return null===v?w:1}let O,z,H,k,W,j,q,X,Y,Z,J,Q,ee,te,re,ne,ie,ae,oe,se,$e,le,ce=r;function pe(e,r){for(let n=0;n<e.length;n++){const i=e[n],a=t.getContext(i,r);if(null!==a)return a}return null}try{const e={alpha:n,depth:i,stencil:a,antialias:o,premultipliedAlpha:s,preserveDrawingBuffer:$,powerPreference:l,failIfMajorPerformanceCaveat:c};if(t.addEventListener("webglcontextlost",ge,!1),t.addEventListener("webglcontextrestored",de,!1),null===ce){const t=["webgl2","webgl","experimental-webgl"];if(!0===d.isWebGL1Renderer&&t.shift(),null===(ce=pe(t,e)))throw pe(t)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===ce.getShaderPrecisionFormat&&(ce.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(Se){throw console.error("THREE.WebGLRenderer: "+Se.message),Se}function he(){O=new yn(ce),z=new vn(ce,O,e),O.init(z),$e=new $o(ce,O,z),H=new Yo(ce,O,z),R[0]=1029,k=new Bn(ce),W=new No,j=new Zo(ce,O,H,W,z,$e,k),q=new xn(d),X=new Xk(ce,z),le=new tn(ce,O,X,z),Y=new zn(ce,X,k,le),Z=new Fn(ce,Y,X,k),ae=new En(ce),re=new wn(W),J=new Mo(d,q,O,z,le,re),Q=new bp(W),ee=new Po(W),te=new Vo(O,z),ie=new sn(d,q,H,Z,s),ne=new ph(d,Z,z),oe=new un(ce,O,k,z),se=new An(ce,O,k,z),k.programs=J.programs,d.capabilities=z,d.extensions=O,d.properties=W,d.renderLists=ee,d.shadowMap=ne,d.state=H,d.info=k}he();const ue=new ap(d,ce);function ge(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),m=!0}function de(){console.log("THREE.WebGLRenderer: Context Restored."),m=!1;const e=k.autoReset,t=ne.enabled,r=ne.autoUpdate,n=ne.needsUpdate,i=ne.type;he(),k.autoReset=e,ne.enabled=t,ne.autoUpdate=r,ne.needsUpdate=n,ne.type=i}function me(e){const t=e.target;t.removeEventListener("dispose",me),function(e){(function(e){const t=W.get(e).programs;void 0!==t&&t.forEach(function(e){J.releaseProgram(e)})})(e),W.remove(e)}(t)}this.xr=ue,this.getContext=function(){return ce},this.getContextAttributes=function(){return ce.getContextAttributes()},this.forceContextLoss=function(){const e=O.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=O.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return w},this.setPixelRatio=function(e){void 0!==e&&(w=e,this.setSize(M,S,!1))},this.getSize=function(e){return e.set(M,S)},this.setSize=function(e,r,n){ue.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(M=e,S=r,t.width=Math.floor(e*w),t.height=Math.floor(r*w),!1!==n&&(t.style.width=e+"px",t.style.height=r+"px"),this.setViewport(0,0,e,r))},this.getDrawingBufferSize=function(e){return e.set(M*w,S*w).floor()},this.setDrawingBufferSize=function(e,r,n){M=e,S=r,w=n,t.width=Math.floor(e*n),t.height=Math.floor(r*n),this.setViewport(0,0,e,r)},this.getCurrentViewport=function(e){return e.copy(K)},this.getViewport=function(e){return e.copy(E)},this.setViewport=function(e,t,r,n){e.isVector4?E.set(e.x,e.y,e.z,e.w):E.set(e,t,r,n),H.viewport(K.copy(E).multiplyScalar(w).floor())},this.getScissor=function(e){return e.copy(L)},this.setScissor=function(e,t,r,n){e.isVector4?L.set(e.x,e.y,e.z,e.w):L.set(e,t,r,n),H.scissor(y.copy(L).multiplyScalar(w).floor())},this.getScissorTest=function(){return C},this.setScissorTest=function(e){H.setScissorTest(C=e)},this.setOpaqueSort=function(e){T=e},this.setTransparentSort=function(e){A=e},this.getClearColor=function(e){return e.copy(ie.getClearColor())},this.setClearColor=function(){ie.setClearColor.apply(ie,arguments)},this.getClearAlpha=function(){return ie.getClearAlpha()},this.setClearAlpha=function(){ie.setClearAlpha.apply(ie,arguments)},this.clear=function(e,t,r){let n=0;(void 0===e||e)&&(n|=16384),(void 0===t||t)&&(n|=256),(void 0===r||r)&&(n|=1024),ce.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",ge,!1),t.removeEventListener("webglcontextrestored",de,!1),ee.dispose(),te.dispose(),W.dispose(),q.dispose(),Z.dispose(),le.dispose(),ue.dispose(),ue.removeEventListener("sessionstart",xe),ue.removeEventListener("sessionend",ve),I&&(I.dispose(),I=null),Be.stop()},this.renderBufferImmediate=function(e,t){le.initAttributes();const r=W.get(e);e.hasPositions&&!r.position&&(r.position=ce.createBuffer()),e.hasNormals&&!r.normal&&(r.normal=ce.createBuffer()),e.hasUvs&&!r.uv&&(r.uv=ce.createBuffer()),e.hasColors&&!r.color&&(r.color=ce.createBuffer());const n=t.getAttributes();e.hasPositions&&(ce.bindBuffer(34962,r.position),ce.bufferData(34962,e.positionArray,35048),le.enableAttribute(n.position),ce.vertexAttribPointer(n.position,3,5126,!1,0,0)),e.hasNormals&&(ce.bindBuffer(34962,r.normal),ce.bufferData(34962,e.normalArray,35048),le.enableAttribute(n.normal),ce.vertexAttribPointer(n.normal,3,5126,!1,0,0)),e.hasUvs&&(ce.bindBuffer(34962,r.uv),ce.bufferData(34962,e.uvArray,35048),le.enableAttribute(n.uv),ce.vertexAttribPointer(n.uv,2,5126,!1,0,0)),e.hasColors&&(ce.bindBuffer(34962,r.color),ce.bufferData(34962,e.colorArray,35048),le.enableAttribute(n.color),ce.vertexAttribPointer(n.color,3,5126,!1,0,0)),le.disableUnusedAttributes(),ce.drawArrays(4,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,r,n,i,a){null===t&&(t=V);const o=i.isMesh&&i.matrixWorld.determinant()<0,s=Me(e,t,n,i);H.setMaterial(n,o);let $=r.index;const l=r.attributes.position;if(null===$){if(void 0===l||0===l.count)return}else if(0===$.count)return;let c,p=1;!0===n.wireframe&&($=Y.getWireframeAttribute(r),p=2),(n.morphTargets||n.morphNormals)&&ae.update(i,r,n,s),le.setup(i,n,s,r,$);let h=oe;null!==$&&(c=X.get($),(h=se).setIndex(c));const u=null!==$?$.count:l.count,g=r.drawRange.start*p,d=r.drawRange.count*p,m=null!==a?a.start*p:0,f=null!==a?a.count*p:1/0,x=Math.max(g,m),v=Math.min(u,g+d,m+f)-1,B=Math.max(0,v-x+1);if(0!==B){if(i.isMesh)!0===n.wireframe?(H.setLineWidth(n.wireframeLinewidth*U()),h.setMode(1)):h.setMode(4);else if(i.isLine){let e=n.linewidth;void 0===e&&(e=1),H.setLineWidth(e*U()),i.isLineSegments?h.setMode(1):i.isLineLoop?h.setMode(2):h.setMode(3)}else i.isPoints?h.setMode(0):i.isSprite&&h.setMode(4);if(i.isInstancedMesh)h.renderInstances(x,B,i.count);else if(r.isInstancedBufferGeometry){const e=Math.min(r.instanceCount,r._maxInstanceCount);h.renderInstances(x,B,e)}else h.render(x,B)}},this.compile=function(e,t){(h=te.get(e)).init(),e.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(h.pushLight(e),e.castShadow&&h.pushShadow(e))}),h.setupLights(),e.traverse(function(t){const r=t.material;if(r)if(Array.isArray(r))for(let n=0;n<r.length;n++){ye(r[n],e,t)}else ye(r,e,t)})};let fe=null;function xe(){Be.stop()}function ve(){Be.start()}const Be=new Sg;function _e(e,t,r){const n=!0===t.isScene?t.overrideMaterial:null;for(let i=0,a=e.length;i<a;i++){const a=e[i],o=a.object,s=a.geometry,$=null===n?a.material:n,l=a.group;if(r.isArrayCamera){const e=r.cameras;for(let r=0,n=e.length;r<n;r++){const n=e[r];o.layers.test(n.layers)&&(H.viewport(K.copy(n.viewport)),h.setupLightsView(n),Ke(o,t,n,s,$,l))}}else Ke(o,t,r,s,$,l)}}function Ke(e,t,r,n,i,a){if(e.onBeforeRender(d,t,r,n,i,a),e.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),e.isImmediateRenderObject){const n=Me(r,t,i,e);H.setMaterial(i),le.reset(),function(e,t){e.render(function(e){d.renderBufferImmediate(e,t)})}(e,n)}else!0===i.transparent&&i.side===Ab?(i.side=ra,i.needsUpdate=!0,d.renderBufferDirect(r,t,n,i,e,a),i.side=kc,i.needsUpdate=!0,d.renderBufferDirect(r,t,n,i,e,a),i.side=Ab):d.renderBufferDirect(r,t,n,i,e,a);e.onAfterRender(d,t,r,n,i,a)}function ye(e,t,r){!0!==t.isScene&&(t=V);const n=W.get(e),i=h.state.lights,a=h.state.shadowsArray,o=i.state.version,s=J.getParameters(e,i.state,a,t,r),$=J.getProgramCacheKey(s);let l=n.programs;n.environment=e.isMeshStandardMaterial?t.environment:null,n.fog=t.fog,n.envMap=q.get(e.envMap||n.environment),void 0===l&&(e.addEventListener("dispose",me),l=new Map,n.programs=l);let c=l.get($);if(void 0!==c){if(n.currentProgram===c&&n.lightsStateVersion===o)return be(e,s),c}else s.uniforms=J.getUniforms(e),e.onBuild(s,d),e.onBeforeCompile(s,d),c=J.acquireProgram(s,$),l.set($,c),n.uniforms=s.uniforms;const p=n.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(p.clippingPlanes=re.uniform),be(e,s),n.needsLights=function(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}(e),n.lightsStateVersion=o,n.needsLights&&(p.ambientLightColor.value=i.state.ambient,p.lightProbe.value=i.state.probe,p.directionalLights.value=i.state.directional,p.directionalLightShadows.value=i.state.directionalShadow,p.spotLights.value=i.state.spot,p.spotLightShadows.value=i.state.spotShadow,p.rectAreaLights.value=i.state.rectArea,p.ltc_1.value=i.state.rectAreaLTC1,p.ltc_2.value=i.state.rectAreaLTC2,p.pointLights.value=i.state.point,p.pointLightShadows.value=i.state.pointShadow,p.hemisphereLights.value=i.state.hemi,p.directionalShadowMap.value=i.state.directionalShadowMap,p.directionalShadowMatrix.value=i.state.directionalShadowMatrix,p.spotShadowMap.value=i.state.spotShadowMap,p.spotShadowMatrix.value=i.state.spotShadowMatrix,p.pointShadowMap.value=i.state.pointShadowMap,p.pointShadowMatrix.value=i.state.pointShadowMatrix);const u=c.getUniforms(),g=mb.seqWithValue(u.seq,p);return n.currentProgram=c,n.uniformsList=g,c}function be(e,t){const r=W.get(e);r.outputEncoding=t.outputEncoding,r.instancing=t.instancing,r.skinning=t.skinning,r.numClippingPlanes=t.numClippingPlanes,r.numIntersection=t.numClipIntersection,r.vertexAlphas=t.vertexAlphas}function Me(e,t,r,n){!0!==t.isScene&&(t=V),j.resetTextureUnits();const i=t.fog,a=r.isMeshStandardMaterial?t.environment:null,o=null===v?d.outputEncoding:v.texture.encoding,s=q.get(r.envMap||a),$=!0===r.vertexColors&&n.geometry&&n.geometry.attributes.color&&4===n.geometry.attributes.color.itemSize,l=W.get(r),c=h.state.lights;if(!0===D&&(!0===F||e!==_)){const t=e===_&&r.id===B;re.setState(r,e,t)}let p=!1;r.version===l.__version?l.needsLights&&l.lightsStateVersion!==c.state.version?p=!0:l.outputEncoding!==o?p=!0:n.isInstancedMesh&&!1===l.instancing?p=!0:n.isInstancedMesh||!0!==l.instancing?n.isSkinnedMesh&&!1===l.skinning?p=!0:n.isSkinnedMesh||!0!==l.skinning?l.envMap!==s?p=!0:r.fog&&l.fog!==i?p=!0:void 0===l.numClippingPlanes||l.numClippingPlanes===re.numPlanes&&l.numIntersection===re.numIntersection?l.vertexAlphas!==$&&(p=!0):p=!0:p=!0:p=!0:(p=!0,l.__version=r.version);let u=l.currentProgram;!0===p&&(u=ye(r,t,n));let g=!1,m=!1,f=!1;const x=u.getUniforms(),K=l.uniforms;if(H.useProgram(u.program)&&(g=!0,m=!0,f=!0),r.id!==B&&(B=r.id,m=!0),g||_!==e){if(x.setValue(ce,"projectionMatrix",e.projectionMatrix),z.logarithmicDepthBuffer&&x.setValue(ce,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),_!==e&&(_=e,m=!0,f=!0),r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshStandardMaterial||r.envMap){const t=x.map.cameraPosition;void 0!==t&&t.setValue(ce,N.setFromMatrixPosition(e.matrixWorld))}(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&x.setValue(ce,"isOrthographic",!0===e.isOrthographicCamera),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.isShadowMaterial||n.isSkinnedMesh)&&x.setValue(ce,"viewMatrix",e.matrixWorldInverse)}if(n.isSkinnedMesh){x.setOptional(ce,n,"bindMatrix"),x.setOptional(ce,n,"bindMatrixInverse");const e=n.skeleton;e&&(z.floatVertexTextures?(null===e.boneTexture&&e.computeBoneTexture(),x.setValue(ce,"boneTexture",e.boneTexture,j),x.setValue(ce,"boneTextureSize",e.boneTextureSize)):x.setOptional(ce,e,"boneMatrices"))}var y,b;return(m||l.receiveShadow!==n.receiveShadow)&&(l.receiveShadow=n.receiveShadow,x.setValue(ce,"receiveShadow",n.receiveShadow)),m&&(x.setValue(ce,"toneMappingExposure",d.toneMappingExposure),l.needsLights&&(b=f,(y=K).ambientLightColor.needsUpdate=b,y.lightProbe.needsUpdate=b,y.directionalLights.needsUpdate=b,y.directionalLightShadows.needsUpdate=b,y.pointLights.needsUpdate=b,y.pointLightShadows.needsUpdate=b,y.spotLights.needsUpdate=b,y.spotLightShadows.needsUpdate=b,y.rectAreaLights.needsUpdate=b,y.hemisphereLights.needsUpdate=b),i&&r.fog&&Q.refreshFogUniforms(K,i),Q.refreshMaterialUniforms(K,r,w,S,I),mb.upload(ce,l.uniformsList,K,j)),r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(mb.upload(ce,l.uniformsList,K,j),r.uniformsNeedUpdate=!1),r.isSpriteMaterial&&x.setValue(ce,"center",n.center),x.setValue(ce,"modelViewMatrix",n.modelViewMatrix),x.setValue(ce,"normalMatrix",n.normalMatrix),x.setValue(ce,"modelMatrix",n.matrixWorld),u}Be.setAnimationLoop(function(e){fe&&fe(e)}),"undefined"!=typeof window&&Be.setContext(window),this.setAnimationLoop=function(e){fe=e,ue.setAnimationLoop(e),null===e?Be.stop():Be.start()},ue.addEventListener("sessionstart",xe),ue.addEventListener("sessionend",ve),this.render=function(e,t){if(void 0!==t&&!0!==t.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===m)return;!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),!0===ue.enabled&&!0===ue.isPresenting&&(!0===ue.cameraAutoUpdate&&ue.updateCamera(t),t=ue.getCamera()),!0===e.isScene&&e.onBeforeRender(d,e,t,v),(h=te.get(e,g.length)).init(),g.push(h),G.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),P.setFromProjectionMatrix(G),F=this.localClippingEnabled,D=re.init(this.clippingPlanes,F,t),(p=ee.get(e,u.length)).init(),u.push(p),function e(t,r,n,i){if(!1===t.visible)return;const a=t.layers.test(r.layers);if(a)if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(r);else if(t.isLight)h.pushLight(t),t.castShadow&&h.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||P.intersectsSprite(t)){i&&N.setFromMatrixPosition(t.matrixWorld).applyMatrix4(G);const e=Z.update(t),r=t.material;r.visible&&p.push(t,e,r,n,N.z,null)}}else if(t.isImmediateRenderObject)i&&N.setFromMatrixPosition(t.matrixWorld).applyMatrix4(G),p.push(t,null,t.material,n,N.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==k.render.frame&&(t.skeleton.update(),t.skeleton.frame=k.render.frame),!t.frustumCulled||P.intersectsObject(t))){i&&N.setFromMatrixPosition(t.matrixWorld).applyMatrix4(G);const e=Z.update(t),r=t.material;if(Array.isArray(r)){const i=e.groups;for(let a=0,o=i.length;a<o;a++){const o=i[a],s=r[o.materialIndex];s&&s.visible&&p.push(t,e,s,n,N.z,o)}}else r.visible&&p.push(t,e,r,n,N.z,null)}const o=t.children;for(let s=0,$=o.length;s<$;s++)e(o[s],r,n,i)}(e,t,0,d.sortObjects),p.finish(),!0===d.sortObjects&&p.sort(T,A),!0===D&&re.beginShadows();const r=h.state.shadowsArray;ne.render(r,e,t),h.setupLights(),h.setupLightsView(t),!0===D&&re.endShadows(),!0===this.info.autoReset&&this.info.reset(),ie.render(p,e);const n=p.opaque,i=p.transmissive,a=p.transparent;n.length>0&&_e(n,e,t),i.length>0&&function(e,t,r,n){if(null===I){const e=!0===o&&!0===z.isWebGL2,t=e?Bg:Wa;I=new t(1024,1024,{generateMipmaps:!0,type:null!==$e.convert(Db)?Db:Wc,minFilter:Vc,magFilter:za,wrapS:Fa,wrapT:Fa})}const i=d.getRenderTarget();d.setRenderTarget(I),d.clear();const a=d.toneMapping;d.toneMapping=Cb,_e(e,r,n),d.toneMapping=a,j.updateMultisampleRenderTarget(I),j.updateRenderTargetMipmap(I),d.setRenderTarget(i),_e(t,r,n)}(n,i,e,t),a.length>0&&_e(a,e,t),null!==v&&(j.updateMultisampleRenderTarget(v),j.updateRenderTargetMipmap(v)),!0===e.isScene&&e.onAfterRender(d,e,t),H.buffers.depth.setTest(!0),H.buffers.depth.setMask(!0),H.buffers.color.setMask(!0),H.setPolygonOffset(!1),le.resetDefaultState(),B=-1,_=null,g.pop(),h=g.length>0?g[g.length-1]:null,u.pop(),p=u.length>0?u[u.length-1]:null},this.getActiveCubeFace=function(){return f},this.getActiveMipmapLevel=function(){return x},this.getRenderTarget=function(){return v},this.setRenderTarget=function(e,t=0,r=0){v=e,f=t,x=r,e&&void 0===W.get(e).__webglFramebuffer&&j.setupRenderTarget(e);let n=null,i=!1,a=!1;if(e){const r=e.texture;(r.isDataTexture3D||r.isDataTexture2DArray)&&(a=!0);const o=W.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(n=o[t],i=!0):n=e.isWebGLMultisampleRenderTarget?W.get(e).__webglMultisampledFramebuffer:o,K.copy(e.viewport),y.copy(e.scissor),b=e.scissorTest}else K.copy(E).multiplyScalar(w).floor(),y.copy(L).multiplyScalar(w).floor(),b=C;if(H.bindFramebuffer(36160,n)&&z.drawBuffers){let t=!1;if(e){if(e.isWebGLMultipleRenderTargets){const r=e.texture;if(R.length!==r.length||36064!==R[0]){for(let e=0,t=r.length;e<t;e++)R[e]=36064+e;R.length=r.length,t=!0}}else 1===R.length&&36064===R[0]||(R[0]=36064,R.length=1,t=!0);}else 1===R.length&&1029===R[0]||(R[0]=1029,R.length=1,t=!0);t&&(z.isWebGL2?ce.drawBuffers(R):O.get("WEBGL_draw_buffers").drawBuffersWEBGL(R))}if(H.viewport(K),H.scissor(y),H.setScissorTest(b),i){const n=W.get(e.texture);ce.framebufferTexture2D(36160,36064,34069+t,n.__webglTexture,r)}else if(a){const n=W.get(e.texture),i=t||0;ce.framebufferTextureLayer(36160,36064,n.__webglTexture,r||0,i)}},this.readRenderTargetPixels=function(e,t,r,n,i,a,o){if(!e||!e.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let s=W.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==o&&(s=s[o]),s){H.bindFramebuffer(36160,s);try{const o=e.texture,s=o.format,$=o.type;if(s!==Oa&&$e.convert(s)!==ce.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const l=$===Db&&(O.has("EXT_color_buffer_half_float")||z.isWebGL2&&O.has("EXT_color_buffer_float"));if(!($===Wc||$e.convert($)===ce.getParameter(35738)||$===cb&&(z.isWebGL2||O.has("OES_texture_float")||O.has("WEBGL_color_buffer_float"))||l))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===ce.checkFramebufferStatus(36160)?t>=0&&t<=e.width-n&&r>=0&&r<=e.height-i&&ce.readPixels(t,r,n,i,$e.convert(s),$e.convert($),a):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const e=null!==v?W.get(v).__webglFramebuffer:null;H.bindFramebuffer(36160,e)}}},this.copyFramebufferToTexture=function(e,t,r=0){const n=Math.pow(2,-r),i=Math.floor(t.image.width*n),a=Math.floor(t.image.height*n);let o=$e.convert(t.format);z.isWebGL2&&(6407===o&&(o=32849),6408===o&&(o=32856)),j.setTexture2D(t,0),ce.copyTexImage2D(3553,r,o,e.x,e.y,i,a,0),H.unbindTexture()},this.copyTextureToTexture=function(e,t,r,n=0){const i=t.image.width,a=t.image.height,o=$e.convert(r.format),s=$e.convert(r.type);j.setTexture2D(r,0),ce.pixelStorei(37440,r.flipY),ce.pixelStorei(37441,r.premultiplyAlpha),ce.pixelStorei(3317,r.unpackAlignment),t.isDataTexture?ce.texSubImage2D(3553,n,e.x,e.y,i,a,o,s,t.image.data):t.isCompressedTexture?ce.compressedTexSubImage2D(3553,n,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,o,t.mipmaps[0].data):ce.texSubImage2D(3553,n,e.x,e.y,o,s,t.image),0===n&&r.generateMipmaps&&ce.generateMipmap(3553),H.unbindTexture()},this.copyTextureToTexture3D=function(e,t,r,n,i=0){if(d.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const a=e.max.x-e.min.x+1,o=e.max.y-e.min.y+1,s=e.max.z-e.min.z+1,$=$e.convert(n.format),l=$e.convert(n.type);let c;if(n.isDataTexture3D)j.setTexture3D(n,0),c=32879;else{if(!n.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");j.setTexture2DArray(n,0),c=35866}ce.pixelStorei(37440,n.flipY),ce.pixelStorei(37441,n.premultiplyAlpha),ce.pixelStorei(3317,n.unpackAlignment);const p=ce.getParameter(3314),h=ce.getParameter(32878),u=ce.getParameter(3316),g=ce.getParameter(3315),m=ce.getParameter(32877),f=r.isCompressedTexture?r.mipmaps[0]:r.image;ce.pixelStorei(3314,f.width),ce.pixelStorei(32878,f.height),ce.pixelStorei(3316,e.min.x),ce.pixelStorei(3315,e.min.y),ce.pixelStorei(32877,e.min.z),r.isDataTexture||r.isDataTexture3D?ce.texSubImage3D(c,i,t.x,t.y,t.z,a,o,s,$,l,f.data):r.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),ce.compressedTexSubImage3D(c,i,t.x,t.y,t.z,a,o,s,$,f.data)):ce.texSubImage3D(c,i,t.x,t.y,t.z,a,o,s,$,l,f),ce.pixelStorei(3314,p),ce.pixelStorei(32878,h),ce.pixelStorei(3316,u),ce.pixelStorei(3315,g),ce.pixelStorei(32877,m),0===i&&n.generateMipmaps&&ce.generateMipmap(c),H.unbindTexture()},this.initTexture=function(e){j.setTexture2D(e,0),H.unbindTexture()},this.resetState=function(){f=0,x=0,v=null,H.reset(),le.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class dp extends ka{}dp.prototype.isWebGL1Renderer=!0;class rh{constructor(e,t=25e-5){this.name="",this.color=new da(e),this.density=t}clone(){return new rh(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}rh.prototype.isFogExp2=!0;class sh{constructor(e,t=1,r=1e3){this.name="",this.color=new da(e),this.near=t,this.far=r}clone(){return new sh(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}sh.prototype.isFog=!0;class mf extends ja{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}mf.prototype.isScene=!0;class Dc{constructor(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=qc,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Ga()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,r){e*=this.stride,r*=t.stride;for(let n=0,i=this.stride;n<i;n++)this.array[e+n]=t.array[r+n];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Ga()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),r=new this.constructor(t,this.stride);return r.setUsage(this.usage),r}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Ga()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}Dc.prototype.isInterleavedBuffer=!0;const qa=new aa;class wd{constructor(e,t,r,n=!1){this.name="",this.data=e,this.itemSize=t,this.offset=r,this.normalized=!0===n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,r=this.data.count;t<r;t++)qa.x=this.getX(t),qa.y=this.getY(t),qa.z=this.getZ(t),qa.applyMatrix4(e),this.setXYZ(t,qa.x,qa.y,qa.z);return this}applyNormalMatrix(e){for(let t=0,r=this.count;t<r;t++)qa.x=this.getX(t),qa.y=this.getY(t),qa.z=this.getZ(t),qa.applyNormalMatrix(e),this.setXYZ(t,qa.x,qa.y,qa.z);return this}transformDirection(e){for(let t=0,r=this.count;t<r;t++)qa.x=this.getX(t),qa.y=this.getY(t),qa.z=this.getZ(t),qa.transformDirection(e),this.setXYZ(t,qa.x,qa.y,qa.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this}setXYZ(e,t,r,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=n,this}setXYZW(e,t,r,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=n,this.data.array[e+3]=i,this}clone(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const r=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[r+t])}return new pa(new this.array.constructor(e),this.itemSize,this.normalized)}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new wd(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const r=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[r+t])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}wd.prototype.isInterleavedBufferAttribute=!0;class nf extends ya{constructor(e){super(),this.type="SpriteMaterial",this.color=new da(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this}}let Ec;nf.prototype.isSpriteMaterial=!0;const Fc=new aa,_b=new aa,ac=new aa,bc=new ba,Gc=new ba,th=new ea,xd=new aa,Hc=new aa,yd=new aa,uh=new ba,of=new ba,vh=new ba;class ep extends ja{constructor(e){if(super(),this.type="Sprite",void 0===Ec){Ec=new ga;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),t=new Dc(e,5);Ec.setIndex([0,1,2,0,2,3]),Ec.setAttribute("position",new wd(t,3,0,!1)),Ec.setAttribute("uv",new wd(t,2,3,!1))}this.geometry=Ec,this.material=void 0!==e?e:new nf,this.center=new ba(.5,.5)}raycast(e,t){null===e.camera&&console.error("THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites."),_b.setFromMatrixScale(this.matrixWorld),th.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),ac.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&_b.multiplyScalar(-ac.z);const r=this.material.rotation;let n,i;0!==r&&(i=Math.cos(r),n=Math.sin(r));const a=this.center;zd(xd.set(-.5,-.5,0),ac,a,_b,n,i),zd(Hc.set(.5,-.5,0),ac,a,_b,n,i),zd(yd.set(.5,.5,0),ac,a,_b,n,i),uh.set(0,0),of.set(1,0),vh.set(1,1);let o=e.ray.intersectTriangle(xd,Hc,yd,!1,Fc);if(null===o&&(zd(Hc.set(-.5,.5,0),ac,a,_b,n,i),of.set(0,1),null===(o=e.ray.intersectTriangle(xd,yd,Hc,!1,Fc))))return;const s=e.ray.origin.distanceTo(Fc);s<e.near||s>e.far||t.push({distance:s,point:Fc.clone(),uv:sa.getUV(Fc,xd,Hc,yd,uh,of,vh,new ba),face:null,object:this})}copy(e){return super.copy(e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}function zd(e,t,r,n,i,a){bc.subVectors(e,r).addScalar(.5).multiply(n),void 0!==i?(Gc.x=a*bc.x-i*bc.y,Gc.y=i*bc.x+a*bc.y):Gc.copy(bc),e.copy(t),e.x+=Gc.x,e.y+=Gc.y,e.applyMatrix4(th)}ep.prototype.isSprite=!0;const c=new aa,d=new aa;const wh=new aa,xh=new la,yh=new la,fp=new aa,zh=new ea;class Ah extends Ma{constructor(e,t){super(e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new ea,this.bindMatrixInverse=new ea}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new la,t=this.geometry.attributes.skinWeight;for(let r=0,n=t.count;r<n;r++){e.x=t.getX(r),e.y=t.getY(r),e.z=t.getZ(r),e.w=t.getW(r);const n=1/e.manhattanLength();n!==1/0?e.multiplyScalar(n):e.set(1,0,0,0),t.setXYZW(r,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const r=this.skeleton,n=this.geometry;xh.fromBufferAttribute(n.attributes.skinIndex,e),yh.fromBufferAttribute(n.attributes.skinWeight,e),wh.fromBufferAttribute(n.attributes.position,e).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let i=0;i<4;i++){const e=yh.getComponent(i);if(0!==e){const n=xh.getComponent(i);zh.multiplyMatrices(r.bones[n].matrixWorld,r.boneInverses[n]),t.addScaledVector(fp.copy(wh).applyMatrix4(zh),e)}}return t.applyMatrix4(this.bindMatrixInverse)}}Ah.prototype.isSkinnedMesh=!0;class Bh extends ja{constructor(){super(),this.type="Bone"}}Bh.prototype.isBone=!0;class Ch extends Aa{constructor(e=null,t=1,r=1,n,i,a,o,s,$=za,l=za,c,p){super(null,a,o,s,$,l,n,i,c,p),this.image={data:e,width:t,height:r},this.magFilter=$,this.minFilter=l,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}Ch.prototype.isDataTexture=!0;const Dh=new ea,gp=new ea;class hp{constructor(e=[],t=[]){this.uuid=Ga(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++)this.boneInverses.push(new ea)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const t=new ea;this.bones[e]&&t.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(t)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&t.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&(t.parent&&t.parent.isBone?(t.matrix.copy(t.parent.matrixWorld).invert(),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))}}update(){const e=this.bones,t=this.boneInverses,r=this.boneMatrices,n=this.boneTexture;for(let i=0,a=e.length;i<a;i++){const n=e[i]?e[i].matrixWorld:gp;Dh.multiplyMatrices(n,t[i]),Dh.toArray(r,16*i)}null!==n&&(n.needsUpdate=!0)}clone(){return new hp(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(4*this.bones.length);e=zg(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const r=new Ch(t,e,e,Oa,cb);return this.boneMatrices=t,this.boneTexture=r,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,r=this.bones.length;t<r;t++){const r=this.bones[t];if(r.name===e)return r}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let r=0,n=e.bones.length;r<n;r++){const n=e.bones[r];let i=t[n];void 0===i&&(console.warn("THREE.Skeleton: No bone found with UUID:",n),i=new Bh),this.bones.push(i),this.boneInverses.push(new ea().fromArray(e.boneInverses[r]))}return this.init(),this}toJSON(){const e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,r=this.boneInverses;for(let n=0,i=t.length;n<i;n++){const i=t[n];e.bones.push(i.uuid);const a=r[n];e.boneInverses.push(a.toArray())}return e}}const Eh=new ea,Fh=new ea,Ad=[],Ic=new Ma;class ip extends Ma{constructor(e,t,r){super(e,t),this.instanceMatrix=new pa(new Float32Array(16*r),16),this.instanceColor=null,this.count=r,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}raycast(e,t){const r=this.matrixWorld,n=this.count;if(Ic.geometry=this.geometry,Ic.material=this.material,void 0!==Ic.material)for(let i=0;i<n;i++){this.getMatrixAt(i,Eh),Fh.multiplyMatrices(r,Eh),Ic.matrixWorld=Fh,Ic.raycast(e,Ad);for(let e=0,r=Ad.length;e<r;e++){const r=Ad[e];r.instanceId=i,r.object=this,t.push(r)}Ad.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new pa(new Float32Array(3*this.count),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}ip.prototype.isInstancedMesh=!0;class cc extends ya{constructor(e){super(),this.type="LineBasicMaterial",this.color=new da(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.morphTargets=e.morphTargets,this}}cc.prototype.isLineBasicMaterial=!0;const Gh=new aa,Hh=new aa,Ih=new ea,pf=new Ob,Bd=new Nb;class qf extends ja{constructor(e=new ga,t=new cc){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry){if(null===e.index){const t=e.attributes.position,r=[0];for(let e=1,n=t.count;e<n;e++)Gh.fromBufferAttribute(t,e-1),Hh.fromBufferAttribute(t,e),r[e]=r[e-1],r[e]+=Gh.distanceTo(Hh);e.setAttribute("lineDistance",new fa(r,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");}else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,t){const r=this.geometry,n=this.matrixWorld,i=e.params.Line.threshold,a=r.drawRange;if(null===r.boundingSphere&&r.computeBoundingSphere(),Bd.copy(r.boundingSphere),Bd.applyMatrix4(n),Bd.radius+=i,!1===e.ray.intersectsSphere(Bd))return;Ih.copy(n).invert(),pf.copy(e.ray).applyMatrix4(Ih);const o=i/((this.scale.x+this.scale.y+this.scale.z)/3),s=o*o,$=new aa,l=new aa,c=new aa,p=new aa,h=this.isLineSegments?2:1;if(r.isBufferGeometry){const n=r.index,i=r.attributes.position;if(null!==n){for(let r=Math.max(0,a.start),o=Math.min(n.count,a.start+a.count)-1;r<o;r+=h){const a=n.getX(r),o=n.getX(r+1);if($.fromBufferAttribute(i,a),l.fromBufferAttribute(i,o),pf.distanceSqToSegment($,l,p,c)>s)continue;p.applyMatrix4(this.matrixWorld);const h=e.ray.origin.distanceTo(p);h<e.near||h>e.far||t.push({distance:h,point:c.clone().applyMatrix4(this.matrixWorld),index:r,face:null,faceIndex:null,object:this})}}else{for(let r=Math.max(0,a.start),n=Math.min(i.count,a.start+a.count)-1;r<n;r+=h){if($.fromBufferAttribute(i,r),l.fromBufferAttribute(i,r+1),pf.distanceSqToSegment($,l,p,c)>s)continue;p.applyMatrix4(this.matrixWorld);const n=e.ray.origin.distanceTo(p);n<e.near||n>e.far||t.push({distance:n,point:c.clone().applyMatrix4(this.matrixWorld),index:r,face:null,faceIndex:null,object:this})}}}else r.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,r=Object.keys(t);if(r.length>0){const e=t[r[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,r=e.length;t<r;t++){const r=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}qf.prototype.isLine=!0;const Jh=new aa,Kh=new aa;class rf extends qf{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry){if(null===e.index){const t=e.attributes.position,r=[];for(let e=0,n=t.count;e<n;e+=2)Jh.fromBufferAttribute(t,e),Kh.fromBufferAttribute(t,e+1),r[e]=0===e?0:r[e-1],r[e+1]=r[e]+Jh.distanceTo(Kh);e.setAttribute("lineDistance",new fa(r,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");}else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}rf.prototype.isLineSegments=!0;class jp extends qf{constructor(e,t){super(e,t),this.type="LineLoop"}}jp.prototype.isLineLoop=!0;class sf extends ya{constructor(e){super(),this.type="PointsMaterial",this.color=new da(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this}}sf.prototype.isPointsMaterial=!0;const Lh=new ea,tf=new Ob,Cd=new Nb,Dd=new aa;class kp extends ja{constructor(e=new ga,t=new sf){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const r=this.geometry,n=this.matrixWorld,i=e.params.Points.threshold,a=r.drawRange;if(null===r.boundingSphere&&r.computeBoundingSphere(),Cd.copy(r.boundingSphere),Cd.applyMatrix4(n),Cd.radius+=i,!1===e.ray.intersectsSphere(Cd))return;Lh.copy(n).invert(),tf.copy(e.ray).applyMatrix4(Lh);const o=i/((this.scale.x+this.scale.y+this.scale.z)/3),s=o*o;if(r.isBufferGeometry){const i=r.index,o=r.attributes.position;if(null!==i){for(let r=Math.max(0,a.start),$=Math.min(i.count,a.start+a.count);r<$;r++){const a=i.getX(r);Dd.fromBufferAttribute(o,a),Mh(Dd,a,s,n,e,t,this)}}else{for(let r=Math.max(0,a.start),i=Math.min(o.count,a.start+a.count);r<i;r++)Dd.fromBufferAttribute(o,r),Mh(Dd,r,s,n,e,t,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,r=Object.keys(t);if(r.length>0){const e=t[r[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,r=e.length;t<r;t++){const r=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function Mh(e,t,r,n,i,a,o){const s=tf.distanceSqToPoint(e);if(s<r){const r=new aa;tf.closestPointToPoint(e,r),r.applyMatrix4(n);const $=i.ray.origin.distanceTo(r);if($<i.near||$>i.far)return;a.push({distance:$,distanceToRay:Math.sqrt(s),point:r,index:t,face:null,object:o})}}kp.prototype.isPoints=!0;class lp extends Aa{constructor(e,t,r,n,i,a,o,s,$){super(e,t,r,n,i,a,o,s,$),this.format=void 0!==o?o:tb,this.minFilter=void 0!==a?a:Ja,this.magFilter=void 0!==i?i:Ja,this.generateMipmaps=!1;const l=this;"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(function t(){l.needsUpdate=!0,e.requestVideoFrameCallback(t)})}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;!1==="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}lp.prototype.isVideoTexture=!0;class mp extends Aa{constructor(e,t,r,n,i,a,o,s,$,l,c,p){super(null,a,o,s,$,l,n,i,c,p),this.image={width:t,height:r},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}mp.prototype.isCompressedTexture=!0;class np extends Aa{constructor(e,t,r,n,i,a,o,s,$){super(e,t,r,n,i,a,o,s,$),this.needsUpdate=!0}}np.prototype.isCanvasTexture=!0;class op extends Aa{constructor(e,t,r,n,i,a,o,s,$,l){if((l=void 0!==l?l:Eb)!==Eb&&l!==oc)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===r&&l===Eb&&(r=Xc),void 0===r&&l===oc&&(r=nc),super(null,n,i,a,o,s,l,r,$),this.image={width:e,height:t},this.magFilter=void 0!==o?o:za,this.minFilter=void 0!==s?s:za,this.flipY=!1,this.generateMipmaps=!1}}op.prototype.isDepthTexture=!0;class uf extends ga{constructor(e=1,t=8,r=0,n=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:n},t=Math.max(3,t);const i=[],a=[],o=[],s=[],$=new aa,l=new ba;a.push(0,0,0),o.push(0,0,1),s.push(.5,.5);for(let c=0,p=3;c<=t;c++,p+=3){const i=r+c/t*n;$.x=e*Math.cos(i),$.y=e*Math.sin(i),a.push($.x,$.y,$.z),o.push(0,0,1),l.x=(a[p]/e+1)/2,l.y=(a[p+1]/e+1)/2,s.push(l.x,l.y)}for(let c=1;c<=t;c++)i.push(c,c+1,0);this.setIndex(i),this.setAttribute("position",new fa(a,3)),this.setAttribute("normal",new fa(o,3)),this.setAttribute("uv",new fa(s,2))}static fromJSON(e){return new uf(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Ed extends ga{constructor(e=1,t=1,r=1,n=8,i=1,a=!1,o=0,s=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:r,radialSegments:n,heightSegments:i,openEnded:a,thetaStart:o,thetaLength:s};const $=this;n=Math.floor(n),i=Math.floor(i);const l=[],c=[],p=[],h=[];let u=0;const g=[],d=r/2;let m=0;function f(r){const i=u,a=new ba,g=new aa;let f=0;const x=!0===r?e:t,v=!0===r?1:-1;for(let e=1;e<=n;e++)c.push(0,d*v,0),p.push(0,v,0),h.push(.5,.5),u++;const B=u;for(let e=0;e<=n;e++){const t=e/n*s+o,r=Math.cos(t),i=Math.sin(t);g.x=x*i,g.y=d*v,g.z=x*r,c.push(g.x,g.y,g.z),p.push(0,v,0),a.x=.5*r+.5,a.y=.5*i*v+.5,h.push(a.x,a.y),u++}for(let e=0;e<n;e++){const t=i+e,n=B+e;!0===r?l.push(n,n+1,t):l.push(n+1,n,t),f+=3}$.addGroup(m,f,!0===r?1:2),m+=f}!function(){const a=new aa,f=new aa;let x=0;const v=(t-e)/r;for(let $=0;$<=i;$++){const l=[],m=$/i,x=m*(t-e)+e;for(let e=0;e<=n;e++){const t=e/n,i=t*s+o,$=Math.sin(i),g=Math.cos(i);f.x=x*$,f.y=-m*r+d,f.z=x*g,c.push(f.x,f.y,f.z),a.set($,v,g).normalize(),p.push(a.x,a.y,a.z),h.push(t,1-m),l.push(u++)}g.push(l)}for(let e=0;e<n;e++)for(let t=0;t<i;t++){const r=g[t][e],n=g[t+1][e],i=g[t+1][e+1],a=g[t][e+1];l.push(r,n,a),l.push(n,i,a),x+=6}$.addGroup(m,x,0),m+=x}(),!1===a&&(e>0&&f(!0),t>0&&f(!1)),this.setIndex(l),this.setAttribute("position",new fa(c,3)),this.setAttribute("normal",new fa(p,3)),this.setAttribute("uv",new fa(h,2))}static fromJSON(e){return new Ed(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class vf extends Ed{constructor(e=1,t=1,r=8,n=1,i=!1,a=0,o=2*Math.PI){super(0,e,t,r,n,i,a,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:r,heightSegments:n,openEnded:i,thetaStart:a,thetaLength:o}}static fromJSON(e){return new vf(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class wb extends ga{constructor(e,t,r=1,n=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:r,detail:n};const i=[],a=[];function o(e,t,r,n){const i=n+1,a=[];for(let o=0;o<=i;o++){a[o]=[];const n=e.clone().lerp(r,o/i),s=t.clone().lerp(r,o/i),$=i-o;for(let e=0;e<=$;e++)a[o][e]=0===e&&o===i?n:n.clone().lerp(s,e/$)}for(let o=0;o<i;o++)for(let e=0;e<2*(i-o)-1;e++){const t=Math.floor(e/2);e%2==0?(s(a[o][t+1]),s(a[o+1][t]),s(a[o][t])):(s(a[o][t+1]),s(a[o+1][t+1]),s(a[o+1][t]))}}function s(e){i.push(e.x,e.y,e.z)}function $(t,r){const n=3*t;r.x=e[n+0],r.y=e[n+1],r.z=e[n+2]}function l(e,t,r,n){n<0&&1===e.x&&(a[t]=e.x-1),0===r.x&&0===r.z&&(a[t]=n/2/Math.PI+.5)}function c(e){return Math.atan2(e.z,-e.x)}!function(e){const r=new aa,n=new aa,i=new aa;for(let a=0;a<t.length;a+=3)$(t[a+0],r),$(t[a+1],n),$(t[a+2],i),o(r,n,i,e)}(n),function(e){const t=new aa;for(let r=0;r<i.length;r+=3)t.x=i[r+0],t.y=i[r+1],t.z=i[r+2],t.normalize().multiplyScalar(e),i[r+0]=t.x,i[r+1]=t.y,i[r+2]=t.z}(r),function(){const e=new aa;for(let r=0;r<i.length;r+=3){e.x=i[r+0],e.y=i[r+1],e.z=i[r+2];const n=c(e)/2/Math.PI+.5,o=(t=e,Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))/Math.PI+.5);a.push(n,1-o)}var t;(function(){const e=new aa,t=new aa,r=new aa,n=new aa,o=new ba,s=new ba,$=new ba;for(let p=0,h=0;p<i.length;p+=9,h+=6){e.set(i[p+0],i[p+1],i[p+2]),t.set(i[p+3],i[p+4],i[p+5]),r.set(i[p+6],i[p+7],i[p+8]),o.set(a[h+0],a[h+1]),s.set(a[h+2],a[h+3]),$.set(a[h+4],a[h+5]),n.copy(e).add(t).add(r).divideScalar(3);const u=c(n);l(o,h+0,e,u),l(s,h+2,t,u),l($,h+4,r,u)}})(),function(){for(let e=0;e<a.length;e+=6){const t=a[e+0],r=a[e+2],n=a[e+4],i=Math.max(t,r,n),o=Math.min(t,r,n);i>.9&&o<.1&&(t<.2&&(a[e+0]+=1),r<.2&&(a[e+2]+=1),n<.2&&(a[e+4]+=1))}}()}(),this.setAttribute("position",new fa(i,3)),this.setAttribute("normal",new fa(i.slice(),3)),this.setAttribute("uv",new fa(a,2)),0===n?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(e){return new wb(e.vertices,e.indices,e.radius,e.details)}}class wf extends wb{constructor(e=1,t=0){const r=(1+Math.sqrt(5))/2,n=1/r;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-r,0,-n,r,0,n,-r,0,n,r,-n,-r,0,-n,r,0,n,-r,0,n,r,0,-r,0,-n,r,0,-n,-r,0,n,r,0,n],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new wf(e.radius,e.detail)}}const Fd=new aa,Gd=new aa,xf=new aa,Hd=new sa;class pp extends ga{constructor(e,t){if(super(),this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=void 0!==t?t:1,!0===e.isGeometry)return void console.error("THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");const r=Math.pow(10,4),n=Math.cos(Ib*t),i=e.getIndex(),a=e.getAttribute("position"),o=i?i.count:a.count,s=[0,0,0],$=["a","b","c"],l=new Array(3),c={},p=[];for(let h=0;h<o;h+=3){i?(s[0]=i.getX(h),s[1]=i.getX(h+1),s[2]=i.getX(h+2)):(s[0]=h,s[1]=h+1,s[2]=h+2);const{a:e,b:t,c:o}=Hd;if(e.fromBufferAttribute(a,s[0]),t.fromBufferAttribute(a,s[1]),o.fromBufferAttribute(a,s[2]),Hd.getNormal(xf),l[0]=`${Math.round(e.x*r)},${Math.round(e.y*r)},${Math.round(e.z*r)}`,l[1]=`${Math.round(t.x*r)},${Math.round(t.y*r)},${Math.round(t.z*r)}`,l[2]=`${Math.round(o.x*r)},${Math.round(o.y*r)},${Math.round(o.z*r)}`,l[0]!==l[1]&&l[1]!==l[2]&&l[2]!==l[0])for(let r=0;r<3;r++){const e=(r+1)%3,t=l[r],i=l[e],a=Hd[$[r]],o=Hd[$[e]],h=`${t}_${i}`,u=`${i}_${t}`;u in c&&c[u]?(xf.dot(c[u].normal)<=n&&(p.push(a.x,a.y,a.z),p.push(o.x,o.y,o.z)),c[u]=null):h in c||(c[h]={index0:s[r],index1:s[e],normal:xf.clone()})}}for(const h in c)if(c[h]){const{index0:e,index1:t}=c[h];Fd.fromBufferAttribute(a,e),Gd.fromBufferAttribute(a,t),p.push(Fd.x,Fd.y,Fd.z),p.push(Gd.x,Gd.y,Gd.z)}this.setAttribute("position",new fa(p,3))}}class Na{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const r=this.getUtoTmapping(e);return this.getPoint(r,t)}getPoints(e=5){const t=[];for(let r=0;r<=e;r++)t.push(this.getPoint(r/e));return t}getSpacedPoints(e=5){const t=[];for(let r=0;r<=e;r++)t.push(this.getPointAt(r/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let r,n=this.getPoint(0),i=0;t.push(0);for(let a=1;a<=e;a++)i+=(r=this.getPoint(a/e)).distanceTo(n),t.push(i),n=r;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const r=this.getLengths();let n=0;const i=r.length;let a;a=t||e*r[i-1];let o,s=0,$=i-1;for(;s<=$;)if((o=r[n=Math.floor(s+($-s)/2)]-a)<0)s=n+1;else{if(!(o>0)){$=n;break}$=n-1}if(r[n=$]===a)return n/(i-1);const l=r[n];return(n+(a-l)/(r[n+1]-l))/(i-1)}getTangent(e,t){let r=e-1e-4,n=e+1e-4;r<0&&(r=0),n>1&&(n=1);const i=this.getPoint(r),a=this.getPoint(n),o=t||(i.isVector2?new ba:new aa);return o.copy(a).sub(i).normalize(),o}getTangentAt(e,t){const r=this.getUtoTmapping(e);return this.getTangent(r,t)}computeFrenetFrames(e,t){const r=new aa,n=[],i=[],a=[],o=new aa,s=new ea;for(let h=0;h<=e;h++){const t=h/e;n[h]=this.getTangentAt(t,new aa),n[h].normalize()}i[0]=new aa,a[0]=new aa;let $=Number.MAX_VALUE;const l=Math.abs(n[0].x),c=Math.abs(n[0].y),p=Math.abs(n[0].z);l<=$&&($=l,r.set(1,0,0)),c<=$&&($=c,r.set(0,1,0)),p<=$&&r.set(0,0,1),o.crossVectors(n[0],r).normalize(),i[0].crossVectors(n[0],o),a[0].crossVectors(n[0],i[0]);for(let h=1;h<=e;h++){if(i[h]=i[h-1].clone(),a[h]=a[h-1].clone(),o.crossVectors(n[h-1],n[h]),o.length()>Number.EPSILON){o.normalize();const e=Math.acos(wa(n[h-1].dot(n[h]),-1,1));i[h].applyMatrix4(s.makeRotationAxis(o,e))}a[h].crossVectors(n[h],i[h])}if(!0===t){let t=Math.acos(wa(i[0].dot(i[e]),-1,1));t/=e,n[0].dot(o.crossVectors(i[0],i[e]))>0&&(t=-t);for(let r=1;r<=e;r++)i[r].applyMatrix4(s.makeRotationAxis(n[r],t*r)),a[r].crossVectors(n[r],i[r])}return{tangents:n,normals:i,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Id extends Na{constructor(e=0,t=0,r=1,n=1,i=0,a=2*Math.PI,o=!1,s=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=r,this.yRadius=n,this.aStartAngle=i,this.aEndAngle=a,this.aClockwise=o,this.aRotation=s}getPoint(e,t){const r=t||new ba,n=2*Math.PI;let i=this.aEndAngle-this.aStartAngle;const a=Math.abs(i)<Number.EPSILON;for(;i<0;)i+=n;for(;i>n;)i-=n;i<Number.EPSILON&&(i=a?0:n),!0!==this.aClockwise||a||(i===n?i=-n:i-=n);const o=this.aStartAngle+e*i;let s=this.aX+this.xRadius*Math.cos(o),$=this.aY+this.yRadius*Math.sin(o);if(0!==this.aRotation){const e=Math.cos(this.aRotation),t=Math.sin(this.aRotation),r=s-this.aX,n=$-this.aY;s=r*e-n*t+this.aX,$=r*t+n*e+this.aY}return r.set(s,$)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}Id.prototype.isEllipseCurve=!0;class Nh extends Id{constructor(e,t,r,n,i,a){super(e,t,r,r,n,i,a),this.type="ArcCurve"}}function yf(){let e=0,t=0,r=0,n=0;function i(i,a,o,s){e=i,t=o,r=-3*i+3*a-2*o-s,n=2*i-2*a+o+s}return{initCatmullRom:function(e,t,r,n,a){i(t,r,a*(r-e),a*(n-t))},initNonuniformCatmullRom:function(e,t,r,n,a,o,s){let $=(t-e)/a-(r-e)/(a+o)+(r-t)/o,l=(r-t)/o-(n-t)/(o+s)+(n-r)/s;i(t,r,$*=o,l*=o)},calc:function(i){const a=i*i;return e+t*i+r*a+n*(a*i)}}}Nh.prototype.isArcCurve=!0;const Jd=new aa,zf=new yf,Af=new yf,Bf=new yf;class Oh extends Na{constructor(e=[],t=!1,r="centripetal",n=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=r,this.tension=n}getPoint(e,t=new aa){const r=t,n=this.points,i=n.length,a=(i-(this.closed?0:1))*e;let o,s,$=Math.floor(a),l=a-$;this.closed?$+=$>0?0:(Math.floor(Math.abs($)/i)+1)*i:0===l&&$===i-1&&($=i-2,l=1),this.closed||$>0?o=n[($-1)%i]:(Jd.subVectors(n[0],n[1]).add(n[0]),o=Jd);const c=n[$%i],p=n[($+1)%i];if(this.closed||$+2<i?s=n[($+2)%i]:(Jd.subVectors(n[i-1],n[i-2]).add(n[i-1]),s=Jd),"centripetal"===this.curveType||"chordal"===this.curveType){const e="chordal"===this.curveType?.5:.25;let t=Math.pow(o.distanceToSquared(c),e),r=Math.pow(c.distanceToSquared(p),e),n=Math.pow(p.distanceToSquared(s),e);r<1e-4&&(r=1),t<1e-4&&(t=r),n<1e-4&&(n=r),zf.initNonuniformCatmullRom(o.x,c.x,p.x,s.x,t,r,n),Af.initNonuniformCatmullRom(o.y,c.y,p.y,s.y,t,r,n),Bf.initNonuniformCatmullRom(o.z,c.z,p.z,s.z,t,r,n)}else"catmullrom"===this.curveType&&(zf.initCatmullRom(o.x,c.x,p.x,s.x,this.tension),Af.initCatmullRom(o.y,c.y,p.y,s.y,this.tension),Bf.initCatmullRom(o.z,c.z,p.z,s.z,this.tension));return r.set(zf.calc(l),Af.calc(l),Bf.calc(l)),r}copy(e){super.copy(e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){const r=e.points[t];this.points.push(r.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,r=this.points.length;t<r;t++){const r=this.points[t];e.points.push(r.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){const r=e.points[t];this.points.push(new aa().fromArray(r))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function Ph(e,t,r,n,i){const a=.5*(n-t),o=.5*(i-r),s=e*e;return(2*r-2*n+a+o)*(e*s)+(-3*r+3*n-2*a-o)*s+a*e+r}function qp(e,t){const r=1-e;return r*r*t}function rp(e,t){return 2*(1-e)*e*t}function sp(e,t){return e*e*t}function Jc(e,t,r,n){return qp(e,t)+rp(e,r)+sp(e,n)}function tp(e,t){const r=1-e;return r*r*r*t}function up(e,t){const r=1-e;return 3*r*r*e*t}function vp(e,t){return 3*(1-e)*e*e*t}function wp(e,t){return e*e*e*t}function Kc(e,t,r,n,i){return tp(e,t)+up(e,r)+vp(e,n)+wp(e,i)}Oh.prototype.isCatmullRomCurve3=!0;class Cf extends Na{constructor(e=new ba,t=new ba,r=new ba,n=new ba){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=r,this.v3=n}getPoint(e,t=new ba){const r=t,n=this.v0,i=this.v1,a=this.v2,o=this.v3;return r.set(Kc(e,n.x,i.x,a.x,o.x),Kc(e,n.y,i.y,a.y,o.y)),r}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}Cf.prototype.isCubicBezierCurve=!0;class Qh extends Na{constructor(e=new aa,t=new aa,r=new aa,n=new aa){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=r,this.v3=n}getPoint(e,t=new aa){const r=t,n=this.v0,i=this.v1,a=this.v2,o=this.v3;return r.set(Kc(e,n.x,i.x,a.x,o.x),Kc(e,n.y,i.y,a.y,o.y),Kc(e,n.z,i.z,a.z,o.z)),r}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}Qh.prototype.isCubicBezierCurve3=!0;class Kd extends Na{constructor(e=new ba,t=new ba){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ba){const r=t;return 1===e?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(e).add(this.v1)),r}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const r=t||new ba;return r.copy(this.v2).sub(this.v1).normalize(),r}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Kd.prototype.isLineCurve=!0;class xp extends Na{constructor(e=new aa,t=new aa){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new aa){const r=t;return 1===e?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(e).add(this.v1)),r}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Df extends Na{constructor(e=new ba,t=new ba,r=new ba){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=r}getPoint(e,t=new ba){const r=t,n=this.v0,i=this.v1,a=this.v2;return r.set(Jc(e,n.x,i.x,a.x),Jc(e,n.y,i.y,a.y)),r}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Df.prototype.isQuadraticBezierCurve=!0;class Rh extends Na{constructor(e=new aa,t=new aa,r=new aa){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=r}getPoint(e,t=new aa){const r=t,n=this.v0,i=this.v1,a=this.v2;return r.set(Jc(e,n.x,i.x,a.x),Jc(e,n.y,i.y,a.y),Jc(e,n.z,i.z,a.z)),r}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Rh.prototype.isQuadraticBezierCurve3=!0;class Ef extends Na{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new ba){const r=t,n=this.points,i=(n.length-1)*e,a=Math.floor(i),o=i-a,s=n[0===a?a:a-1],$=n[a],l=n[a>n.length-2?n.length-1:a+1],c=n[a>n.length-3?n.length-1:a+2];return r.set(Ph(o,s.x,$.x,l.x,c.x),Ph(o,s.y,$.y,l.y,c.y)),r}copy(e){super.copy(e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){const r=e.points[t];this.points.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,r=this.points.length;t<r;t++){const r=this.points[t];e.points.push(r.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){const r=e.points[t];this.points.push(new ba().fromArray(r))}return this}}Ef.prototype.isSplineCurve=!0;var Ff=Object.freeze({__proto__:null,ArcCurve:Nh,CatmullRomCurve3:Oh,CubicBezierCurve:Cf,CubicBezierCurve3:Qh,EllipseCurve:Id,LineCurve:Kd,LineCurve3:xp,QuadraticBezierCurve:Df,QuadraticBezierCurve3:Rh,SplineCurve:Ef});const yp={triangulate:function(e,t,r=2){const n=t&&t.length,i=n?t[0]*r:e.length;let a=Sh(e,0,i,r,!0);const o=[];if(!a||a.next===a.prev)return o;let s,$,l,c,p,h,u;if(n&&(a=Dp(e,t,a,r)),e.length>80*r){s=l=e[0],$=c=e[1];for(let t=r;t<i;t+=r)(p=e[t])<s&&(s=p),(h=e[t+1])<$&&($=h),p>l&&(l=p),h>c&&(c=h);u=0!==(u=Math.max(l-s,c-$))?1/u:0}return Lc(a,o,r,s,$,u),o}};function Sh(e,t,r,n,i){let a,o;if(i===Op(e,t,r,n)>0)for(a=t;a<r;a+=n)o=Vh(a,e[a],e[a+1],o);else for(a=r-n;a>=t;a-=n)o=Vh(a,e[a],e[a+1],o);return o&&Ld(o,o.next)&&(Nc(o),o=o.next),o}function nb(e,t){if(!e)return e;t||(t=e);let r,n=e;do{if(r=!1,n.steiner||!Ld(n,n.next)&&0!==oa(n.prev,n,n.next))n=n.next;else{if(Nc(n),(n=t=n.prev)===n.next)break;r=!0}}while(r||n!==t);return t}function Lc(e,t,r,n,i,a,o){if(!e)return;!o&&a&&Ip(e,n,i,a);let s,$,l=e;for(;e.prev!==e.next;)if(s=e.prev,$=e.next,a?Ap(e,n,i,a):zp(e))t.push(s.i/r),t.push(e.i/r),t.push($.i/r),Nc(e),e=$.next,l=$.next;else if((e=$)===l){o?1===o?Lc(e=Bp(nb(e),t,r),t,r,n,i,a,2):2===o&&Cp(e,t,r,n,i,a):Lc(nb(e),t,r,n,i,a,1);break}}function zp(e){const t=e.prev,r=e,n=e.next;if(oa(t,r,n)>=0)return!1;let i=e.next.next;for(;i!==e.prev;){if(dc(t.x,t.y,r.x,r.y,n.x,n.y,i.x,i.y)&&oa(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function Ap(e,t,r,n){const i=e.prev,a=e,o=e.next;if(oa(i,a,o)>=0)return!1;const s=i.x<a.x?i.x<o.x?i.x:o.x:a.x<o.x?a.x:o.x,$=i.y<a.y?i.y<o.y?i.y:o.y:a.y<o.y?a.y:o.y,l=i.x>a.x?i.x>o.x?i.x:o.x:a.x>o.x?a.x:o.x,c=i.y>a.y?i.y>o.y?i.y:o.y:a.y>o.y?a.y:o.y,p=Gf(s,$,t,r,n),h=Gf(l,c,t,r,n);let u=e.prevZ,g=e.nextZ;for(;u&&u.z>=p&&g&&g.z<=h;){if(u!==e.prev&&u!==e.next&&dc(i.x,i.y,a.x,a.y,o.x,o.y,u.x,u.y)&&oa(u.prev,u,u.next)>=0)return!1;if(u=u.prevZ,g!==e.prev&&g!==e.next&&dc(i.x,i.y,a.x,a.y,o.x,o.y,g.x,g.y)&&oa(g.prev,g,g.next)>=0)return!1;g=g.nextZ}for(;u&&u.z>=p;){if(u!==e.prev&&u!==e.next&&dc(i.x,i.y,a.x,a.y,o.x,o.y,u.x,u.y)&&oa(u.prev,u,u.next)>=0)return!1;u=u.prevZ}for(;g&&g.z<=h;){if(g!==e.prev&&g!==e.next&&dc(i.x,i.y,a.x,a.y,o.x,o.y,g.x,g.y)&&oa(g.prev,g,g.next)>=0)return!1;g=g.nextZ}return!0}function Bp(e,t,r){let n=e;do{const i=n.prev,a=n.next.next;!Ld(i,a)&&Th(i,n,n.next,a)&&Mc(i,a)&&Mc(a,i)&&(t.push(i.i/r),t.push(n.i/r),t.push(a.i/r),Nc(n),Nc(n.next),n=e=a),n=n.next}while(n!==e);return nb(n)}function Cp(e,t,r,n,i,a){let o=e;do{let e=o.next.next;for(;e!==o.prev;){if(o.i!==e.i&&Lp(o,e)){let s=Uh(o,e);return o=nb(o,o.next),s=nb(s,s.next),Lc(o,t,r,n,i,a),void Lc(s,t,r,n,i,a)}e=e.next}o=o.next}while(o!==e)}function Dp(e,t,r,n){const i=[];let a,o,s,$,l;for(a=0,o=t.length;a<o;a++)(l=Sh(e,s=t[a]*n,$=a<o-1?t[a+1]*n:e.length,n,!1))===l.next&&(l.steiner=!0),i.push(Kp(l));for(i.sort(Ep),a=0;a<i.length;a++)Fp(i[a],r),r=nb(r,r.next);return r}function Ep(e,t){return e.x-t.x}function Fp(e,t){if(t=Gp(e,t)){const r=Uh(t,e);nb(t,t.next),nb(r,r.next)}}function Gp(e,t){let r=t;const n=e.x,i=e.y;let a,o=-1/0;do{if(i<=r.y&&i>=r.next.y&&r.next.y!==r.y){const e=r.x+(i-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(e<=n&&e>o){if(o=e,e===n){if(i===r.y)return r;if(i===r.next.y)return r.next}a=r.x<r.next.x?r:r.next}}r=r.next}while(r!==t);if(!a)return null;if(n===o)return a;const s=a,$=a.x,l=a.y;let c,p=1/0;r=a;do{n>=r.x&&r.x>=$&&n!==r.x&&dc(i<l?n:o,i,$,l,i<l?o:n,i,r.x,r.y)&&(c=Math.abs(i-r.y)/(n-r.x),Mc(r,e)&&(c<p||c===p&&(r.x>a.x||r.x===a.x&&Hp(a,r)))&&(a=r,p=c)),r=r.next}while(r!==s);return a}function Hp(e,t){return oa(e.prev,e,t.prev)<0&&oa(t.next,e,e.next)<0}function Ip(e,t,r,n){let i=e;do{null===i.z&&(i.z=Gf(i.x,i.y,t,r,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==e);i.prevZ.nextZ=null,i.prevZ=null,Jp(i)}function Jp(e){let t,r,n,i,a,o,s,$,l=1;do{for(r=e,e=null,a=null,o=0;r;){for(o++,n=r,s=0,t=0;t<l&&(s++,n=n.nextZ);t++);for($=l;s>0||$>0&&n;)0!==s&&(0===$||!n||r.z<=n.z)?(i=r,r=r.nextZ,s--):(i=n,n=n.nextZ,$--),a?a.nextZ=i:e=i,i.prevZ=a,a=i;r=n}a.nextZ=null,l*=2}while(o>1);return e}function Gf(e,t,r,n,i){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-r)*i)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*i)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function Kp(e){let t=e,r=e;do{(t.x<r.x||t.x===r.x&&t.y<r.y)&&(r=t),t=t.next}while(t!==e);return r}function dc(e,t,r,n,i,a,o,s){return(i-o)*(t-s)-(e-o)*(a-s)>=0&&(e-o)*(n-s)-(r-o)*(t-s)>=0&&(r-o)*(a-s)-(i-o)*(n-s)>=0}function Lp(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!Mp(e,t)&&(Mc(e,t)&&Mc(t,e)&&Np(e,t)&&(oa(e.prev,e,t.prev)||oa(e,t.prev,t))||Ld(e,t)&&oa(e.prev,e,e.next)>0&&oa(t.prev,t,t.next)>0)}function oa(e,t,r){return(t.y-e.y)*(r.x-t.x)-(t.x-e.x)*(r.y-t.y)}function Ld(e,t){return e.x===t.x&&e.y===t.y}function Th(e,t,r,n){const i=Nd(oa(e,t,r)),a=Nd(oa(e,t,n)),o=Nd(oa(r,n,e)),s=Nd(oa(r,n,t));return i!==a&&o!==s||!(0!==i||!Md(e,r,t))||!(0!==a||!Md(e,n,t))||!(0!==o||!Md(r,e,n))||!(0!==s||!Md(r,t,n))}function Md(e,t,r){return t.x<=Math.max(e.x,r.x)&&t.x>=Math.min(e.x,r.x)&&t.y<=Math.max(e.y,r.y)&&t.y>=Math.min(e.y,r.y)}function Nd(e){return e>0?1:e<0?-1:0}function Mp(e,t){let r=e;do{if(r.i!==e.i&&r.next.i!==e.i&&r.i!==t.i&&r.next.i!==t.i&&Th(r,r.next,e,t))return!0;r=r.next}while(r!==e);return!1}function Mc(e,t){return oa(e.prev,e,e.next)<0?oa(e,t,e.next)>=0&&oa(e,e.prev,t)>=0:oa(e,t,e.prev)<0||oa(e,e.next,t)<0}function Np(e,t){let r=e,n=!1;const i=(e.x+t.x)/2,a=(e.y+t.y)/2;do{r.y>a!=r.next.y>a&&r.next.y!==r.y&&i<(r.next.x-r.x)*(a-r.y)/(r.next.y-r.y)+r.x&&(n=!n),r=r.next}while(r!==e);return n}function Uh(e,t){const r=new Hf(e.i,e.x,e.y),n=new Hf(t.i,t.x,t.y),i=e.next,a=t.prev;return e.next=t,t.prev=e,r.next=i,i.prev=r,n.next=r,r.prev=n,a.next=n,n.prev=a,n}function Vh(e,t,r,n){const i=new Hf(e,t,r);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Nc(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function Hf(e,t,r){this.i=e,this.x=t,this.y=r,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function Op(e,t,r,n){let i=0;for(let a=t,o=r-n;a<r;a+=n)i+=(e[o]-e[a])*(e[a+1]+e[o+1]),o=a;return i}class ob{static area(e){const t=e.length;let r=0;for(let n=t-1,i=0;i<t;n=i++)r+=e[n].x*e[i].y-e[i].x*e[n].y;return .5*r}static isClockWise(e){return ob.area(e)<0}static triangulateShape(e,t){const r=[],n=[],i=[];Wh(e),Xh(r,e);let a=e.length;t.forEach(Wh);for(let s=0;s<t.length;s++)n.push(a),a+=t[s].length,Xh(r,t[s]);const o=yp.triangulate(r,n);for(let s=0;s<o.length;s+=3)i.push(o.slice(s,s+3));return i}}function Wh(e){const t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function Xh(e,t){for(let r=0;r<t.length;r++)e.push(t[r].x),e.push(t[r].y)}class pb extends ga{constructor(e,t){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const r=this,n=[],i=[];for(let o=0,s=e.length;o<s;o++){a(e[o])}function a(e){const a=[],o=void 0!==t.curveSegments?t.curveSegments:12,s=void 0!==t.steps?t.steps:1;let $=void 0!==t.depth?t.depth:100,l=void 0===t.bevelEnabled||t.bevelEnabled,c=void 0!==t.bevelThickness?t.bevelThickness:6,p=void 0!==t.bevelSize?t.bevelSize:c-2,h=void 0!==t.bevelOffset?t.bevelOffset:0,u=void 0!==t.bevelSegments?t.bevelSegments:3;const g=t.extrudePath,d=void 0!==t.UVGenerator?t.UVGenerator:Pp;void 0!==t.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),$=t.amount);let m,f,x,v,B,_=!1;g&&(m=g.getSpacedPoints(s),_=!0,l=!1,f=g.computeFrenetFrames(s,!1),x=new aa,v=new aa,B=new aa),l||(u=0,c=0,p=0,h=0);const K=e.extractPoints(o);let y=K.shape;const b=K.holes;if(!ob.isClockWise(y)){y=y.reverse();for(let e=0,t=b.length;e<t;e++){const t=b[e];ob.isClockWise(t)&&(b[e]=t.reverse())}}const M=ob.triangulateShape(y,b),S=y;for(let t=0,r=b.length;t<r;t++){const e=b[t];y=y.concat(e)}function w(e,t,r){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(r).add(e)}const T=y.length,A=M.length;function E(e,t,r){let n,i,a;const o=e.x-t.x,s=e.y-t.y,$=r.x-e.x,l=r.y-e.y,c=o*o+s*s,p=o*l-s*$;if(Math.abs(p)>Number.EPSILON){const p=Math.sqrt(c),h=Math.sqrt($*$+l*l),u=t.x-s/p,g=t.y+o/p,d=((r.x-l/h-u)*l-(r.y+$/h-g)*$)/(o*l-s*$),m=(n=u+o*d-e.x)*n+(i=g+s*d-e.y)*i;if(m<=2)return new ba(n,i);a=Math.sqrt(m/2)}else{let e=!1;o>Number.EPSILON?$>Number.EPSILON&&(e=!0):o<-Number.EPSILON?$<-Number.EPSILON&&(e=!0):Math.sign(s)===Math.sign(l)&&(e=!0),e?(n=-s,i=o,a=Math.sqrt(c)):(n=o,i=s,a=Math.sqrt(c/2))}return new ba(n/a,i/a)}const L=[];for(let t=0,r=S.length,n=r-1,i=t+1;t<r;t++,n++,i++)n===r&&(n=0),i===r&&(i=0),L[t]=E(S[t],S[n],S[i]);const C=[];let R,P=L.concat();for(let t=0,r=b.length;t<r;t++){const e=b[t];R=[];for(let t=0,r=e.length,n=r-1,i=t+1;t<r;t++,n++,i++)n===r&&(n=0),i===r&&(i=0),R[t]=E(e[t],e[n],e[i]);C.push(R),P=P.concat(R)}for(let t=0;t<u;t++){const e=t/u,r=c*Math.cos(e*Math.PI/2),n=p*Math.sin(e*Math.PI/2)+h;for(let t=0,i=S.length;t<i;t++){const e=w(S[t],L[t],n);I(e.x,e.y,-r)}for(let t=0,i=b.length;t<i;t++){const e=b[t];R=C[t];for(let t=0,i=e.length;t<i;t++){const i=w(e[t],R[t],n);I(i.x,i.y,-r)}}}const D=p+h;for(let t=0;t<T;t++){const e=l?w(y[t],P[t],D):y[t];_?(v.copy(f.normals[0]).multiplyScalar(e.x),x.copy(f.binormals[0]).multiplyScalar(e.y),B.copy(m[0]).add(v).add(x),I(B.x,B.y,B.z)):I(e.x,e.y,0)}for(let t=1;t<=s;t++)for(let e=0;e<T;e++){const r=l?w(y[e],P[e],D):y[e];_?(v.copy(f.normals[t]).multiplyScalar(r.x),x.copy(f.binormals[t]).multiplyScalar(r.y),B.copy(m[t]).add(v).add(x),I(B.x,B.y,B.z)):I(r.x,r.y,$/s*t)}for(let t=u-1;t>=0;t--){const e=t/u,r=c*Math.cos(e*Math.PI/2),n=p*Math.sin(e*Math.PI/2)+h;for(let t=0,i=S.length;t<i;t++){const e=w(S[t],L[t],n);I(e.x,e.y,$+r)}for(let t=0,i=b.length;t<i;t++){const e=b[t];R=C[t];for(let t=0,i=e.length;t<i;t++){const i=w(e[t],R[t],n);_?I(i.x,i.y+m[s-1].y,m[s-1].x+r):I(i.x,i.y,$+r)}}}function F(e,t){let r=e.length;for(;--r>=0;){const n=r;let i=r-1;i<0&&(i=e.length-1);for(let e=0,r=s+2*u;e<r;e++){const r=T*e,a=T*(e+1);N(t+n+r,t+i+r,t+i+a,t+n+a)}}}function I(e,t,r){a.push(e),a.push(t),a.push(r)}function G(e,t,i){V(e),V(t),V(i);const a=n.length/3,o=d.generateTopUV(r,n,a-3,a-2,a-1);U(o[0]),U(o[1]),U(o[2])}function N(e,t,i,a){V(e),V(t),V(a),V(t),V(i),V(a);const o=n.length/3,s=d.generateSideWallUV(r,n,o-6,o-3,o-2,o-1);U(s[0]),U(s[1]),U(s[3]),U(s[1]),U(s[2]),U(s[3])}function V(e){n.push(a[3*e+0]),n.push(a[3*e+1]),n.push(a[3*e+2])}function U(e){i.push(e.x),i.push(e.y)}!function(){const e=n.length/3;if(l){let e=0,t=T*e;for(let r=0;r<A;r++){const e=M[r];G(e[2]+t,e[1]+t,e[0]+t)}t=T*(e=s+2*u);for(let r=0;r<A;r++){const e=M[r];G(e[0]+t,e[1]+t,e[2]+t)}}else{for(let e=0;e<A;e++){const t=M[e];G(t[2],t[1],t[0])}for(let e=0;e<A;e++){const t=M[e];G(t[0]+T*s,t[1]+T*s,t[2]+T*s)}}r.addGroup(e,n.length/3-e,0)}(),function(){const e=n.length/3;let t=0;F(S,t),t+=S.length;for(let r=0,n=b.length;r<n;r++){const e=b[r];F(e,t),t+=e.length}r.addGroup(e,n.length/3-e,1)}()}this.setAttribute("position",new fa(n,3)),this.setAttribute("uv",new fa(i,2)),this.computeVertexNormals()}toJSON(){const e=super.toJSON();return Qp(this.parameters.shapes,this.parameters.options,e)}static fromJSON(e,t){const r=[];for(let i=0,a=e.shapes.length;i<a;i++){const n=t[e.shapes[i]];r.push(n)}const n=e.options.extrudePath;return void 0!==n&&(e.options.extrudePath=new Ff[n.type]().fromJSON(n)),new pb(r,e.options)}}const Pp={generateTopUV:function(e,t,r,n,i){const a=t[3*r],o=t[3*r+1],s=t[3*n],$=t[3*n+1],l=t[3*i],c=t[3*i+1];return[new ba(a,o),new ba(s,$),new ba(l,c)]},generateSideWallUV:function(e,t,r,n,i,a){const o=t[3*r],s=t[3*r+1],$=t[3*r+2],l=t[3*n],c=t[3*n+1],p=t[3*n+2],h=t[3*i],u=t[3*i+1],g=t[3*i+2],d=t[3*a],m=t[3*a+1],f=t[3*a+2];return Math.abs(s-c)<Math.abs(o-l)?[new ba(o,1-$),new ba(l,1-p),new ba(h,1-g),new ba(d,1-f)]:[new ba(s,1-$),new ba(c,1-p),new ba(u,1-g),new ba(m,1-f)]}};function Qp(e,t,r){if(r.shapes=[],Array.isArray(e))for(let n=0,i=e.length;n<i;n++){const t=e[n];r.shapes.push(t.uuid)}else r.shapes.push(e.uuid);return void 0!==t.extrudePath&&(r.options.extrudePath=t.extrudePath.toJSON()),r}class If extends wb{constructor(e=1,t=0){const r=(1+Math.sqrt(5))/2;super([-1,r,0,1,r,0,-1,-r,0,1,-r,0,0,-1,r,0,1,r,0,-1,-r,0,1,-r,r,0,-1,r,0,1,-r,0,-1,-r,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new If(e.radius,e.detail)}}class Jf extends ga{constructor(e,t=12,r=0,n=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:r,phiLength:n},t=Math.floor(t),n=wa(n,0,2*Math.PI);const i=[],a=[],o=[],s=1/t,$=new aa,l=new ba;for(let c=0;c<=t;c++){const i=r+c*s*n,p=Math.sin(i),h=Math.cos(i);for(let r=0;r<=e.length-1;r++)$.x=e[r].x*p,$.y=e[r].y,$.z=e[r].x*h,a.push($.x,$.y,$.z),l.x=c/t,l.y=r/(e.length-1),o.push(l.x,l.y)}for(let c=0;c<t;c++)for(let t=0;t<e.length-1;t++){const r=t+c*e.length,n=r,a=r+e.length,o=r+e.length+1,s=r+1;i.push(n,a,s),i.push(a,o,s)}if(this.setIndex(i),this.setAttribute("position",new fa(a,3)),this.setAttribute("uv",new fa(o,2)),this.computeVertexNormals(),n===2*Math.PI){const r=this.attributes.normal.array,n=new aa,i=new aa,a=new aa,o=t*e.length*3;for(let t=0,s=0;t<e.length;t++,s+=3)n.x=r[s+0],n.y=r[s+1],n.z=r[s+2],i.x=r[o+s+0],i.y=r[o+s+1],i.z=r[o+s+2],a.addVectors(n,i).normalize(),r[s+0]=r[o+s+0]=a.x,r[s+1]=r[o+s+1]=a.y,r[s+2]=r[o+s+2]=a.z}}static fromJSON(e){return new Jf(e.points,e.segments,e.phiStart,e.phiLength)}}class Kf extends wb{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Kf(e.radius,e.detail)}}class Yh extends ga{constructor(e,t,r){super(),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:r};const n=[],i=[],a=[],o=[],s=new aa,$=new aa,l=new aa,c=new aa,p=new aa;e.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const h=t+1;for(let u=0;u<=r;u++){const n=u/r;for(let r=0;r<=t;r++){const h=r/t;e(h,n,$),i.push($.x,$.y,$.z),h-1e-5>=0?(e(h-1e-5,n,l),c.subVectors($,l)):(e(h+1e-5,n,l),c.subVectors(l,$)),n-1e-5>=0?(e(h,n-1e-5,l),p.subVectors($,l)):(e(h,n+1e-5,l),p.subVectors(l,$)),s.crossVectors(c,p).normalize(),a.push(s.x,s.y,s.z),o.push(h,n)}}for(let u=0;u<r;u++)for(let e=0;e<t;e++){const t=u*h+e,r=u*h+e+1,i=(u+1)*h+e+1,a=(u+1)*h+e;n.push(t,r,a),n.push(r,i,a)}this.setIndex(n),this.setAttribute("position",new fa(i,3)),this.setAttribute("normal",new fa(a,3)),this.setAttribute("uv",new fa(o,2))}}class Lf extends ga{constructor(e=.5,t=1,r=8,n=1,i=0,a=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:n,thetaStart:i,thetaLength:a},r=Math.max(3,r);const o=[],s=[],$=[],l=[];let c=e;const p=(t-e)/(n=Math.max(1,n)),h=new aa,u=new ba;for(let g=0;g<=n;g++){for(let e=0;e<=r;e++){const n=i+e/r*a;h.x=c*Math.cos(n),h.y=c*Math.sin(n),s.push(h.x,h.y,h.z),$.push(0,0,1),u.x=(h.x/t+1)/2,u.y=(h.y/t+1)/2,l.push(u.x,u.y)}c+=p}for(let g=0;g<n;g++){const e=g*(r+1);for(let t=0;t<r;t++){const n=t+e,i=n,a=n+r+1,s=n+r+2,$=n+1;o.push(i,a,$),o.push(a,s,$)}}this.setIndex(o),this.setAttribute("position",new fa(s,3)),this.setAttribute("normal",new fa($,3)),this.setAttribute("uv",new fa(l,2))}static fromJSON(e){return new Lf(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Od extends ga{constructor(e,t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const r=[],n=[],i=[],a=[];let o=0,s=0;if(!1===Array.isArray(e))$(e);else for(let l=0;l<e.length;l++)$(e[l]),this.addGroup(o,s,l),o+=s,s=0;function $(e){const o=n.length/3,$=e.extractPoints(t);let l=$.shape;const c=$.holes;!1===ob.isClockWise(l)&&(l=l.reverse());for(let t=0,r=c.length;t<r;t++){const e=c[t];!0===ob.isClockWise(e)&&(c[t]=e.reverse())}const p=ob.triangulateShape(l,c);for(let t=0,r=c.length;t<r;t++){const e=c[t];l=l.concat(e)}for(let t=0,r=l.length;t<r;t++){const e=l[t];n.push(e.x,e.y,0),i.push(0,0,1),a.push(e.x,e.y)}for(let t=0,n=p.length;t<n;t++){const e=p[t],n=e[0]+o,i=e[1]+o,a=e[2]+o;r.push(n,i,a),s+=3}}this.setIndex(r),this.setAttribute("position",new fa(n,3)),this.setAttribute("normal",new fa(i,3)),this.setAttribute("uv",new fa(a,2))}toJSON(){const e=super.toJSON();return Rp(this.parameters.shapes,e)}static fromJSON(e,t){const r=[];for(let n=0,i=e.shapes.length;n<i;n++){const i=t[e.shapes[n]];r.push(i)}return new Od(r,e.curveSegments)}}function Rp(e,t){if(t.shapes=[],Array.isArray(e))for(let r=0,n=e.length;r<n;r++){const n=e[r];t.shapes.push(n.uuid)}else t.shapes.push(e.uuid);return t}class Pd extends ga{constructor(e=1,t=8,r=6,n=0,i=2*Math.PI,a=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:n,phiLength:i,thetaStart:a,thetaLength:o},t=Math.max(3,Math.floor(t)),r=Math.max(2,Math.floor(r));const s=Math.min(a+o,Math.PI);let $=0;const l=[],c=new aa,p=new aa,h=[],u=[],g=[],d=[];for(let m=0;m<=r;m++){const h=[],f=m/r;let x=0;0==m&&0==a?x=.5/t:m==r&&s==Math.PI&&(x=-.5/t);for(let r=0;r<=t;r++){const s=r/t;c.x=-e*Math.cos(n+s*i)*Math.sin(a+f*o),c.y=e*Math.cos(a+f*o),c.z=e*Math.sin(n+s*i)*Math.sin(a+f*o),u.push(c.x,c.y,c.z),p.copy(c).normalize(),g.push(p.x,p.y,p.z),d.push(s+x,1-f),h.push($++)}l.push(h)}for(let m=0;m<r;m++)for(let e=0;e<t;e++){const t=l[m][e+1],n=l[m][e],i=l[m+1][e],o=l[m+1][e+1];(0!==m||a>0)&&h.push(t,n,o),(m!==r-1||s<Math.PI)&&h.push(n,i,o)}this.setIndex(h),this.setAttribute("position",new fa(u,3)),this.setAttribute("normal",new fa(g,3)),this.setAttribute("uv",new fa(d,2))}static fromJSON(e){return new Pd(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Mf extends wb{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Mf(e.radius,e.detail)}}class Zh extends pb{constructor(e,t={}){const r=t.font;if(!r||!r.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new ga;const n=r.generateShapes(e,t.size);t.depth=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),super(n,t),this.type="TextGeometry"}}class Nf extends ga{constructor(e=1,t=.4,r=8,n=6,i=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:n,arc:i},r=Math.floor(r),n=Math.floor(n);const a=[],o=[],s=[],$=[],l=new aa,c=new aa,p=new aa;for(let h=0;h<=r;h++)for(let a=0;a<=n;a++){const u=a/n*i,g=h/r*Math.PI*2;c.x=(e+t*Math.cos(g))*Math.cos(u),c.y=(e+t*Math.cos(g))*Math.sin(u),c.z=t*Math.sin(g),o.push(c.x,c.y,c.z),l.x=e*Math.cos(u),l.y=e*Math.sin(u),p.subVectors(c,l).normalize(),s.push(p.x,p.y,p.z),$.push(a/n),$.push(h/r)}for(let h=1;h<=r;h++)for(let e=1;e<=n;e++){const t=(n+1)*h+e-1,r=(n+1)*(h-1)+e-1,i=(n+1)*(h-1)+e,o=(n+1)*h+e;a.push(t,r,o),a.push(r,i,o)}this.setIndex(a),this.setAttribute("position",new fa(o,3)),this.setAttribute("normal",new fa(s,3)),this.setAttribute("uv",new fa($,2))}static fromJSON(e){return new Nf(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Of extends ga{constructor(e=1,t=.4,r=64,n=8,i=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:r,radialSegments:n,p:i,q:a},r=Math.floor(r),n=Math.floor(n);const o=[],s=[],$=[],l=[],c=new aa,p=new aa,h=new aa,u=new aa,g=new aa,d=new aa,m=new aa;for(let x=0;x<=r;++x){const o=x/r*i*Math.PI*2;f(o,i,a,e,h),f(o+.01,i,a,e,u),d.subVectors(u,h),m.addVectors(u,h),g.crossVectors(d,m),m.crossVectors(g,d),g.normalize(),m.normalize();for(let e=0;e<=n;++e){const i=e/n*Math.PI*2,a=-t*Math.cos(i),o=t*Math.sin(i);c.x=h.x+(a*m.x+o*g.x),c.y=h.y+(a*m.y+o*g.y),c.z=h.z+(a*m.z+o*g.z),s.push(c.x,c.y,c.z),p.subVectors(c,h).normalize(),$.push(p.x,p.y,p.z),l.push(x/r),l.push(e/n)}}for(let x=1;x<=r;x++)for(let e=1;e<=n;e++){const t=(n+1)*(x-1)+(e-1),r=(n+1)*x+(e-1),i=(n+1)*x+e,a=(n+1)*(x-1)+e;o.push(t,r,a),o.push(r,i,a)}function f(e,t,r,n,i){const a=Math.cos(e),o=Math.sin(e),s=r/t*e,$=Math.cos(s);i.x=n*(2+$)*.5*a,i.y=n*(2+$)*o*.5,i.z=n*Math.sin(s)*.5}this.setIndex(o),this.setAttribute("position",new fa(s,3)),this.setAttribute("normal",new fa($,3)),this.setAttribute("uv",new fa(l,2))}static fromJSON(e){return new Of(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Pf extends ga{constructor(e,t=64,r=1,n=8,i=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:r,radialSegments:n,closed:i};const a=e.computeFrenetFrames(t,i);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;const o=new aa,s=new aa,$=new ba;let l=new aa;const c=[],p=[],h=[],u=[];function g(i){l=e.getPointAt(i/t,l);const $=a.normals[i],h=a.binormals[i];for(let e=0;e<=n;e++){const t=e/n*Math.PI*2,i=Math.sin(t),a=-Math.cos(t);s.x=a*$.x+i*h.x,s.y=a*$.y+i*h.y,s.z=a*$.z+i*h.z,s.normalize(),p.push(s.x,s.y,s.z),o.x=l.x+r*s.x,o.y=l.y+r*s.y,o.z=l.z+r*s.z,c.push(o.x,o.y,o.z)}}!function(){for(let e=0;e<t;e++)g(e);g(!1===i?t:0),function(){for(let e=0;e<=t;e++)for(let r=0;r<=n;r++)$.x=e/t,$.y=r/n,h.push($.x,$.y)}(),function(){for(let e=1;e<=t;e++)for(let t=1;t<=n;t++){const r=(n+1)*(e-1)+(t-1),i=(n+1)*e+(t-1),a=(n+1)*e+t,o=(n+1)*(e-1)+t;u.push(r,i,o),u.push(i,a,o)}}()}(),this.setIndex(u),this.setAttribute("position",new fa(c,3)),this.setAttribute("normal",new fa(p,3)),this.setAttribute("uv",new fa(h,2))}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Pf(new Ff[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Sp extends ga{constructor(e){if(super(),this.type="WireframeGeometry",!0===e.isGeometry)return void console.error("THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");const t=[],r=[0,0],n={},i=new aa;if(null!==e.index){const a=e.attributes.position,o=e.index;let s=e.groups;0===s.length&&(s=[{start:0,count:o.count,materialIndex:0}]);for(let e=0,t=s.length;e<t;++e){const t=s[e],i=t.start;for(let e=i,a=i+t.count;e<a;e+=3)for(let t=0;t<3;t++){const i=o.getX(e+t),a=o.getX(e+(t+1)%3);r[0]=Math.min(i,a),r[1]=Math.max(i,a);const s=r[0]+","+r[1];void 0===n[s]&&(n[s]={index1:r[0],index2:r[1]})}}for(const e in n){const r=n[e];i.fromBufferAttribute(a,r.index1),t.push(i.x,i.y,i.z),i.fromBufferAttribute(a,r.index2),t.push(i.x,i.y,i.z)}}else{const r=e.attributes.position;for(let e=0,n=r.count/3;e<n;e++)for(let a=0;a<3;a++){const n=3*e+a;i.fromBufferAttribute(r,n),t.push(i.x,i.y,i.z);const o=3*e+(a+1)%3;i.fromBufferAttribute(r,o),t.push(i.x,i.y,i.z)}}this.setAttribute("position",new fa(t,3))}}var e=Object.freeze({__proto__:null,BoxGeometry:Vb,BoxBufferGeometry:Vb,CircleGeometry:uf,CircleBufferGeometry:uf,ConeGeometry:vf,ConeBufferGeometry:vf,CylinderGeometry:Ed,CylinderBufferGeometry:Ed,DodecahedronGeometry:wf,DodecahedronBufferGeometry:wf,EdgesGeometry:pp,ExtrudeGeometry:pb,ExtrudeBufferGeometry:pb,IcosahedronGeometry:If,IcosahedronBufferGeometry:If,LatheGeometry:Jf,LatheBufferGeometry:Jf,OctahedronGeometry:Kf,OctahedronBufferGeometry:Kf,ParametricGeometry:Yh,ParametricBufferGeometry:Yh,PlaneGeometry:vd,PlaneBufferGeometry:vd,PolyhedronGeometry:wb,PolyhedronBufferGeometry:wb,RingGeometry:Lf,RingBufferGeometry:Lf,ShapeGeometry:Od,ShapeBufferGeometry:Od,SphereGeometry:Pd,SphereBufferGeometry:Pd,TetrahedronGeometry:Mf,TetrahedronBufferGeometry:Mf,TextGeometry:Zh,TextBufferGeometry:Zh,TorusGeometry:Nf,TorusBufferGeometry:Nf,TorusKnotGeometry:Of,TorusKnotBufferGeometry:Of,TubeGeometry:Pf,TubeBufferGeometry:Pf,WireframeGeometry:Sp});class $h extends ya{constructor(e){super(),this.type="ShadowMaterial",this.color=new da(0),this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this}}$h.prototype.isShadowMaterial=!0;class _h extends lb{constructor(e){super(e),this.type="RawShaderMaterial"}}_h.prototype.isRawShaderMaterial=!0;class Qf extends ya{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new da(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new da(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Hb,this.normalScale=new ba(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.vertexTangents=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this.vertexTangents=e.vertexTangents,this}}Qf.prototype.isMeshStandardMaterial=!0;class ai extends Qf{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ba(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(e){this.reflectivity=wa(2.5*(e-1)/(e+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.thickness=.01,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new da(1,1,1),this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.reflectivity=e.reflectivity,e.sheen?this.sheen=(this.sheen||new da).copy(e.sheen):this.sheen=null,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this}}ai.prototype.isMeshPhysicalMaterial=!0;class Rf extends ya{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new da(16777215),this.specular=new da(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new da(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Hb,this.normalScale=new ba(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Uc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this}}Rf.prototype.isMeshPhongMaterial=!0;class bi extends ya{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new da(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new da(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Hb,this.normalScale=new ba(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this}}bi.prototype.isMeshToonMaterial=!0;class ci extends ya{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Hb,this.normalScale=new ba(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this}}ci.prototype.isMeshNormalMaterial=!0;class di extends ya{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new da(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new da(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Uc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this}}di.prototype.isMeshLambertMaterial=!0;class ei extends ya{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new da(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Hb,this.normalScale=new ba(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this}}ei.prototype.isMeshMatcapMaterial=!0;class fi extends cc{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}fi.prototype.isLineDashedMaterial=!0;var f=Object.freeze({__proto__:null,ShadowMaterial:$h,SpriteMaterial:nf,RawShaderMaterial:_h,ShaderMaterial:lb,PointsMaterial:sf,MeshPhysicalMaterial:ai,MeshStandardMaterial:Qf,MeshPhongMaterial:Rf,MeshToonMaterial:bi,MeshNormalMaterial:ci,MeshLambertMaterial:di,MeshDepthMaterial:jf,MeshDistanceMaterial:kf,MeshBasicMaterial:yc,MeshMatcapMaterial:ei,LineDashedMaterial:fi,LineBasicMaterial:cc,Material:ya});const na={arraySlice:function(e,t,r){return na.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==r?r:e.length)):e.slice(t,r)},convertArray:function(e,t,r){return!e||!r&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){const t=e.length,r=new Array(t);for(let n=0;n!==t;++n)r[n]=n;return r.sort(function(t,r){return e[t]-e[r]}),r},sortedArray:function(e,t,r){const n=e.length,i=new e.constructor(n);for(let a=0,o=0;o!==n;++a){const n=r[a]*t;for(let r=0;r!==t;++r)i[o++]=e[n+r]}return i},flattenJSON:function(e,t,r,n){let i=1,a=e[0];for(;void 0!==a&&void 0===a[n];)a=e[i++];if(void 0===a)return;let o=a[n];if(void 0!==o)if(Array.isArray(o))do{void 0!==(o=a[n])&&(t.push(a.time),r.push.apply(r,o)),a=e[i++]}while(void 0!==a);else if(void 0!==o.toArray)do{void 0!==(o=a[n])&&(t.push(a.time),o.toArray(r,r.length)),a=e[i++]}while(void 0!==a);else do{void 0!==(o=a[n])&&(t.push(a.time),r.push(o)),a=e[i++]}while(void 0!==a)},subclip:function(e,t,r,n,i=30){const a=e.clone();a.name=t;const o=[];for(let $=0;$<a.tracks.length;++$){const e=a.tracks[$],t=e.getValueSize(),s=[],l=[];for(let a=0;a<e.times.length;++a){const o=e.times[a]*i;if(!(o<r||o>=n)){s.push(e.times[a]);for(let r=0;r<t;++r)l.push(e.values[a*t+r])}}0!==s.length&&(e.times=na.convertArray(s,e.times.constructor),e.values=na.convertArray(l,e.values.constructor),o.push(e))}a.tracks=o;let s=1/0;for(let $=0;$<a.tracks.length;++$)s>a.tracks[$].times[0]&&(s=a.tracks[$].times[0]);for(let $=0;$<a.tracks.length;++$)a.tracks[$].shift(-1*s);return a.resetDuration(),a},makeClipAdditive:function(e,t=0,r=e,n=30){n<=0&&(n=30);const i=r.tracks.length,a=t/n;for(let o=0;o<i;++o){const t=r.tracks[o],n=t.ValueTypeName;if("bool"===n||"string"===n)continue;const i=e.tracks.find(function(e){return e.name===t.name&&e.ValueTypeName===n});if(void 0===i)continue;let s=0;const $=t.getValueSize();t.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(s=$/3);let l=0;const c=i.getValueSize();i.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(l=c/3);const p=t.times.length-1;let h;if(a<=t.times[0]){const e=s,r=$-s;h=na.arraySlice(t.values,e,r)}else if(a>=t.times[p]){const e=p*$+s,r=e+$-s;h=na.arraySlice(t.values,e,r)}else{const e=t.createInterpolant(),r=s,n=$-s;e.evaluate(a),h=na.arraySlice(e.resultBuffer,r,n)}if("quaternion"===n){new ta().fromArray(h).normalize().conjugate().toArray(h)}const u=i.times.length;for(let e=0;e<u;++e){const t=e*c+l;if("quaternion"===n)ta.multiplyQuaternionsFlat(i.values,t,h,0,i.values,t);else{const e=c-2*l;for(let r=0;r<e;++r)i.values[t+r]-=h[r]}}}return e.blendMode=wg,e}};class qb{constructor(e,t,r,n){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new t.constructor(r),this.sampleValues=t,this.valueSize=r,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let r=this._cachedIndex,n=t[r],i=t[r-1];e:{t:{let a;r:{n:if(!(e<n)){for(let a=r+2;;){if(void 0===n){if(e<i)break n;return r=t.length,this._cachedIndex=r,this.afterEnd_(r-1,e,i)}if(r===a)break;if(i=n,e<(n=t[++r]))break t}a=t.length;break r}if(e>=i)break e;{const o=t[1];e<o&&(r=2,i=o);for(let a=r-2;;){if(void 0===i)return this._cachedIndex=0,this.beforeStart_(0,e,n);if(r===a)break;if(n=i,e>=(i=t[--r-1]))break t}a=r,r=0}}for(;r<a;){const n=r+a>>>1;e<t[n]?a=n:r=n+1}if(n=t[r],void 0===(i=t[r-1]))return this._cachedIndex=0,this.beforeStart_(0,e,n);if(void 0===n)return r=t.length,this._cachedIndex=r,this.afterEnd_(r-1,i,e)}this._cachedIndex=r,this.intervalChanged_(r,i,n)}return this.interpolate_(r,i,e,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,r=this.sampleValues,n=this.valueSize,i=e*n;for(let a=0;a!==n;++a)t[a]=r[i+a];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}qb.prototype.beforeStart_=qb.prototype.copySampleValue_,qb.prototype.afterEnd_=qb.prototype.copySampleValue_;class Tp extends qb{constructor(e,t,r,n){super(e,t,r,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Fb,endingEnd:Fb}}intervalChanged_(e,t,r){const n=this.parameterPositions;let i=e-2,a=e+1,o=n[i],s=n[a];if(void 0===o)switch(this.getSettings_().endingStart){case Gb:i=e,o=2*t-r;break;case _c:o=t+n[i=n.length-2]-n[i+1];break;default:i=e,o=r;}if(void 0===s)switch(this.getSettings_().endingEnd){case Gb:a=e,s=2*r-t;break;case _c:a=1,s=r+n[1]-n[0];break;default:a=e-1,s=t;}const $=.5*(r-t),l=this.valueSize;this._weightPrev=$/(t-o),this._weightNext=$/(s-r),this._offsetPrev=i*l,this._offsetNext=a*l}interpolate_(e,t,r,n){const i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,$=s-o,l=this._offsetPrev,c=this._offsetNext,p=this._weightPrev,h=this._weightNext,u=(r-t)/(n-t),g=u*u,d=g*u,m=-p*d+2*p*g-p*u,f=(1+p)*d+(-1.5-2*p)*g+(-.5+p)*u+1,x=(-1-h)*d+(1.5+h)*g+.5*u,v=h*d-h*g;for(let B=0;B!==o;++B)i[B]=m*a[l+B]+f*a[$+B]+x*a[s+B]+v*a[c+B];return i}}class gi extends qb{constructor(e,t,r,n){super(e,t,r,n)}interpolate_(e,t,r,n){const i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,$=s-o,l=(r-t)/(n-t),c=1-l;for(let p=0;p!==o;++p)i[p]=a[$+p]*c+a[s+p]*l;return i}}class Up extends qb{constructor(e,t,r,n){super(e,t,r,n)}interpolate_(e){return this.copySampleValue_(e-1)}}class Ua{constructor(e,t,r,n){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=na.convertArray(t,this.TimeBufferType),this.values=na.convertArray(r,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let r;if(t.toJSON!==this.toJSON)r=t.toJSON(e);else{r={name:e.name,times:na.convertArray(e.times,Array),values:na.convertArray(e.values,Array)};const t=e.getInterpolation();t!==e.DefaultInterpolation&&(r.interpolation=t)}return r.type=e.ValueTypeName,r}InterpolantFactoryMethodDiscrete(e){return new Up(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new gi(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Tp(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Zc:t=this.InterpolantFactoryMethodDiscrete;break;case $c:t=this.InterpolantFactoryMethodLinear;break;case ze:t=this.InterpolantFactoryMethodSmooth;}if(void 0===t){const t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(t);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Zc;case this.InterpolantFactoryMethodLinear:return $c;case this.InterpolantFactoryMethodSmooth:return ze;}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){const t=this.times;for(let r=0,n=t.length;r!==n;++r)t[r]+=e}return this}scale(e){if(1!==e){const t=this.times;for(let r=0,n=t.length;r!==n;++r)t[r]*=e}return this}trim(e,t){const r=this.times,n=r.length;let i=0,a=n-1;for(;i!==n&&r[i]<e;)++i;for(;-1!==a&&r[a]>t;)--a;if(++a,0!==i||a!==n){i>=a&&(i=(a=Math.max(a,1))-1);const e=this.getValueSize();this.times=na.arraySlice(r,i,a),this.values=na.arraySlice(this.values,i*e,a*e)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const r=this.times,n=this.values,i=r.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let o=0;o!==i;o++){const t=r[o];if("number"==typeof t&&isNaN(t)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,t),e=!1;break}if(null!==a&&a>t){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,t,a),e=!1;break}a=t}if(void 0!==n&&na.isTypedArray(n))for(let o=0,s=n.length;o!==s;++o){const t=n[o];if(isNaN(t)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,t),e=!1;break}}return e}optimize(){const e=na.arraySlice(this.times),t=na.arraySlice(this.values),r=this.getValueSize(),n=this.getInterpolation()===ze,i=e.length-1;let a=1;for(let o=1;o<i;++o){let i=!1;const s=e[o];if(s!==e[o+1]&&(1!==o||s!==e[0]))if(n)i=!0;else{const e=o*r,n=e-r,a=e+r;for(let o=0;o!==r;++o){const r=t[e+o];if(r!==t[n+o]||r!==t[a+o]){i=!0;break}}}if(i){if(o!==a){e[a]=e[o];const n=o*r,i=a*r;for(let e=0;e!==r;++e)t[i+e]=t[n+e]}++a}}if(i>0){e[a]=e[i];for(let e=i*r,n=a*r,o=0;o!==r;++o)t[n+o]=t[e+o];++a}return a!==e.length?(this.times=na.arraySlice(e,0,a),this.values=na.arraySlice(t,0,a*r)):(this.times=e,this.values=t),this}clone(){const e=na.arraySlice(this.times,0),t=na.arraySlice(this.values,0),r=new(0,this.constructor)(this.name,e,t);return r.createInterpolant=this.createInterpolant,r}}Ua.prototype.TimeBufferType=Float32Array,Ua.prototype.ValueBufferType=Float32Array,Ua.prototype.DefaultInterpolation=$c;class ec extends Ua{}ec.prototype.ValueTypeName="bool",ec.prototype.ValueBufferType=Array,ec.prototype.DefaultInterpolation=Zc,ec.prototype.InterpolantFactoryMethodLinear=void 0,ec.prototype.InterpolantFactoryMethodSmooth=void 0;class hi extends Ua{}hi.prototype.ValueTypeName="color";class Qd extends Ua{}Qd.prototype.ValueTypeName="number";class Vp extends qb{constructor(e,t,r,n){super(e,t,r,n)}interpolate_(e,t,r,n){const i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=(r-t)/(n-t);let $=e*o;for(let l=$+o;$!==l;$+=4)ta.slerpFlat(i,0,a,$-o,a,$,s);return i}}class Oc extends Ua{InterpolantFactoryMethodLinear(e){return new Vp(this.times,this.values,this.getValueSize(),e)}}Oc.prototype.ValueTypeName="quaternion",Oc.prototype.DefaultInterpolation=$c,Oc.prototype.InterpolantFactoryMethodSmooth=void 0;class fc extends Ua{}fc.prototype.ValueTypeName="string",fc.prototype.ValueBufferType=Array,fc.prototype.DefaultInterpolation=Zc,fc.prototype.InterpolantFactoryMethodLinear=void 0,fc.prototype.InterpolantFactoryMethodSmooth=void 0;class Rd extends Ua{}Rd.prototype.ValueTypeName="vector";class ii{constructor(e,t=-1,r,n=Ae){this.name=e,this.tracks=r,this.duration=t,this.blendMode=n,this.uuid=Ga(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],r=e.tracks,n=1/(e.fps||1);for(let a=0,o=r.length;a!==o;++a)t.push(Xp(r[a]).scale(n));const i=new this(e.name,e.duration,t,e.blendMode);return i.uuid=e.uuid,i}static toJSON(e){const t=[],r=e.tracks,n={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let i=0,a=r.length;i!==a;++i)t.push(Ua.toJSON(r[i]));return n}static CreateFromMorphTargetSequence(e,t,r,n){const i=t.length,a=[];for(let o=0;o<i;o++){let e=[],s=[];e.push((o+i-1)%i,o,(o+1)%i),s.push(0,1,0);const $=na.getKeyframeOrder(e);e=na.sortedArray(e,1,$),s=na.sortedArray(s,1,$),n||0!==e[0]||(e.push(i),s.push(s[0])),a.push(new Qd(".morphTargetInfluences["+t[o].name+"]",e,s).scale(1/r))}return new this(e,-1,a)}static findByName(e,t){let r=e;if(!Array.isArray(e)){const t=e;r=t.geometry&&t.geometry.animations||t.animations}for(let n=0;n<r.length;n++)if(r[n].name===t)return r[n];return null}static CreateClipsFromMorphTargetSequences(e,t,r){const n={},i=/^([\w-]*?)([\d]+)$/;for(let o=0,s=e.length;o<s;o++){const t=e[o],r=t.name.match(i);if(r&&r.length>1){const e=r[1];let i=n[e];i||(n[e]=i=[]),i.push(t)}}const a=[];for(const o in n)a.push(this.CreateFromMorphTargetSequence(o,n[o],t,r));return a}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const r=function(e,t,r,n,i){if(0!==r.length){const a=[],o=[];na.flattenJSON(r,a,o,n),0!==a.length&&i.push(new e(t,a,o))}},n=[],i=e.name||"default",a=e.fps||30,o=e.blendMode;let s=e.length||-1;const $=e.hierarchy||[];for(let l=0;l<$.length;l++){const e=$[l].keys;if(e&&0!==e.length)if(e[0].morphTargets){const t={};let r;for(r=0;r<e.length;r++)if(e[r].morphTargets)for(let n=0;n<e[r].morphTargets.length;n++)t[e[r].morphTargets[n]]=-1;for(const i in t){const t=[],a=[];for(let n=0;n!==e[r].morphTargets.length;++n){const n=e[r];t.push(n.time),a.push(n.morphTarget===i?1:0)}n.push(new Qd(".morphTargetInfluence["+i+"]",t,a))}s=t.length*(a||1)}else{const i=".bones["+t[l].name+"]";r(Rd,i+".position",e,"pos",n),r(Oc,i+".quaternion",e,"rot",n),r(Rd,i+".scale",e,"scl",n)}}return 0===n.length?null:new this(i,s,n,o)}resetDuration(){let e=0;for(let t=0,r=this.tracks.length;t!==r;++t){const r=this.tracks[t];e=Math.max(e,r.times[r.times.length-1])}return this.duration=e,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Wp(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Qd;case"vector":case"vector2":case"vector3":case"vector4":return Rd;case"color":return hi;case"quaternion":return Oc;case"bool":case"boolean":return ec;case"string":return fc;}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}function Xp(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=Wp(e.type);if(void 0===e.times){const t=[],r=[];na.flattenJSON(e.keys,t,r,"value"),e.times=t,e.values=r}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}const gc={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class Yp{constructor(e,t,r){const n=this;let i=!1,a=0,o=0,s=void 0;const $=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=r,this.itemStart=function(e){o++,!1===i&&void 0!==n.onStart&&n.onStart(e,a,o),i=!0},this.itemEnd=function(e){a++,void 0!==n.onProgress&&n.onProgress(e,a,o),a===o&&(i=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(e){void 0!==n.onError&&n.onError(e)},this.resolveURL=function(e){return s?s(e):e},this.setURLModifier=function(e){return s=e,this},this.addHandler=function(e,t){return $.push(e,t),this},this.removeHandler=function(e){const t=$.indexOf(e);return-1!==t&&$.splice(t,2),this},this.getHandler=function(e){for(let t=0,r=$.length;t<r;t+=2){const r=$[t],n=$[t+1];if(r.global&&(r.lastIndex=0),r.test(e))return n}return null}}}const Zp=new Yp;class rb{constructor(e){this.manager=void 0!==e?e:Zp,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const r=this;return new Promise(function(n,i){r.load(e,n,t,i)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const Sa={};class $p extends rb{constructor(e){super(e)}load(e,t,r,n){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const i=this,a=gc.get(e);if(void 0!==a)return i.manager.itemStart(e),setTimeout(function(){t&&t(a),i.manager.itemEnd(e)},0),a;if(void 0!==Sa[e])return void Sa[e].push({onLoad:t,onProgress:r,onError:n});const o=e.match(/^data:(.*?)(;base64)?,(.*)$/);let s;if(o){const r=o[1],a=!!o[2];let s=o[3];s=decodeURIComponent(s),a&&(s=atob(s));try{let a;const o=(this.responseType||"").toLowerCase();switch(o){case"arraybuffer":case"blob":const e=new Uint8Array(s.length);for(let r=0;r<s.length;r++)e[r]=s.charCodeAt(r);a="blob"===o?new Blob([e.buffer],{type:r}):e.buffer;break;case"document":const t=new DOMParser;a=t.parseFromString(s,r);break;case"json":a=JSON.parse(s);break;default:a=s;}setTimeout(function(){t&&t(a),i.manager.itemEnd(e)},0)}catch($){setTimeout(function(){n&&n($),i.manager.itemError(e),i.manager.itemEnd(e)},0)}}else{Sa[e]=[],Sa[e].push({onLoad:t,onProgress:r,onError:n}),(s=new XMLHttpRequest).open("GET",e,!0),s.addEventListener("load",function(t){const r=this.response,n=Sa[e];if(delete Sa[e],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),gc.add(e,r);for(let e=0,t=n.length;e<t;e++){const t=n[e];t.onLoad&&t.onLoad(r)}i.manager.itemEnd(e)}else{for(let e=0,r=n.length;e<r;e++){const r=n[e];r.onError&&r.onError(t)}i.manager.itemError(e),i.manager.itemEnd(e)}},!1),s.addEventListener("progress",function(t){const r=Sa[e];for(let e=0,n=r.length;e<n;e++){const n=r[e];n.onProgress&&n.onProgress(t)}},!1),s.addEventListener("error",function(t){const r=Sa[e];delete Sa[e];for(let e=0,n=r.length;e<n;e++){const n=r[e];n.onError&&n.onError(t)}i.manager.itemError(e),i.manager.itemEnd(e)},!1),s.addEventListener("abort",function(t){const r=Sa[e];delete Sa[e];for(let e=0,n=r.length;e<n;e++){const n=r[e];n.onError&&n.onError(t)}i.manager.itemError(e),i.manager.itemEnd(e)},!1),void 0!==this.responseType&&(s.responseType=this.responseType),void 0!==this.withCredentials&&(s.withCredentials=this.withCredentials),s.overrideMimeType&&s.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const e in this.requestHeader)s.setRequestHeader(e,this.requestHeader[e]);s.send(null)}return i.manager.itemStart(e),s}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class ji extends rb{constructor(e){super(e)}load(e,t,r,n){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const i=this,a=gc.get(e);if(void 0!==a)return i.manager.itemStart(e),setTimeout(function(){t&&t(a),i.manager.itemEnd(e)},0),a;const o=document.createElementNS("http://www.w3.org/1999/xhtml","img");function s(){o.removeEventListener("load",s,!1),o.removeEventListener("error",$,!1),gc.add(e,this),t&&t(this),i.manager.itemEnd(e)}function $(t){o.removeEventListener("load",s,!1),o.removeEventListener("error",$,!1),n&&n(t),i.manager.itemError(e),i.manager.itemEnd(e)}return o.addEventListener("load",s,!1),o.addEventListener("error",$,!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),i.manager.itemStart(e),o.src=e,o}}class _p extends rb{constructor(e){super(e)}load(e,t,r,n){const i=new sd,a=new ji(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let o=0;function s(r){a.load(e[r],function(e){i.images[r]=e,6===++o&&(i.needsUpdate=!0,t&&t(i))},void 0,n)}for(let $=0;$<e.length;++$)s($);return i}}class Sd extends rb{constructor(e){super(e)}load(e,t,r,n){const i=new Aa,a=new ji(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(r){i.image=r;const n=e.search(/\.jpe?g($|\?)/i)>0||0===e.search(/^data\:image\/jpeg/);i.format=n?tb:Oa,i.needsUpdate=!0,void 0!==t&&t(i)},r,n),i}}class aq extends Na{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Kd(t,e))}getPoint(e){const t=e*this.getLength(),r=this.getCurveLengths();let n=0;for(;n<r.length;){if(r[n]>=t){const e=r[n]-t,i=this.curves[n],a=i.getLength(),o=0===a?0:1-e/a;return i.getPointAt(o)}n++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let r=0,n=this.curves.length;r<n;r++)t+=this.curves[r].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let r=0;r<=e;r++)t.push(this.getPoint(r/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let r;for(let n=0,i=this.curves;n<i.length;n++){const a=i[n],o=a&&a.isEllipseCurve?2*e:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?e*a.points.length:e,s=a.getPoints(o);for(let e=0;e<s.length;e++){const n=s[e];r&&r.equals(n)||(t.push(n),r=n)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,r=e.curves.length;t<r;t++){const r=e.curves[t];this.curves.push(r.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,r=this.curves.length;t<r;t++){const r=this.curves[t];e.curves.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,r=e.curves.length;t<r;t++){const r=e.curves[t];this.curves.push(new Ff[r.type]().fromJSON(r))}return this}}class Td extends aq{constructor(e){super(),this.type="Path",this.currentPoint=new ba,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,r=e.length;t<r;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const r=new Kd(this.currentPoint.clone(),new ba(e,t));return this.curves.push(r),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,r,n){const i=new Df(this.currentPoint.clone(),new ba(e,t),new ba(r,n));return this.curves.push(i),this.currentPoint.set(r,n),this}bezierCurveTo(e,t,r,n,i,a){const o=new Cf(this.currentPoint.clone(),new ba(e,t),new ba(r,n),new ba(i,a));return this.curves.push(o),this.currentPoint.set(i,a),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),r=new Ef(t);return this.curves.push(r),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,r,n,i,a){const o=this.currentPoint.x,s=this.currentPoint.y;return this.absarc(e+o,t+s,r,n,i,a),this}absarc(e,t,r,n,i,a){return this.absellipse(e,t,r,r,n,i,a),this}ellipse(e,t,r,n,i,a,o,s){const $=this.currentPoint.x,l=this.currentPoint.y;return this.absellipse(e+$,t+l,r,n,i,a,o,s),this}absellipse(e,t,r,n,i,a,o,s){const $=new Id(e,t,r,n,i,a,o,s);if(this.curves.length>0){const e=$.getPoint(0);e.equals(this.currentPoint)||this.lineTo(e.x,e.y)}this.curves.push($);const l=$.getPoint(1);return this.currentPoint.copy(l),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class hc extends Td{constructor(e){super(e),this.uuid=Ga(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let r=0,n=this.holes.length;r<n;r++)t[r]=this.holes[r].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,r=e.holes.length;t<r;t++){const r=e.holes[t];this.holes.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,r=this.holes.length;t<r;t++){const r=this.holes[t];e.holes.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,r=e.holes.length;t<r;t++){const r=e.holes[t];this.holes.push(new Td().fromJSON(r))}return this}}class Va extends ja{constructor(e,t=1){super(),this.type="Light",this.color=new da(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}Va.prototype.isLight=!0;class bq extends Va{constructor(e,t,r){super(e,r),this.type="HemisphereLight",this.position.copy(ja.DefaultUp),this.updateMatrix(),this.groundColor=new da(t)}copy(e){return Va.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}bq.prototype.isHemisphereLight=!0;const ki=new ea,li=new aa,mi=new aa;class Sf{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new ba(512,512),this.map=null,this.mapPass=null,this.matrix=new ea,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new ud,this._frameExtents=new ba(1,1),this._viewportCount=1,this._viewports=[new la(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,r=this.matrix;li.setFromMatrixPosition(e.matrixWorld),t.position.copy(li),mi.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(mi),t.updateMatrixWorld(),ki.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ki),r.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),r.multiply(t.projectionMatrix),r.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class ni extends Sf{constructor(){super(new Ea(50,1,.5,500)),this.focus=1}updateMatrices(e){const t=this.camera,r=2*rc*e.angle*this.focus,n=this.mapSize.width/this.mapSize.height,i=e.distance||t.far;r===t.fov&&n===t.aspect&&i===t.far||(t.fov=r,t.aspect=n,t.far=i,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}ni.prototype.isSpotLightShadow=!0;class cq extends Va{constructor(e,t,r=0,n=Math.PI/3,i=0,a=1){super(e,t),this.type="SpotLight",this.position.copy(ja.DefaultUp),this.updateMatrix(),this.target=new ja,this.distance=r,this.angle=n,this.penumbra=i,this.decay=a,this.shadow=new ni}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}cq.prototype.isSpotLight=!0;const oi=new ea,Pc=new aa,Tf=new aa;class pi extends Sf{constructor(){super(new Ea(90,1,.5,500)),this._frameExtents=new ba(4,2),this._viewportCount=6,this._viewports=[new la(2,1,1,1),new la(0,1,1,1),new la(3,1,1,1),new la(1,1,1,1),new la(3,0,1,1),new la(1,0,1,1)],this._cubeDirections=[new aa(1,0,0),new aa(-1,0,0),new aa(0,0,1),new aa(0,0,-1),new aa(0,1,0),new aa(0,-1,0)],this._cubeUps=[new aa(0,1,0),new aa(0,1,0),new aa(0,1,0),new aa(0,1,0),new aa(0,0,1),new aa(0,0,-1)]}updateMatrices(e,t=0){const r=this.camera,n=this.matrix,i=e.distance||r.far;i!==r.far&&(r.far=i,r.updateProjectionMatrix()),Pc.setFromMatrixPosition(e.matrixWorld),r.position.copy(Pc),Tf.copy(r.position),Tf.add(this._cubeDirections[t]),r.up.copy(this._cubeUps[t]),r.lookAt(Tf),r.updateMatrixWorld(),n.makeTranslation(-Pc.x,-Pc.y,-Pc.z),oi.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),this._frustum.setFromProjectionMatrix(oi)}}pi.prototype.isPointLightShadow=!0;class qi extends Va{constructor(e,t,r=0,n=1){super(e,t),this.type="PointLight",this.distance=r,this.decay=n,this.shadow=new pi}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}qi.prototype.isPointLight=!0;class Uf extends rd{constructor(e=-1,t=1,r=1,n=-1,i=.1,a=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=r,this.bottom=n,this.near=i,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,r,n,i,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=n,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),r=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let i=r-e,a=r+e,o=n+t,s=n-t;if(null!==this.view&&this.view.enabled){const e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;a=(i+=e*this.view.offsetX)+e*this.view.width,s=(o-=t*this.view.offsetY)-t*this.view.height}this.projectionMatrix.makeOrthographic(i,a,o,s,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}Uf.prototype.isOrthographicCamera=!0;class ri extends Sf{constructor(){super(new Uf(-5,5,5,-5,.5,500))}}ri.prototype.isDirectionalLightShadow=!0;class dq extends Va{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(ja.DefaultUp),this.updateMatrix(),this.target=new ja,this.shadow=new ri}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}dq.prototype.isDirectionalLight=!0;class eq extends Va{constructor(e,t){super(e,t),this.type="AmbientLight"}}eq.prototype.isAmbientLight=!0;class fq extends Va{constructor(e,t,r=10,n=10){super(e,t),this.type="RectAreaLight",this.width=r,this.height=n}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}fq.prototype.isRectAreaLight=!0;class si{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new aa)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const r=e.x,n=e.y,i=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*n),t.addScaledVector(a[2],.488603*i),t.addScaledVector(a[3],.488603*r),t.addScaledVector(a[4],r*n*1.092548),t.addScaledVector(a[5],n*i*1.092548),t.addScaledVector(a[6],.315392*(3*i*i-1)),t.addScaledVector(a[7],r*i*1.092548),t.addScaledVector(a[8],.546274*(r*r-n*n)),t}getIrradianceAt(e,t){const r=e.x,n=e.y,i=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],1.023328*n),t.addScaledVector(a[2],1.023328*i),t.addScaledVector(a[3],1.023328*r),t.addScaledVector(a[4],.858086*r*n),t.addScaledVector(a[5],.858086*n*i),t.addScaledVector(a[6],.743125*i*i-.247708),t.addScaledVector(a[7],.858086*r*i),t.addScaledVector(a[8],.429043*(r*r-n*n)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let r=0;r<9;r++)this.coefficients[r].addScaledVector(e.coefficients[r],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let r=0;r<9;r++)this.coefficients[r].lerp(e.coefficients[r],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const r=this.coefficients;for(let n=0;n<9;n++)r[n].fromArray(e,t+3*n);return this}toArray(e=[],t=0){const r=this.coefficients;for(let n=0;n<9;n++)r[n].toArray(e,t+3*n);return e}static getBasisAt(e,t){const r=e.x,n=e.y,i=e.z;t[0]=.282095,t[1]=.488603*n,t[2]=.488603*i,t[3]=.488603*r,t[4]=1.092548*r*n,t[5]=1.092548*n*i,t[6]=.315392*(3*i*i-1),t[7]=1.092548*r*i,t[8]=.546274*(r*r-n*n)}}si.prototype.isSphericalHarmonics3=!0;class Vf extends Va{constructor(e=new si,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}Vf.prototype.isLightProbe=!0;class gq{static decodeText(e){if("undefined"!=typeof TextDecoder)return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch(r){return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return-1===t?"./":e.substr(0,t+1)}}class hq extends ga{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}hq.prototype.isInstancedBufferGeometry=!0;class iq extends pa{constructor(e,t,r,n=1){"number"==typeof r&&(n=r,r=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,r),this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}iq.prototype.isInstancedBufferAttribute=!0;class jq extends rb{constructor(e){super(e),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,r,n){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const i=this,a=gc.get(e);if(void 0!==a)return i.manager.itemStart(e),setTimeout(function(){t&&t(a),i.manager.itemEnd(e)},0),a;const o={};o.credentials="anonymous"===this.crossOrigin?"same-origin":"include",o.headers=this.requestHeader,fetch(e,o).then(function(e){return e.blob()}).then(function(e){return createImageBitmap(e,Object.assign(i.options,{colorSpaceConversion:"none"}))}).then(function(r){gc.add(e,r),t&&t(r),i.manager.itemEnd(e)}).catch(function(t){n&&n(t),i.manager.itemError(e),i.manager.itemEnd(e)}),i.manager.itemStart(e)}}jq.prototype.isImageBitmapLoader=!0;class kq{constructor(){this.type="ShapePath",this.color=new da,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Td,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,r,n){return this.currentPath.quadraticCurveTo(e,t,r,n),this}bezierCurveTo(e,t,r,n,i,a){return this.currentPath.bezierCurveTo(e,t,r,n,i,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e,t){function r(e){const t=[];for(let r=0,n=e.length;r<n;r++){const n=e[r],i=new hc;i.curves=n.curves,t.push(i)}return t}function n(e,t){const r=t.length;let n=!1;for(let i=r-1,a=0;a<r;i=a++){let r=t[i],o=t[a],s=o.x-r.x,$=o.y-r.y;if(Math.abs($)>Number.EPSILON){if($<0&&(r=t[a],s=-s,o=t[i],$=-$),e.y<r.y||e.y>o.y)continue;if(e.y===r.y){if(e.x===r.x)return!0}else{const t=$*(e.x-r.x)-s*(e.y-r.y);if(0===t)return!0;if(t<0)continue;n=!n}}else{if(e.y!==r.y)continue;if(o.x<=e.x&&e.x<=r.x||r.x<=e.x&&e.x<=o.x)return!0}}return n}const i=ob.isClockWise,a=this.subPaths;if(0===a.length)return[];if(!0===t)return r(a);let o,s,$;const l=[];if(1===a.length)return s=a[0],($=new hc).curves=s.curves,l.push($),l;let c=!i(a[0].getPoints());c=e?!c:c;const p=[],h=[];let u,g,d=[],m=0;h[m]=void 0,d[m]=[];for(let f=0,x=a.length;f<x;f++)o=i(u=(s=a[f]).getPoints()),(o=e?!o:o)?(!c&&h[m]&&m++,h[m]={s:new hc,p:u},h[m].s.curves=s.curves,c&&m++,d[m]=[]):d[m].push({h:s,p:u[0]});if(!h[0])return r(a);if(h.length>1){let e=!1;const t=[];for(let r=0,n=h.length;r<n;r++)p[r]=[];for(let r=0,i=h.length;r<i;r++){const i=d[r];for(let a=0;a<i.length;a++){const o=i[a];let s=!0;for(let i=0;i<h.length;i++)n(o.p,h[i].p)&&(r!==i&&t.push({froms:r,tos:i,hole:a}),s?(s=!1,p[i].push(o)):e=!0);s&&p[r].push(o)}}t.length>0&&(e||(d=p))}for(let f=0,x=h.length;f<x;f++){$=h[f].s,l.push($);for(let e=0,t=(g=d[f]).length;e<t;e++)$.holes.push(g[e].h)}return l}}class lq{constructor(e){this.type="Font",this.data=e}generateShapes(e,t=100){const r=[],n=mq(e,t,this.data);for(let i=0,a=n.length;i<a;i++)Array.prototype.push.apply(r,n[i].toShapes());return r}}function mq(e,t,r){const n=Array.from(e),i=t/r.resolution,a=(r.boundingBox.yMax-r.boundingBox.yMin+r.underlineThickness)*i,o=[];let s=0,$=0;for(let l=0;l<n.length;l++){const e=n[l];if("\n"===e)s=0,$-=a;else{const t=nq(e,i,s,$,r);s+=t.offsetX,o.push(t.path)}}return o}function nq(e,t,r,n,i){const a=i.glyphs[e]||i.glyphs["?"];if(!a)return void console.error("THREE.Font: character \""+e+"\" does not exists in font family "+i.familyName+".");const o=new kq;let s,$,l,c,p,h,u,g;if(a.o){const e=a._cachedOutline||(a._cachedOutline=a.o.split(" "));for(let i=0,a=e.length;i<a;){switch(e[i++]){case"m":s=e[i++]*t+r,$=e[i++]*t+n,o.moveTo(s,$);break;case"l":s=e[i++]*t+r,$=e[i++]*t+n,o.lineTo(s,$);break;case"q":l=e[i++]*t+r,c=e[i++]*t+n,p=e[i++]*t+r,h=e[i++]*t+n,o.quadraticCurveTo(p,h,l,c);break;case"b":l=e[i++]*t+r,c=e[i++]*t+n,p=e[i++]*t+r,h=e[i++]*t+n,u=e[i++]*t+r,g=e[i++]*t+n,o.bezierCurveTo(p,h,u,g,l,c);}}}return{offsetX:a.ha*t,path:o}}lq.prototype.isFont=!0;let ti;const oq={getContext:function(){return void 0===ti&&(ti=new(window.AudioContext||window.webkitAudioContext)),ti},setContext:function(e){ti=e}};class pq extends rb{constructor(e){super(e)}load(e,t,r,n){const i=this,a=new $p(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(r){try{const o=r.slice(0);oq.getContext().decodeAudioData(o,function(e){t(e)})}catch(a){n?n(a):console.error(a),i.manager.itemError(e)}},r,n)}}class qq extends Vf{constructor(e,t,r=1){super(void 0,r);const n=new da().set(e),i=new da().set(t),a=new aa(n.r,n.g,n.b),o=new aa(i.r,i.g,i.b),s=Math.sqrt(Math.PI),$=s*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(o).multiplyScalar(s),this.sh.coefficients[1].copy(a).sub(o).multiplyScalar($)}}qq.prototype.isHemisphereLightProbe=!0;class rq extends Vf{constructor(e,t=1){super(void 0,t);const r=new da().set(e);this.sh.coefficients[0].set(r.r,r.g,r.b).multiplyScalar(2*Math.sqrt(Math.PI))}}rq.prototype.isAmbientLightProbe=!0;const g=new ea,h=new ea;class sq{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=ui(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=ui();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function ui(){return("undefined"==typeof performance?Date:performance).now()}const i=new aa,j=new ta,k=new aa,l=new aa;class tq extends ja{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const m=new aa,n=new ta,o=new aa,p=new aa;class uq{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let r=0;r<t.length;r++)e+=t[r];return e/t.length}}class vq{constructor(e,t,r){let n,i,a;switch(this.binding=e,this.valueSize=r,t){case"quaternion":n=this._slerp,i=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*r),this._workIndex=5;break;case"string":case"bool":n=this._select,i=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(5*r);break;default:n=this._lerp,i=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*r);}this._mixBufferRegion=n,this._mixBufferRegionAdditive=i,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const r=this.buffer,n=this.valueSize,i=e*n+n;let a=this.cumulativeWeight;if(0===a){for(let e=0;e!==n;++e)r[i+e]=r[e];a=t}else{const e=t/(a+=t);this._mixBufferRegion(r,i,0,e,n)}this.cumulativeWeight=a}accumulateAdditive(e){const t=this.buffer,r=this.valueSize,n=r*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,n,0,e,r),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,r=this.buffer,n=e*t+t,i=this.cumulativeWeight,a=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,i<1){const e=t*this._origIndex;this._mixBufferRegion(r,n,e,1-i,t)}a>0&&this._mixBufferRegionAdditive(r,n,this._addIndex*t,1,t);for(let s=t,$=t+t;s!==$;++s)if(r[s]!==r[s+t]){o.setValue(r,n);break}}saveOriginalState(){const e=this.binding,t=this.buffer,r=this.valueSize,n=r*this._origIndex;e.getValue(t,n);for(let i=r,a=n;i!==a;++i)t[i]=t[n+i%r];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=3*this.valueSize;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let r=e;r<t;r++)this.buffer[r]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let r=0;r<this.valueSize;r++)this.buffer[t+r]=this.buffer[e+r]}_select(e,t,r,n,i){if(n>=.5)for(let a=0;a!==i;++a)e[t+a]=e[r+a]}_slerp(e,t,r,n){ta.slerpFlat(e,t,e,t,e,r,n)}_slerpAdditive(e,t,r,n,i){const a=this._workIndex*i;ta.multiplyQuaternionsFlat(e,a,e,t,e,r),ta.slerpFlat(e,t,e,t,e,a,n)}_lerp(e,t,r,n,i){const a=1-n;for(let o=0;o!==i;++o){const i=t+o;e[i]=e[i]*a+e[r+o]*n}}_lerpAdditive(e,t,r,n,i){for(let a=0;a!==i;++a){const i=t+a;e[i]=e[i]+e[r+a]*n}}}const wq=new RegExp("[\\[\\]\\.:\\/]","g"),xq="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",yq=/((?:WC+[\/:])*)/.source.replace("WC","[^\\[\\]\\.:\\/]"),zq=/(WCOD+)?/.source.replace("WCOD",xq),Aq=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC","[^\\[\\]\\.:\\/]"),Bq=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC","[^\\[\\]\\.:\\/]"),Cq=new RegExp("^"+yq+zq+Aq+Bq+"$"),Dq=["material","materials","bones"];class Eq{constructor(e,t,r){const n=r||ia.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,n)}getValue(e,t){this.bind();const r=this._targetGroup.nCachedObjects_,n=this._bindings[r];void 0!==n&&n.getValue(e,t)}setValue(e,t){const r=this._bindings;for(let n=this._targetGroup.nCachedObjects_,i=r.length;n!==i;++n)r[n].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,r=e.length;t!==r;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,r=e.length;t!==r;++t)e[t].unbind()}}class ia{constructor(e,t,r){this.path=t,this.parsedPath=r||ia.parseTrackName(t),this.node=ia.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,r){return e&&e.isAnimationObjectGroup?new ia.Composite(e,t,r):new ia(e,t,r)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(wq,"")}static parseTrackName(e){const t=Cq.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const r={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},n=r.nodeName&&r.nodeName.lastIndexOf(".");if(void 0!==n&&-1!==n){const e=r.nodeName.substring(n+1);-1!==Dq.indexOf(e)&&(r.nodeName=r.nodeName.substring(0,n),r.objectName=e)}if(null===r.propertyName||0===r.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return r}static findNode(e,t){if(!t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){const r=e.skeleton.getBoneByName(t);if(void 0!==r)return r}if(e.children){const r=function(e){for(let n=0;n<e.length;n++){const i=e[n];if(i.name===t||i.uuid===t)return i;const a=r(i.children);if(a)return a}return null},n=r(e.children);if(n)return n}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.node[this.propertyName]}_getValue_array(e,t){const r=this.resolvedProperty;for(let n=0,i=r.length;n!==i;++n)e[t++]=r[n]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const r=this.resolvedProperty;for(let n=0,i=r.length;n!==i;++n)r[n]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const r=this.resolvedProperty;for(let n=0,i=r.length;n!==i;++n)r[n]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const r=this.resolvedProperty;for(let n=0,i=r.length;n!==i;++n)r[n]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,r=t.objectName,n=t.propertyName;let i=t.propertyIndex;if(e||(e=ia.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(r){let n=t.objectIndex;switch(r){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===n){n=t;break}break;default:if(void 0===e[r])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[r];}if(void 0!==n){if(void 0===e[n])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[n]}}const a=e[n];if(void 0===a){const r=t.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+r+"."+n+" but it wasn't found.",e)}let o=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?o=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(o=this.Versioning.MatrixWorldNeedsUpdate);let s=this.BindingType.Direct;if(void 0!==i){if("morphTargetInfluences"===n){if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!e.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==e.morphTargetDictionary[i]&&(i=e.morphTargetDictionary[i])}s=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=i}else void 0!==a.fromArray&&void 0!==a.toArray?(s=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(s=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=n;this.getValue=this.GetterByBindingType[s],this.setValue=this.SetterByBindingTypeAndVersioning[s][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}ia.Composite=Eq,ia.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},ia.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},ia.prototype.GetterByBindingType=[ia.prototype._getValue_direct,ia.prototype._getValue_array,ia.prototype._getValue_arrayElement,ia.prototype._getValue_toArray],ia.prototype.SetterByBindingTypeAndVersioning=[[ia.prototype._setValue_direct,ia.prototype._setValue_direct_setNeedsUpdate,ia.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[ia.prototype._setValue_array,ia.prototype._setValue_array_setNeedsUpdate,ia.prototype._setValue_array_setMatrixWorldNeedsUpdate],[ia.prototype._setValue_arrayElement,ia.prototype._setValue_arrayElement_setNeedsUpdate,ia.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[ia.prototype._setValue_fromArray,ia.prototype._setValue_fromArray_setNeedsUpdate,ia.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Fq{constructor(){this.uuid=Ga(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let r=0,n=arguments.length;r!==n;++r)e[arguments[r].uuid]=r;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,r=this._paths,n=this._parsedPaths,i=this._bindings,a=i.length;let o=void 0,s=e.length,$=this.nCachedObjects_;for(let l=0,c=arguments.length;l!==c;++l){const c=arguments[l],p=c.uuid;let h=t[p];if(void 0===h){h=s++,t[p]=h,e.push(c);for(let e=0,t=a;e!==t;++e)i[e].push(new ia(c,r[e],n[e]))}else if(h<$){o=e[h];const s=--$,l=e[s];t[l.uuid]=h,e[h]=l,t[p]=s,e[s]=c;for(let e=0,t=a;e!==t;++e){const t=i[e],a=t[s];let o=t[h];t[h]=a,void 0===o&&(o=new ia(c,r[e],n[e])),t[s]=o}}else e[h]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=$}remove(){const e=this._objects,t=this._indicesByUUID,r=this._bindings,n=r.length;let i=this.nCachedObjects_;for(let a=0,o=arguments.length;a!==o;++a){const o=arguments[a],s=o.uuid,$=t[s];if(void 0!==$&&$>=i){const a=i++,l=e[a];t[l.uuid]=$,e[$]=l,t[s]=a,e[a]=o;for(let e=0,t=n;e!==t;++e){const t=r[e],n=t[a],i=t[$];t[$]=n,t[a]=i}}}this.nCachedObjects_=i}uncache(){const e=this._objects,t=this._indicesByUUID,r=this._bindings,n=r.length;let i=this.nCachedObjects_,a=e.length;for(let o=0,s=arguments.length;o!==s;++o){const s=arguments[o].uuid,$=t[s];if(void 0!==$)if(delete t[s],$<i){const o=--i,s=e[o],l=--a,c=e[l];t[s.uuid]=$,e[$]=s,t[c.uuid]=o,e[o]=c,e.pop();for(let e=0,t=n;e!==t;++e){const t=r[e],n=t[o],i=t[l];t[$]=n,t[o]=i,t.pop()}}else{const i=--a,o=e[i];i>0&&(t[o.uuid]=$),e[$]=o,e.pop();for(let e=0,t=n;e!==t;++e){const t=r[e];t[$]=t[i],t.pop()}}}this.nCachedObjects_=i}subscribe_(e,t){const r=this._bindingsIndicesByPath;let n=r[e];const i=this._bindings;if(void 0!==n)return i[n];const a=this._paths,o=this._parsedPaths,s=this._objects,$=s.length,l=this.nCachedObjects_,c=new Array($);n=i.length,r[e]=n,a.push(e),o.push(t),i.push(c);for(let p=l,h=s.length;p!==h;++p){const r=s[p];c[p]=new ia(r,e,t)}return c}unsubscribe_(e){const t=this._bindingsIndicesByPath,r=t[e];if(void 0!==r){const n=this._paths,i=this._parsedPaths,a=this._bindings,o=a.length-1,s=a[o];t[e[o]]=r,a[r]=s,a.pop(),i[r]=i[o],i.pop(),n[r]=n[o],n.pop()}}}Fq.prototype.isAnimationObjectGroup=!0;class Gq{constructor(e,t,r=null,n=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=r,this.blendMode=n;const i=t.tracks,a=i.length,o=new Array(a),s={endingStart:Fb,endingEnd:Fb};for(let $=0;$!==a;++$){const e=i[$].createInterpolant(null);o[$]=e,e.settings=s}this._interpolantSettings=s,this._interpolants=o,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=ek,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,r){if(e.fadeOut(t),this.fadeIn(t),r){const r=this._clip.duration,n=e._clip.duration,i=n/r,a=r/n;e.warp(1,i,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,r){return e.crossFadeFrom(this,t,r)}stopFading(){const e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,r){const n=this._mixer,i=n.time,a=this.timeScale;let o=this._timeScaleInterpolant;null===o&&(o=n._lendControlInterpolant(),this._timeScaleInterpolant=o);const s=o.parameterPositions,$=o.sampleValues;return s[0]=i,s[1]=i+r,$[0]=e/a,$[1]=t/a,this}stopWarping(){const e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,r,n){if(!this.enabled)return void this._updateWeight(e);const i=this._startTime;if(null!==i){const n=(e-i)*r;if(n<0||0===r)return;this._startTime=null,t=r*n}t*=this._updateTimeScale(e);const a=this._updateTime(t),o=this._updateWeight(e);if(o>0){const e=this._interpolants,t=this._propertyBindings;switch(this.blendMode){case wg:for(let r=0,n=e.length;r!==n;++r)e[r].evaluate(a),t[r].accumulateAdditive(o);break;case Ae:default:for(let r=0,i=e.length;r!==i;++r)e[r].evaluate(a),t[r].accumulate(n,o);}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const r=this._weightInterpolant;if(null!==r){const n=r.evaluate(e)[0];t*=n,e>r.parameterPositions[1]&&(this.stopFading(),0===n&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const r=this._timeScaleInterpolant;if(null!==r){t*=r.evaluate(e)[0],e>r.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,r=this.loop;let n=this.time+e,i=this._loopCount;const a=r===fk;if(0===e)return-1===i?n:a&&1==(1&i)?t-n:n;if(r===dk){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(n>=t)n=t;else{if(!(n<0)){this.time=n;break e}n=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===i&&(e>=0?(i=0,this._setEndings(!0,0===this.repetitions,a)):this._setEndings(0===this.repetitions,!0,a)),n>=t||n<0){const r=Math.floor(n/t);n-=t*r,i+=Math.abs(r);const o=this.repetitions-i;if(o<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,n=e>0?t:0,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===o){const t=e<0;this._setEndings(t,!t,a)}else this._setEndings(!1,!1,a);this._loopCount=i,this.time=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:r})}}else this.time=n;if(a&&1==(1&i))return t-n}return n}_setEndings(e,t,r){const n=this._interpolantSettings;r?(n.endingStart=Gb,n.endingEnd=Gb):(n.endingStart=e?this.zeroSlopeAtStart?Gb:Fb:_c,n.endingEnd=t?this.zeroSlopeAtEnd?Gb:Fb:_c)}_scheduleFading(e,t,r){const n=this._mixer,i=n.time;let a=this._weightInterpolant;null===a&&(a=n._lendControlInterpolant(),this._weightInterpolant=a);const o=a.parameterPositions,s=a.sampleValues;return o[0]=i,s[0]=t,o[1]=i+e,s[1]=r,this}}class Hq extends db{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const r=e._localRoot||this._root,n=e._clip.tracks,i=n.length,a=e._propertyBindings,o=e._interpolants,s=r.uuid,$=this._bindingsByRootAndName;let l=$[s];void 0===l&&(l={},$[s]=l);for(let c=0;c!==i;++c){const e=n[c],i=e.name;let $=l[i];if(void 0!==$)a[c]=$;else{if(void 0!==($=a[c])){null===$._cacheIndex&&(++$.referenceCount,this._addInactiveBinding($,s,i));continue}const n=t&&t._propertyBindings[c].binding.parsedPath;++($=new vq(ia.create(r,i,n),e.ValueTypeName,e.getValueSize())).referenceCount,this._addInactiveBinding($,s,i),a[c]=$}o[c].resultBuffer=$.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){const t=(e._localRoot||this._root).uuid,r=e._clip.uuid,n=this._actionsByClip[r];this._bindAction(e,n&&n.knownActions[0]),this._addInactiveAction(e,r,t)}const t=e._propertyBindings;for(let e=0,r=t.length;e!==r;++e){const r=t[e];0==r.useCount++&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let e=0,r=t.length;e!==r;++e){const r=t[e];0==--r.useCount&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return null!==t&&t<this._nActiveActions}_addInactiveAction(e,t,r){const n=this._actions,i=this._actionsByClip;let a=i[t];if(void 0===a)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,i[t]=a;else{const t=a.knownActions;e._byClipCacheIndex=t.length,t.push(e)}e._cacheIndex=n.length,n.push(e),a.actionByRoot[r]=e}_removeInactiveAction(e){const t=this._actions,r=t[t.length-1],n=e._cacheIndex;r._cacheIndex=n,t[n]=r,t.pop(),e._cacheIndex=null;const i=e._clip.uuid,a=this._actionsByClip,o=a[i],s=o.knownActions,$=s[s.length-1],l=e._byClipCacheIndex;$._byClipCacheIndex=l,s[l]=$,s.pop(),e._byClipCacheIndex=null,delete o.actionByRoot[(e._localRoot||this._root).uuid],0===s.length&&delete a[i],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let r=0,n=t.length;r!==n;++r){const e=t[r];0==--e.referenceCount&&this._removeInactiveBinding(e)}}_lendAction(e){const t=this._actions,r=e._cacheIndex,n=this._nActiveActions++,i=t[n];e._cacheIndex=n,t[n]=e,i._cacheIndex=r,t[r]=i}_takeBackAction(e){const t=this._actions,r=e._cacheIndex,n=--this._nActiveActions,i=t[n];e._cacheIndex=n,t[n]=e,i._cacheIndex=r,t[r]=i}_addInactiveBinding(e,t,r){const n=this._bindingsByRootAndName,i=this._bindings;let a=n[t];void 0===a&&(a={},n[t]=a),a[r]=e,e._cacheIndex=i.length,i.push(e)}_removeInactiveBinding(e){const t=this._bindings,r=e.binding,n=r.rootNode.uuid,i=r.path,a=this._bindingsByRootAndName,o=a[n],s=t[t.length-1],$=e._cacheIndex;s._cacheIndex=$,t[$]=s,t.pop(),delete o[i],0===Object.keys(o).length&&delete a[n]}_lendBinding(e){const t=this._bindings,r=e._cacheIndex,n=this._nActiveBindings++,i=t[n];e._cacheIndex=n,t[n]=e,i._cacheIndex=r,t[r]=i}_takeBackBinding(e){const t=this._bindings,r=e._cacheIndex,n=--this._nActiveBindings,i=t[n];e._cacheIndex=n,t[n]=e,i._cacheIndex=r,t[r]=i}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let r=e[t];return void 0===r&&((r=new gi(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=t,e[t]=r),r}_takeBackControlInterpolant(e){const t=this._controlInterpolants,r=e.__cacheIndex,n=--this._nActiveControlInterpolants,i=t[n];e.__cacheIndex=n,t[n]=e,i.__cacheIndex=r,t[r]=i}clipAction(e,t,r){const n=t||this._root,i=n.uuid;let a="string"==typeof e?ii.findByName(n,e):e;const o=null!==a?a.uuid:e,s=this._actionsByClip[o];let $=null;if(void 0===r&&(r=null!==a?a.blendMode:Ae),void 0!==s){const e=s.actionByRoot[i];if(void 0!==e&&e.blendMode===r)return e;$=s.knownActions[0],null===a&&(a=$._clip)}if(null===a)return null;const l=new Gq(this,a,t,r);return this._bindAction(l,$),this._addInactiveAction(l,o,i),l}existingAction(e,t){const r=t||this._root,n=r.uuid,i="string"==typeof e?ii.findByName(r,e):e,a=i?i.uuid:e,o=this._actionsByClip[a];return void 0!==o&&o.actionByRoot[n]||null}stopAllAction(){const e=this._actions;for(let t=this._nActiveActions-1;t>=0;--t)e[t].stop();return this}update(e){e*=this.timeScale;const t=this._actions,r=this._nActiveActions,n=this.time+=e,i=Math.sign(e),a=this._accuIndex^=1;for(let $=0;$!==r;++$){t[$]._update(n,e,i,a)}const o=this._bindings,s=this._nActiveBindings;for(let $=0;$!==s;++$)o[$].apply(a);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,r=e.uuid,n=this._actionsByClip,i=n[r];if(void 0!==i){const e=i.knownActions;for(let r=0,n=e.length;r!==n;++r){const n=e[r];this._deactivateAction(n);const i=n._cacheIndex,a=t[t.length-1];n._cacheIndex=null,n._byClipCacheIndex=null,a._cacheIndex=i,t[i]=a,t.pop(),this._removeInactiveBindingsForAction(n)}delete n[r]}}uncacheRoot(e){const t=e.uuid,r=this._actionsByClip;for(const i in r){const e=r[i].actionByRoot[t];void 0!==e&&(this._deactivateAction(e),this._removeInactiveAction(e))}const n=this._bindingsByRootAndName[t];if(void 0!==n)for(const i in n){const e=n[i];e.restoreOriginalState(),this._removeInactiveBinding(e)}}uncacheAction(e,t){const r=this.existingAction(e,t);null!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}}Hq.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class vi{constructor(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new vi(void 0===this.value.clone?this.value:this.value.clone())}}class Iq extends Dc{constructor(e,t,r=1){super(e,t),this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}Iq.prototype.isInstancedInterleavedBuffer=!0;class Jq{constructor(e,t,r,n,i){this.buffer=e,this.type=t,this.itemSize=r,this.elementSize=n,this.count=i,this.version=0}set needsUpdate(e){!0===e&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}Jq.prototype.isGLBufferAttribute=!0;function Kq(e,t,r,n){if(e.layers.test(t.layers)&&e.raycast(t,r),!0===n){const n=e.children;for(let e=0,i=n.length;e<i;e++)Kq(n[e],t,r,!0)}}class wi{constructor(e=1,t=0,r=0){return this.radius=e,this.phi=t,this.theta=r,this}set(e,t,r){return this.radius=e,this.phi=t,this.theta=r,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,r){return this.radius=Math.sqrt(e*e+t*t+r*r),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,r),this.phi=Math.acos(wa(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}const xi=new ba;class Qc{constructor(e=new ba(1/0,1/0),t=new ba(-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const r=xi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return xi.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}Qc.prototype.isBox2=!0;const yi=new aa,Ud=new aa;class Lq{constructor(e=new aa,t=new aa){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){yi.subVectors(e,this.start),Ud.subVectors(this.end,this.start);const r=Ud.dot(Ud);let n=Ud.dot(yi)/r;return t&&(n=wa(n,0,1)),n}closestPointToPoint(e,t,r){const n=this.closestPointToPointParameter(e,t);return this.delta(r).multiplyScalar(n).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}class Mq extends ja{constructor(e){super(),this.material=e,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}}Mq.prototype.isImmediateRenderObject=!0;const q=new aa;const sb=new aa,Vd=new ea,Wf=new ea;class Nq extends rf{constructor(e){const t=zi(e),r=new ga,n=[],i=[],a=new da(0,0,1),o=new da(0,1,0);for(let s=0;s<t.length;s++){const e=t[s];e.parent&&e.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),i.push(a.r,a.g,a.b),i.push(o.r,o.g,o.b))}r.setAttribute("position",new fa(n,3)),r.setAttribute("color",new fa(i,3)),super(r,new cc({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,r=this.geometry,n=r.getAttribute("position");Wf.copy(this.root.matrixWorld).invert();for(let i=0,a=0;i<t.length;i++){const e=t[i];e.parent&&e.parent.isBone&&(Vd.multiplyMatrices(Wf,e.matrixWorld),sb.setFromMatrixPosition(Vd),n.setXYZ(a,sb.x,sb.y,sb.z),Vd.multiplyMatrices(Wf,e.parent.matrixWorld),sb.setFromMatrixPosition(Vd),n.setXYZ(a+1,sb.x,sb.y,sb.z),a+=2)}r.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function zi(e){const t=[];e&&e.isBone&&t.push(e);for(let r=0;r<e.children.length;r++)t.push.apply(t,zi(e.children[r]));return t}const r=new aa,s=new da,t=new da;class Oq extends rf{constructor(e=10,t=10,r=4473924,n=8947848){r=new da(r),n=new da(n);const i=t/2,a=e/t,o=e/2,s=[],$=[];for(let c=0,p=0,h=-o;c<=t;c++,h+=a){s.push(-o,0,h,o,0,h),s.push(h,0,-o,h,0,o);const e=c===i?r:n;e.toArray($,p),p+=3,e.toArray($,p),p+=3,e.toArray($,p),p+=3,e.toArray($,p),p+=3}const l=new ga;l.setAttribute("position",new fa(s,3)),l.setAttribute("color",new fa($,3)),super(l,new cc({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}const u=new aa,v=new aa,w=new aa;const x=new aa,y=new rd;const z=new Ka;const A=new aa;let B,C;const Pq=new Float32Array(1),D=new Int32Array(Pq.buffer);const Wd=4,Rc=8,E=Math.pow(2,Rc),Ai=[.125,.215,.35,.446,.526,.582],Qq=Rc-Wd+1+Ai.length,Rq=new yc({side:ra,depthWrite:!1,depthTest:!1}),F=new Ma(new Vb(),Rq),G=new Uf,{_lodPlanes:H,_sizeLods:I,_sigmas:J}=Sq(),K=new da;const xb=(1+Math.sqrt(5))/2,ic=1/xb,L=[new aa(1,1,1),new aa(-1,1,1),new aa(1,1,-1),new aa(-1,1,-1),new aa(0,xb,ic),new aa(0,xb,-ic),new aa(ic,0,xb),new aa(-ic,0,xb),new aa(xb,ic,0),new aa(-xb,ic,0)];function Sq(){const e=[],t=[],r=[];let n=Rc;for(let i=0;i<Qq;i++){const a=Math.pow(2,n);t.push(a);let o=1/a;i>Rc-Wd?o=Ai[i-Rc+Wd-1]:0==i&&(o=0),r.push(o);const s=1/(a-1),$=-s/2,l=1+s/2,c=[$,$,l,$,l,l,$,$,l,l,$,l],p=6,h=6,u=3,g=2,d=1,m=new Float32Array(u*h*p),f=new Float32Array(g*h*p),x=new Float32Array(d*h*p);for(let e=0;e<p;e++){const t=e%3*2/3-1,r=e>2?0:-1,n=[t,r,0,t+2/3,r,0,t+2/3,r+1,0,t,r,0,t+2/3,r+1,0,t,r+1,0];m.set(n,u*h*e),f.set(c,g*h*e);const i=[e,e,e,e,e,e];x.set(i,d*h*e)}const v=new ga;v.setAttribute("position",new pa(m,u)),v.setAttribute("uv",new pa(f,g)),v.setAttribute("faceIndex",new pa(x,d)),e.push(v),n>Wd&&n--}return{_lodPlanes:e,_sizeLods:t,_sigmas:r}}Na.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(Na.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},Td.prototype.fromPoints=function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)},Oq.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},Nq.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},rb.prototype.extractUrlBase=function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),gq.extractUrlBase(e)},rb.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Qc.prototype.center=function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},Qc.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Qc.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},Qc.prototype.size=function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)},Ka.prototype.center=function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},Ka.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Ka.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},Ka.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},Ka.prototype.size=function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)},Nb.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},ud.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},Lq.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},xa.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},xa.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},xa.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},xa.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},xa.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},xa.prototype.getInverse=function(e){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},ea.prototype.extractPosition=function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},ea.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},ea.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new aa().setFromMatrixColumn(this,3)},ea.prototype.setRotationFromQuaternion=function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},ea.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},ea.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},ea.prototype.multiplyVector4=function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},ea.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},ea.prototype.rotateAxis=function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},ea.prototype.crossVector=function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},ea.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},ea.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},ea.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},ea.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},ea.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},ea.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},ea.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},ea.prototype.makeFrustum=function(e,t,r,n,i,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,n,r,i,a)},ea.prototype.getInverse=function(e){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},ab.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},ta.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},ta.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},Ob.prototype.isIntersectionBox=function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},Ob.prototype.isIntersectionPlane=function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},Ob.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},sa.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},sa.prototype.barycoordFromPoint=function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},sa.prototype.midpoint=function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},sa.prototypenormal=function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},sa.prototype.plane=function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)},sa.barycoordFromPoint=function(e,t,r,n,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),sa.getBarycoord(e,t,r,n,i)},sa.normal=function(e,t,r,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),sa.getNormal(e,t,r,n)},hc.prototype.extractAllPoints=function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},hc.prototype.extrude=function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new pb(this,e)},hc.prototype.makeGeometry=function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Od(this,e)},ba.prototype.fromAttribute=function(e,t,r){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},ba.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},ba.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},aa.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},aa.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},aa.prototype.getPositionFromMatrix=function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},aa.prototype.getScaleFromMatrix=function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},aa.prototype.getColumnFromMatrix=function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},aa.prototype.applyProjection=function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},aa.prototype.fromAttribute=function(e,t,r){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},aa.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},aa.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},la.prototype.fromAttribute=function(e,t,r){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},la.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},ja.prototype.getChildByName=function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},ja.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},ja.prototype.translate=function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},ja.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},ja.prototype.applyMatrix=function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(ja.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Ma.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(Ma.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Ah.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Ea.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(Va.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(pa.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===ad},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(ad)}}}),pa.prototype.setDynamic=function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?ad:qc),this},pa.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},pa.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},ga.prototype.addIndex=function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},ga.prototype.addAttribute=function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new pa(arguments[1],arguments[2])))},ga.prototype.addDrawCall=function(e,t,r){void 0!==r&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},ga.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},ga.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},ga.prototype.removeAttribute=function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},ga.prototype.applyMatrix=function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(ga.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Dc.prototype.setDynamic=function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?ad:qc),this},Dc.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},pb.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},pb.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},pb.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},mf.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},vi.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(ya.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new da}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=e===bg}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}}}),Object.defineProperties(lb.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),ka.prototype.clearTarget=function(e,t,r,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,r,n)},ka.prototype.animate=function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},ka.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},ka.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},ka.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},ka.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},ka.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},ka.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},ka.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},ka.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},ka.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},ka.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},ka.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},ka.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},ka.prototype.enableScissorTest=function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},ka.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},ka.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},ka.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},ka.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},ka.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},ka.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},ka.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},ka.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},ka.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},ka.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(ka.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?xg:pc}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(ph.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(Wa.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),tq.prototype.load=function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const t=this;return new pq().load(e,function(e){t.setBuffer(e)}),this},uq.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},ef.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)},ef.prototype.clear=function(e,t,r,n){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(e,t,r,n)},Jb.crossOrigin=void 0,Jb.loadTexture=function(e,t,r,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new Sd;i.setCrossOrigin(this.crossOrigin);const a=i.load(e,r,void 0,n);return t&&(a.mapping=t),a},Jb.loadTextureCube=function(e,t,r,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new _p;i.setCrossOrigin(this.crossOrigin);const a=i.load(e,r,void 0,n);return t&&(a.mapping=t),a},Jb.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},Jb.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"130"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="130");const Bi={type:"change"},Xf={type:"start"},Ci={type:"end"};class Tq extends db{constructor(e,t){super(),void 0===t&&console.warn("THREE.OrbitControls: The second parameter \"domElement\" is now mandatory."),t===document&&console.error("THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead."),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new aa,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:yb.ROTATE,MIDDLE:yb.DOLLY,RIGHT:yb.PAN},this.touches={ONE:zb.ROTATE,TWO:zb.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return r.phi},this.getAzimuthalAngle=function(){return r.theta},this.listenToKeyEvents=function(e){e.addEventListener("keydown",z),this._domElementKeyEvents=e},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(Bi),n.update(),a=o.NONE},this.update=function(){const t=new aa,l=new ta().setFromUnitVectors(e.up,new aa(0,1,0)),u=l.clone().invert(),h=new aa,$=new ta,d=2*Math.PI;return function(){const e=n.object.position;t.copy(e).sub(n.target),t.applyQuaternion(l),r.setFromVector3(t),n.autoRotate&&a===o.NONE&&T(2*Math.PI/60/60*n.autoRotateSpeed),n.enableDamping?(r.theta+=c.theta*n.dampingFactor,r.phi+=c.phi*n.dampingFactor):(r.theta+=c.theta,r.phi+=c.phi);let b=n.minAzimuthAngle,E=n.maxAzimuthAngle;return isFinite(b)&&isFinite(E)&&(b<-Math.PI?b+=d:b>Math.PI&&(b-=d),E<-Math.PI?E+=d:E>Math.PI&&(E-=d),r.theta=b<=E?Math.max(b,Math.min(E,r.theta)):r.theta>(b+E)/2?Math.max(b,r.theta):Math.min(E,r.theta)),r.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,r.phi)),r.makeSafe(),r.radius*=s,r.radius=Math.max(n.minDistance,Math.min(n.maxDistance,r.radius)),!0===n.enableDamping?n.target.addScaledVector(p,n.dampingFactor):n.target.add(p),t.setFromSpherical(r),t.applyQuaternion(u),e.copy(n.target).add(t),n.object.lookAt(n.target),!0===n.enableDamping?(c.theta*=1-n.dampingFactor,c.phi*=1-n.dampingFactor,p.multiplyScalar(1-n.dampingFactor)):(c.set(0,0,0),p.set(0,0,0)),s=1,!!(m||h.distanceToSquared(n.object.position)>i||8*(1-$.dot(n.object.quaternion))>i)&&(n.dispatchEvent(Bi),h.copy(n.object.position),$.copy(n.object.quaternion),m=!1,!0)}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",F),n.domElement.removeEventListener("pointerdown",Y),n.domElement.removeEventListener("pointercancel",I),n.domElement.removeEventListener("wheel",V),n.domElement.ownerDocument.removeEventListener("pointermove",_),n.domElement.ownerDocument.removeEventListener("pointerup",U),null!==n._domElementKeyEvents&&n._domElementKeyEvents.removeEventListener("keydown",z)};const n=this,o={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let a=o.NONE;const i=1e-6,r=new wi,c=new wi;let s=1;const p=new aa;let m=!1;const l=new ba,u=new ba,h=new ba,$=new ba,d=new ba,b=new ba,E=new ba,x=new ba,O=new ba,g=[],H={};function f(){return Math.pow(.95,n.zoomSpeed)}function T(e){c.theta-=e}function v(e){c.phi-=e}const y=function(){const e=new aa;return function(t,n){e.setFromMatrixColumn(n,0),e.multiplyScalar(-t),p.add(e)}}(),P=function(){const e=new aa;return function(t,o){!0===n.screenSpacePanning?e.setFromMatrixColumn(o,1):(e.setFromMatrixColumn(o,0),e.crossVectors(n.object.up,e)),e.multiplyScalar(t),p.add(e)}}(),A=function(){const e=new aa;return function(t,o){const a=n.domElement;if(n.object.isPerspectiveCamera){const i=n.object.position;e.copy(i).sub(n.target);let r=e.length();r*=Math.tan(n.object.fov/2*Math.PI/180),y(2*t*r/a.clientHeight,n.object.matrix),P(2*o*r/a.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(y(t*(n.object.right-n.object.left)/n.object.zoom/a.clientWidth,n.object.matrix),P(o*(n.object.top-n.object.bottom)/n.object.zoom/a.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function w(e){n.object.isPerspectiveCamera?s/=e:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*e)),n.object.updateProjectionMatrix(),m=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function L(e){n.object.isPerspectiveCamera?s*=e:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/e)),n.object.updateProjectionMatrix(),m=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function N(e){l.set(e.clientX,e.clientY)}function M(e){$.set(e.clientX,e.clientY)}function j(){if(1===g.length)l.set(g[0].pageX,g[0].pageY);else{const e=.5*(g[0].pageX+g[1].pageX),t=.5*(g[0].pageY+g[1].pageY);l.set(e,t)}}function R(){if(1===g.length)$.set(g[0].pageX,g[0].pageY);else{const e=.5*(g[0].pageX+g[1].pageX),t=.5*(g[0].pageY+g[1].pageY);$.set(e,t)}}function C(){const e=g[0].pageX-g[1].pageX,t=g[0].pageY-g[1].pageY,n=Math.sqrt(e*e+t*t);E.set(0,n)}function S(e){if(1==g.length)u.set(e.pageX,e.pageY);else{const t=K(e),n=.5*(e.pageX+t.x),o=.5*(e.pageY+t.y);u.set(n,o)}h.subVectors(u,l).multiplyScalar(n.rotateSpeed);const t=n.domElement;T(2*Math.PI*h.x/t.clientHeight),v(2*Math.PI*h.y/t.clientHeight),l.copy(u)}function k(e){if(1===g.length)d.set(e.pageX,e.pageY);else{const t=K(e),n=.5*(e.pageX+t.x),o=.5*(e.pageY+t.y);d.set(n,o)}b.subVectors(d,$).multiplyScalar(n.panSpeed),A(b.x,b.y),$.copy(d)}function D(e){const t=K(e),o=e.pageX-t.x,a=e.pageY-t.y,i=Math.sqrt(o*o+a*a);x.set(0,i),O.set(0,Math.pow(x.y/E.y,n.zoomSpeed)),w(O.y),E.copy(x)}function Y(e){!1!==n.enabled&&(0===g.length&&(n.domElement.ownerDocument.addEventListener("pointermove",_),n.domElement.ownerDocument.addEventListener("pointerup",U)),function(e){g.push(e)}(e),"touch"===e.pointerType?function(e){switch(Z(e),g.length){case 1:switch(n.touches.ONE){case zb.ROTATE:if(!1===n.enableRotate)return;j(),a=o.TOUCH_ROTATE;break;case zb.PAN:if(!1===n.enablePan)return;R(),a=o.TOUCH_PAN;break;default:a=o.NONE;}break;case 2:switch(n.touches.TWO){case zb.DOLLY_PAN:if(!1===n.enableZoom&&!1===n.enablePan)return;n.enableZoom&&C(),n.enablePan&&R(),a=o.TOUCH_DOLLY_PAN;break;case zb.DOLLY_ROTATE:if(!1===n.enableZoom&&!1===n.enableRotate)return;n.enableZoom&&C(),n.enableRotate&&j(),a=o.TOUCH_DOLLY_ROTATE;break;default:a=o.NONE;}break;default:a=o.NONE;}a!==o.NONE&&n.dispatchEvent(Xf)}(e):function(e){let t;switch(e.button){case 0:t=n.mouseButtons.LEFT;break;case 1:t=n.mouseButtons.MIDDLE;break;case 2:t=n.mouseButtons.RIGHT;break;default:t=-1;}switch(t){case yb.DOLLY:if(!1===n.enableZoom)return;!function(e){E.set(e.clientX,e.clientY)}(e),a=o.DOLLY;break;case yb.ROTATE:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===n.enablePan)return;M(e),a=o.PAN}else{if(!1===n.enableRotate)return;N(e),a=o.ROTATE}break;case yb.PAN:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===n.enableRotate)return;N(e),a=o.ROTATE}else{if(!1===n.enablePan)return;M(e),a=o.PAN}break;default:a=o.NONE;}a!==o.NONE&&n.dispatchEvent(Xf)}(e))}function _(e){!1!==n.enabled&&("touch"===e.pointerType?function(e){switch(Z(e),a){case o.TOUCH_ROTATE:if(!1===n.enableRotate)return;S(e),n.update();break;case o.TOUCH_PAN:if(!1===n.enablePan)return;k(e),n.update();break;case o.TOUCH_DOLLY_PAN:if(!1===n.enableZoom&&!1===n.enablePan)return;!function(e){n.enableZoom&&D(e),n.enablePan&&k(e)}(e),n.update();break;case o.TOUCH_DOLLY_ROTATE:if(!1===n.enableZoom&&!1===n.enableRotate)return;!function(e){n.enableZoom&&D(e),n.enableRotate&&S(e)}(e),n.update();break;default:a=o.NONE;}}(e):function(e){if(!1===n.enabled)return;switch(a){case o.ROTATE:if(!1===n.enableRotate)return;!function(e){u.set(e.clientX,e.clientY),h.subVectors(u,l).multiplyScalar(n.rotateSpeed);const t=n.domElement;T(2*Math.PI*h.x/t.clientHeight),v(2*Math.PI*h.y/t.clientHeight),l.copy(u),n.update()}(e);break;case o.DOLLY:if(!1===n.enableZoom)return;!function(e){x.set(e.clientX,e.clientY),O.subVectors(x,E),O.y>0?w(f()):O.y<0&&L(f()),E.copy(x),n.update()}(e);break;case o.PAN:if(!1===n.enablePan)return;!function(e){d.set(e.clientX,e.clientY),b.subVectors(d,$).multiplyScalar(n.panSpeed),A(b.x,b.y),$.copy(d),n.update()}(e);}}(e))}function U(e){!1!==n.enabled&&(e.pointerType,n.dispatchEvent(Ci),a=o.NONE,X(e),0===g.length&&(n.domElement.ownerDocument.removeEventListener("pointermove",_),n.domElement.ownerDocument.removeEventListener("pointerup",U)))}function I(e){X(e)}function V(e){!1===n.enabled||!1===n.enableZoom||a!==o.NONE&&a!==o.ROTATE||(e.preventDefault(),n.dispatchEvent(Xf),function(e){e.deltaY<0?L(f()):e.deltaY>0&&w(f()),n.update()}(e),n.dispatchEvent(Ci))}function z(e){!1!==n.enabled&&!1!==n.enablePan&&function(e){let t=!1;switch(e.code){case n.keys.UP:A(0,n.keyPanSpeed),t=!0;break;case n.keys.BOTTOM:A(0,-n.keyPanSpeed),t=!0;break;case n.keys.LEFT:A(n.keyPanSpeed,0),t=!0;break;case n.keys.RIGHT:A(-n.keyPanSpeed,0),t=!0;}t&&(e.preventDefault(),n.update())}(e)}function F(e){!1!==n.enabled&&e.preventDefault()}function X(e){delete H[e.pointerId];for(let t=0;t<g.length;t++)if(g[t].pointerId==e.pointerId)return void g.splice(t,1)}function Z(e){let t=H[e.pointerId];void 0===t&&(t=new ba,H[e.pointerId]=t),t.set(e.pageX,e.pageY)}function K(e){const t=e.pointerId===g[0].pointerId?g[1]:g[0];return H[t.pointerId]}n.domElement.addEventListener("contextmenu",F),n.domElement.addEventListener("pointerdown",Y),n.domElement.addEventListener("pointercancel",I),n.domElement.addEventListener("wheel",V,{passive:!1}),this.update()}}var Uq=new mf,Sc=new Ea(75,window.innerWidth/window.innerHeight,.1,1e3),Tc=new ka;Tc.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(Tc.domElement);var Di=new Tq(Sc,Tc.domElement);Sc.position.set(0,0,260),Di.update(),window.addEventListener("resize",function(){Sc.aspect=window.innerWidth/window.innerHeight,Sc.updateProjectionMatrix(),Tc.setSize(window.innerWidth,window.innerHeight)}),bb={camera:Sc,controls:Di,renderer:Tc,scene:Uq};function Vq(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Ei(e,t){for(var r=0;r<t.length;r++){var i=t[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function Wq(e,t,r){return t&&Ei(e.prototype,t),r&&Ei(e,r),e}var Yf=function(){function e(t){var r=t.color,i=void 0===r?"white":r,a=t.dithering,n=void 0===a||a,o=t.map,$=void 0!==o&&o,s=t.name,u=void 0===s?"planet":s,l=t.radius,G=void 0===l?50:l,p=t.res,v=void 0===p?50:p,h=t.emissive,c=void 0!==h&&h,d=t.sun,m=void 0!==d&&d;Vq(this,e),this.color=i,this.dithering=n,this.map=$,this.name=u,this.planetGeometry=new Pd(G,v,v),this.planetMaterial=m?new yc({color:i,dithering:n,map:$,emissive:c}):new Rf({color:i,dithering:n,map:$,emissive:c}),this.planet=new Ma(this.planetGeometry,this.planetMaterial)}return Wq(e,[{key:"move",value:function(e){var t=e.n,r=e.r1,i=e.r2,a=e.time,n=e.relative,o=void 0===n?null:n,$=(o?o.planet.position.x:0)+r*Math.cos(Zf(t,a)),s=(o?o.planet.position.z:0)+i*Math.sin(Zf(t,a));this.planet.position.set($,0,s)}},{key:"rotate",value:function(e){var t=e.n,r=e.time;this.planet.rotation.y=-Zf(t,r)}}]),e}();function Zf(e,t){return 2*Math.PI*e*t}var Xd=new Yf({radius:5,map:new Sd().load("./assets/earth-11048_1280.jpg")});bb.scene.add(Xd.planet);var Fi=new Yf({radius:1,map:new Sd().load("./assets/map-4818828_1280.jpg")});bb.scene.add(Fi.planet);var $f=new Yf({radius:30,map:new Sd().load("./assets/map-4818824_1280.jpg"),sun:!0});$f.planet.position.set(0,0,0),bb.scene.add($f.planet);var Gi=new qi("#fdfbd3",2,1e3);Gi.position.set(0,0,0),bb.scene.add(Gi),bb.camera.rotation.z=Math.PI/15;var Xq=new sq(!0),Yq=1,Yd=1,Hi=150,Ii=15;function Ji(){var $=Xq.getElapsedTime()+68;$*=Yq,Xd.rotate({n:Yd,time:$}),Xd.move({n:Yd/365,r1:Hi,r2:1.5*Hi,time:$}),Fi.move({n:Yd/30,r1:Ii,r2:1*Ii,relative:Xd,time:$}),$f.rotate({n:Yd/150,time:$}),bb.renderer.render(bb.scene,bb.camera),requestAnimationFrame(Ji)}Ji();return{"H99C":{}};});